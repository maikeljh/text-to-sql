Question,Answer,Summary,Alternative Prompt 1 (English),Alternative Prompt 2 (Bahasa Indonesia),Expected Result
List all matches where both assistant referees were from the same country. Show match_no and country_id.,"SELECT md.match_no, arm.country_id
  FROM match_details md
  JOIN asst_referee_mast arm ON md.ass_ref = arm.ass_ref_id
  GROUP BY md.match_no, arm.country_id
  HAVING COUNT(DISTINCT arm.ass_ref_id) > 1;","This SQL query identifies matches where multiple assistant referees from the same country were assigned by joining the match_details and asst_referee_mast tables. The query groups by match number and referee country, then filters for cases where more than one distinct assistant referee from the same country worked a match (HAVING COUNT(DISTINCT arm.ass_ref_id) > 1). The output shows match numbers and country IDs where this occurred, which is useful for analyzing referee assignment patterns and potential nationality biases. The query could be enhanced by: 1) Adding country names for clarity, 2) Including match dates to identify temporal patterns, or 3) Comparing with match outcomes to assess impact. It helps answer questions like 'How are assistant referees distributed across matches?' or 'Does referee nationality clustering affect match outcomes?'",List matches where both assistant referees were from the same country. Show match number and country_id.,Pertandingan mana yang dua asisten wasitnya dari negara yang sama? Tampilkan match_no dan country_id-nya.,"['match_no', 'country_id']"
List referees who officiated in multiple cities. Show referee_id and city_count.,"SELECT rm.referee_id, COUNT(DISTINCT sc.city) AS city_count
  FROM match_mast mm
  JOIN referee_mast rm ON mm.referee_id = rm.referee_id
  JOIN soccer_venue sv ON mm.venue_id = sv.venue_id
  JOIN soccer_city sc ON sv.city_id = sc.city_id
  GROUP BY rm.referee_id
  HAVING COUNT(DISTINCT sc.city) > 1;","This SQL query identifies referees who have officiated matches in more than one city by joining the 'match_mast', 'referee_mast', 'soccer_venue', and 'soccer_city' tables. It counts the distinct cities per referee and filters for those with experience in multiple locations (HAVING COUNT > 1). The output helps assess referee geographic diversity and assignment patterns, which could be valuable for referee management and tournament scheduling. Key modifications could include: 1) Adding referee names for identification, 2) Including match counts to distinguish frequency from diversity, or 3) Filtering by tournament stage to analyze assignment strategies. This query could help answer questions like: 'Which referees have the most diverse assignments?', 'How does geographic experience correlate with referee performance?', or 'Are certain referees consistently assigned to specific regions?'",List referees who have officiated matches in more than one city. Show referee_id and how many cities.,Wasit mana yang pernah memimpin pertandingan di lebih dari satu kota? Tampilkan referee_id dan jumlah kotanya.,"['referee_id', 'city_count']"
Find matches where the goalkeeper was also the team captain. Show match_no and player_id.,"SELECT DISTINCT md.match_no, md.player_gk AS player_id
  FROM match_details md
  JOIN match_captain mc ON md.match_no = mc.match_no AND md.team_id = mc.team_id
  WHERE md.player_gk = mc.player_captain;","This SQL query identifies matches where the goalkeeper also served as team captain by joining the 'match_details' and 'match_captain' tables on match number and team ID. The query returns distinct match numbers and goalkeeper IDs where the goalkeeper was also the captain. Key operations include a multi-condition JOIN and DISTINCT selection to avoid duplicates. The output reveals instances of goalkeeper-captains, which could indicate leadership structures or tactical approaches. Business applications include leadership analysis and team strategy evaluation. Potential modifications: 1) add player names for identification, 2) include match outcomes to analyze performance of goalkeeper-captains, or 3) join with team data to see if certain teams frequently use this strategy. This query helps answer questions like 'How common is it for goalkeepers to be team captains?' or 'Do teams with goalkeeper-captains perform differently?'",Which matches had goalkeepers who were also the team captains? Show match number and player ID.,Pertandingan mana aja yang kipernya juga merangkap jadi kapten? Tampilkan match_no dan player_id-nya.,"['match_no', 'player_id']"
Find all players who played for more than one team. Show player_id and team_count.,"SELECT player_id, COUNT(DISTINCT team_id) AS team_count
  FROM player_mast
  GROUP BY player_id
  HAVING COUNT(DISTINCT team_id) > 1;","This SQL query identifies players who have been part of multiple teams by counting distinct team affiliations per player from the 'player_mast' table. It groups results by player_id and filters for players with more than one team (COUNT(DISTINCT team_id) > 1) using the HAVING clause. The output helps track player mobility and team changes, which could be valuable for transfer analysis or player career tracking. Key modifications could include: 1) Adding player names and team names by joining with additional tables for better context, 2) Including time periods to analyze when players changed teams, or 3) Calculating the average duration per team to understand player stability. This query could help answer questions like: 'Which players have the most team changes?', 'Is there a correlation between team changes and performance metrics?', or 'How frequently do top players switch teams?'",Find players who played for more than one team. Show player_id and how many teams.,Pemain mana yang pernah main di lebih dari satu tim? Tampilkan player_id dan jumlah timnya.,"['player_id', 'team_count']"
Which teams used more than 2 different coaches during the tournament? Show team_id and coach_count.,"SELECT team_id, COUNT(DISTINCT coach_id) AS coach_count
  FROM team_coaches
  GROUP BY team_id
  HAVING COUNT(DISTINCT coach_id) > 2;","This SQL query identifies teams with more than 2 distinct coaches by counting unique coach IDs per team from the 'team_coaches' table. It outputs team IDs and their corresponding coach counts, highlighting teams with high coach turnover or multiple concurrent coaches. Key operations include GROUP BY team_id and HAVING with COUNT(DISTINCT) to filter teams meeting the threshold. The business relevance lies in analyzing coaching stability and team management patterns. Modifications could include: 1) joining with team names for readability, 2) adding date filters to analyze coaching changes over specific periods, or 3) comparing coach counts with team performance metrics. This query helps answer questions like 'Which teams have the most coaching changes?' or 'Is there a correlation between coach turnover and team performance?'",Which teams had more than 2 different coaches? Show team_id and how many coaches they had.,Tim mana yang pelatihnya ganti-ganti sampai lebih dari 2 kali? Tampilkan team_id dan jumlah pelatihnya.,"['team_id', 'coach_count']"
"Show the total number of unique players involved (played, booked, or scored) per match. Show match_no and total_players.","SELECT match_no, COUNT(DISTINCT player_id) AS total_players
  FROM (
  SELECT match_no, player_id FROM player_in_out
  UNION
  SELECT match_no, player_id FROM player_booked
  UNION
  SELECT match_no, player_id FROM goal_details
  ) AS combined
  GROUP BY match_no;","This SQL query calculates the total number of distinct players involved in each match by combining data from three event tables ('player_in_out', 'player_booked', and 'goal_details') using UNION operations to avoid duplicate player counts. It groups the results by match number to show player participation across all match events. The output helps analyze player engagement and match activity levels. Key modifications could include: 1) Adding match date/time information by joining with a match details table to analyze temporal patterns, 2) Filtering for specific tournament stages or competitions to compare player participation across events, or 3) Breaking down counts by event type (substitutions, bookings, goals) to understand different participation metrics. This query could answer questions like: 'Which matches had the highest player involvement?', 'How does player participation vary between tournament stages?', or 'What is the relationship between player count and match outcomes?'","For each match, how many different players were involved (played, booked, or scored)? Show match_no and total players.","Di tiap pertandingan, berapa banyak pemain yang terlibat (main, dapat kartu, atau cetak gol)? Saya mau lihat match_no dan jumlah pemainnya.","['match_no', 'total_players']"
Show assistant referees who assisted matches with above average audience. Show ass_ref_name and avg_audience.,"SELECT arm.ass_ref_name, AVG(mm.audence) AS avg_audience
  FROM match_details md
  JOIN match_mast mm ON md.match_no = mm.match_no
  JOIN asst_referee_mast arm ON md.ass_ref = arm.ass_ref_id
  GROUP BY arm.ass_ref_name
  HAVING AVG(mm.audence) > (
  SELECT AVG(audence) FROM match_mast
  );","This SQL query identifies assistant referees who officiate in matches with above-average attendance by analyzing data from the 'match_details', 'match_mast', and 'asst_referee_mast' tables. It calculates the average audience for each assistant referee's matches and compares it to the overall match average using a subquery in the HAVING clause. Key operations include multi-table JOINs, AVG aggregation, and a comparative subquery filter. The output lists assistant referee names and their average match audience, highlighting officials who work in high-attendance games. This is valuable for understanding referee assignments and match importance. Business applications include referee performance analysis and scheduling decisions. Potential modifications: 1) add match importance indicators (like finals vs group stages), 2) compare with main referee assignments, or 3) analyze by tournament phase. This query helps answer questions like 'Which assistant referees typically work high-profile matches?' or 'Does match attendance correlate with referee experience level?'",Show assistant referees who officiated matches with above average audience. I want the referee name and the average.,Asisten wasit mana yang pertandingan yang dia bantu punya penonton di atas rata-rata? Saya mau nama wasit dan rata-rata penontonnya.,"['ass_ref_name', 'avg_audience']"
Which teams had the highest average goal difference per match played? Show team_id and avg_goal_diff. Sort by avg descending,"SELECT team_id, goal_diff / match_played AS avg_goal_diff
  FROM soccer_team
  WHERE match_played > 0
  ORDER BY avg_goal_diff DESC;","This SQL query calculates and ranks teams by their average goal difference per match using data from the 'soccer_team' table. It computes the metric by dividing total goal difference by matches played, filtering out teams with no matches played. Key operations include arithmetic division, WHERE filtering, and ORDER BY for ranking. The output provides team IDs and their average goal differential, sorted from highest to lowest. This metric is valuable for assessing team dominance and consistency. Business applications include performance analysis and opponent scouting. Potential modifications: 1) join with team names for readability, 2) add win/loss records to correlate goal difference with results, or 3) filter by competition phase to analyze performance trends. This query helps answer questions like 'Which teams consistently outperform opponents?' or 'How does goal differential correlate with league position?'",Which teams have high goal difference divided by match played? I need team_id and the average value. Sort by value descending,Tim mana yang punya selisih gol dibagi dengan jumlah match yang dimainkan tinggi? Tampilkan team_id dan rata-ratanya. Urutkan dari yang tertinggi,"['team_id', 'avg_goal_diff']"
Which matches had at least one goal scored during stoppage time? Show match_no and goal_id.,"SELECT match_no, goal_id
  FROM goal_details
  WHERE goal_schedule = 'ST';","This SQL query retrieves all goals scored during standard time (non-extra time) by selecting match numbers and goal IDs from the 'goal_details' table where the goal_schedule is 'ST'. The simple query filters for regular time goals, providing a foundational dataset for analyzing scoring patterns during normal match periods. The output lists match-goal pairs that occurred in standard time, useful for comparing regular time versus extra time performance. Key modifications could include: (1) joining with player data to analyze which players score most in standard time, (2) adding team information to compare standard time scoring by team, or (3) including time-stamps to analyze scoring patterns within standard time periods. This query helps answer questions like 'What percentage of goals occur in standard time?' or 'How does standard time scoring correlate with match outcomes?'",Which matches had at least one goal scored during stoppage time (ST)? Please give match number and goal_id.,Pertandingan mana yang ada gol di waktu stoppage (ST)? Tampilkan match_no dan goal_id-nya.,"['match_no', 'goal_id']"
"List referees who officiated in matches with average audience over 40000. Show referee_id, referee_name, and avg_audience.","SELECT rm.referee_id, rm.referee_name, AVG(mm.audence) AS avg_audience
  FROM match_mast mm
  JOIN referee_mast rm ON mm.referee_id = rm.referee_id
  GROUP BY rm.referee_id, rm.referee_name
  HAVING AVG(mm.audence) > 40000;","This SQL query analyzes referee popularity by calculating the average audience size for matches officiated by each referee, using data from the 'match_mast' and 'referee_mast' tables. It joins these tables on referee_id, groups by referee details, and filters for referees with an average audience exceeding 40,000. Key operations include JOIN, GROUP BY, AVG aggregation, and HAVING for threshold filtering. The output lists referee IDs, names, and their average match audience, valuable for understanding which referees attract larger crowds. Business applications include referee assignment strategies and marketing decisions. Potential modifications: 1) add match dates to analyze trends over time, 2) incorporate match outcomes to assess if popular referees influence results, or 3) join with venue data to control for location effects. This query helps answer questions like 'Which referees are associated with higher attendance?' or 'Does referee popularity vary by season?'","Which referees handled matches with average audience over 40,000? I want referee_id, name, and average audience.","Wasit mana yang rata-rata penonton di pertandingannya lebih dari 40 ribu? Tampilkan referee_id, nama wasit, dan rata-rata penonton.","['referee_id', 'referee_name', 'avg_audience']"
"Which players have been involved in both goals and bookings? Show player_id, player_name, goal_count, booking_count.","SELECT
  p.player_id,
  p.player_name,
  COUNT(g.goal_id) AS goal_count,
  COUNT(b.match_no) AS booking_count
FROM player_mast AS p
LEFT JOIN goal_details AS g ON p.player_id = g.player_id
LEFT JOIN player_booked AS b ON p.player_id = b.player_id
GROUP BY p.player_id, p.player_name
HAVING COUNT(g.goal_id) > 0 AND COUNT(b.match_no) > 0;","This SQL query identifies players who have both scored goals and received bookings by joining the 'player_mast' table with 'goal_details' and 'player_booked' tables. It counts total goals and bookings per player (counting multiple goals/bookings in the same match) and filters for players with at least one goal and one booking. The output provides player IDs, names, and their goal and booking counts, useful for analyzing the relationship between offensive performance and disciplinary actions. Key modifications could include: (1) using COUNT(DISTINCT) for match-level counting instead of total incidents, (2) adding team information to compare disciplinary patterns across clubs, or (3) including match dates to analyze trends over time. This query helps answer questions like 'Which productive scorers also have disciplinary issues?' or 'Is there a correlation between goal scoring and booking frequency?'","Which players were both involved in goals and received bookings? Show their player_id, name, and how many goals and bookings.","Siapa saja pemain yang pernah cetak gol dan juga kena kartu? Tampilkan player_id, nama, total gol dan jumlah kartu.","['player_id', 'player_name', 'goal_count', 'booking_count']"
"Which players were substituted in and out in the same match? Show player_id, player_name, and match_no.","SELECT DISTINCT pio.player_id, pm.player_name, pio.match_no
  FROM player_in_out pio
  JOIN player_mast pm ON pio.player_id = pm.player_id
  WHERE EXISTS (
  SELECT 1 FROM player_in_out p2
  WHERE p2.player_id = pio.player_id AND p2.match_no = pio.match_no
  AND p2.in_out != pio.in_out
  );","This SQL query identifies players who were both substituted in and out during the same match by analyzing the player_in_out table. The query joins with player_mast to get player names and uses an EXISTS subquery to find players with both 'in' and 'out' records for the same match. The output lists distinct player IDs, names, and match numbers where this substitution pattern occurred, which helps analyze player rotation strategies and match dynamics. The query could be modified by: 1) Adding match details to understand game context, 2) Calculating time played for these players, or 3) Comparing with match outcomes to assess tactical effectiveness. This helps answer questions like 'Which players frequently get rotated during matches?' or 'How common are temporary substitutions in competitive games?'","Show me which players were both substituted in and out in the same game. Include player_id, name, and match number.","Tampilkan pemain yang pernah diganti masuk dan juga diganti keluar di satu pertandingan yang sama. Sertakan player_id, nama, dan nomor pertandingannya.","['player_id', 'player_name', 'match_no']"
"Identify teams that conceded more goals than they scored. Show team_id, goal_for, goal_agnst.","SELECT team_id, goal_for, goal_agnst
  FROM soccer_team
  WHERE goal_agnst > goal_for;","This SQL query identifies teams that have conceded more goals than they've scored by analyzing the 'soccer_team' table. It filters for teams where goals against (goal_agnst) exceed goals scored (goal_for), returning the team IDs and both goal metrics. The output helps pinpoint underperforming teams with negative goal differentials, which is valuable for performance analysis and team evaluation. Key modifications could include: 1) Adding team names for better identification, 2) Including match counts to distinguish between many close losses vs few heavy defeats, or 3) Calculating goal differential percentages for relative performance comparison. This query could help answer questions like: 'Which teams have the worst defensive records?', 'How many teams finished with negative goal differentials?', or 'What's the average goal deficit for underperforming teams?'","Which teams let in more goals than they scored? I need team_id, goal_for, and goal_agnst.","Tim mana yang kebobolannya lebih banyak daripada gol yang mereka cetak? Tampilkan team_id, goal_for, dan goal_agnst.","['team_id', 'goal_for', 'goal_agnst']"
"List venues with the highest audience attendance in any match. Show venue_name, city, and max_audience. Sort from highest to lowest","SELECT sv.venue_name, sc.city, MAX(mm.audence) AS max_audience
  FROM match_mast mm
  JOIN soccer_venue sv ON mm.venue_id = sv.venue_id
  JOIN soccer_city sc ON sv.city_id = sc.city_id
  GROUP BY sv.venue_name, sc.city
  ORDER BY max_audience DESC;","This SQL query identifies the maximum audience recorded for each venue by joining the 'match_mast', 'soccer_venue', and 'soccer_city' tables, grouping by venue name and city, and ordering the results by maximum audience in descending order. The query leverages a JOIN operation to link venue and city details with match data, and an aggregation (MAX) to find peak attendance. The output provides a ranked list of venues by their highest recorded attendance, which is valuable for capacity planning, marketing analysis, and venue performance evaluation. Key modifications could include: (1) filtering by date range to analyze audience trends over time, (2) adding average audience alongside maximum to compare consistency versus peak performance, or (3) including country data by joining additional tables to analyze geographic trends. This query could answer questions like 'Which venues have the highest capacity utilization?' or 'Where are the most attended matches typically held?'.","Show me the venues where audience attendance reached the highest. I want venue_name, the city, and the max audience number. Sort from highest.","Venue mana saja yang penontonnya banyak? Saya mau lihat nama venue, kota, dan jumlah penonton terbanyaknya. Urutkan dari yang terbanyak.","['venue_name', 'city', 'max_audience']"
"Find referees who officiated more than 3 matches. Show referee_id, referee_name, and total_matches.","SELECT rm.referee_id, rm.referee_name, COUNT(*) AS total_matches
  FROM match_mast mm
  JOIN referee_mast rm ON mm.referee_id = rm.referee_id
  GROUP BY rm.referee_id, rm.referee_name
  HAVING COUNT(*) > 3;","This SQL query identifies the most active referees by counting the number of matches officiated by each referee from the match_mast and referee_mast tables. The query joins these tables on referee_id, groups by referee information, and filters for referees who have officiated more than 3 matches using HAVING COUNT(*) > 3. The output lists referee IDs, names, and their total match counts, which is useful for assessing referee workload and experience levels. The query could be modified by: 1) Adding match dates to analyze referee assignments over time, 2) Including match stages (group/knockout) to see referee distribution, or 3) Calculating average cards per match to assess strictness. This helps answer questions like 'Which referees are most frequently assigned?' or 'Is there correlation between referee experience and match outcomes?'","Can you list referees who led more than 3 matches? I want their referee_id, name, and total matches they officiated.","Saya ingin tahu wasit yang memimpin lebih dari 3 pertandingan. Tampilkan referee_id, nama wasit, dan jumlah pertandingan.","['referee_id', 'referee_name', 'total_matches']"
"Show teams with more goals for than against in the tournament. Show team_id, goal_for, goal_agnst, and goal_diff.","SELECT team_id, goal_for, goal_agnst, goal_diff
  FROM soccer_team
  WHERE goal_for > goal_agnst;","This SQL query identifies teams with a positive goal difference by selecting records from the soccer_team table where goals scored (goal_for) exceed goals conceded (goal_agnst). The query outputs team_id along with goal statistics (goals for, against, and difference), highlighting teams with effective offensive performance relative to their defense. This basic performance metric is useful for initial team strength assessment. The query could be enhanced by: 1) Joining with team_mast to include team names, 2) Adding win/loss records for comprehensive performance analysis, or 3) Filtering for specific leagues/tournaments. It helps answer fundamental questions like 'Which teams have positive goal differences?' or 'What is the distribution of goal differences across the league?'","Can you list teams that scored more goals than they conceded in the tournament? I want team_id, goal_for, goal_agnst, and goal_diff.","Tampilkan tim-tim yang jumlah gol masuknya lebih banyak dari gol kebobolannya. Saya butuh team_id, goal_for, goal_agnst, dan goal_diff.","['team_id', 'goal_for', 'goal_agnst', 'goal_diff']"
Find players who were both captains and received a red card. Show player_id and match_no.,"SELECT DISTINCT pb.player_id, pb.match_no
  FROM player_booked pb
  JOIN match_captain mc ON pb.player_id = mc.player_captain AND pb.match_no = mc.match_no
  WHERE pb.sent_off = 'Y';","This SQL query identifies team captains who were sent off (received red cards) in matches by joining the 'player_booked' and 'match_captain' tables. It filters for bookings where sent_off = 'Y' and matches these with captain records, returning distinct player-match combinations. The output reveals leadership discipline issues during matches, which could impact team performance and strategy. Key modifications could include: 1) Adding player names and team information for better context, 2) Including match stage or importance to analyze if send-offs correlate with high-pressure situations, or 3) Calculating time of send-off to assess match impact. This query could help answer questions like: 'How often are captains disciplined?', 'Does captain send-off frequency correlate with team performance?', or 'Which tournaments/stages see the most captain send-offs?'",List players who were captains and also got a red card. Show their player_id and match number.,Pemain mana yang jadi kapten dan juga kena kartu merah? Saya butuh player_id dan match_no-nya.,"['player_id', 'match_no']"
Which coaches were associated with teams that never won a match? Show coach_id and team_id.,"SELECT DISTINCT tc.coach_id, tc.team_id
  FROM team_coaches tc
  JOIN soccer_team st ON tc.team_id = st.team_id
  WHERE st.won = 0;","This SQL query identifies coaches of teams that have not won any matches by joining the 'team_coaches' and 'soccer_team' tables, filtering for teams with zero wins (won = 0). The query returns distinct coach-team pairs where the team has no victories, using DISTINCT to avoid duplicate entries. This analysis could help evaluate coaching performance or identify struggling teams. Key modifications could include: 1) Adding coach names and team names for better identification by joining additional tables, 2) Including the number of matches played to distinguish between new coaches and consistently losing teams, or 3) Filtering by season or tournament to analyze performance trends over time. This query could help answer questions like: 'Which coaches are managing winless teams?', 'Are there particular team-coach combinations that consistently underperform?', or 'How many matches have these coaches been in charge without a win?'",Which coaches worked with teams that never won a single match? Show coach_id and team_id.,Pelatih mana yang timnya nggak pernah menang? Saya mau lihat coach_id dan team_id-nya.,"['coach_id', 'team_id']"
Find the top 3 referees with the highest total audience in matches officiated. Show referee_id and total_audience.,"SELECT referee_id, SUM(audence) AS total_audience
  FROM match_mast
  GROUP BY referee_id
  ORDER BY total_audience DESC
  LIMIT 3;","This SQL query identifies the top 3 referees who have officiated matches with the highest total audience attendance by summing the audience values from the 'match_mast' table grouped by referee_id. The query employs aggregation (SUM), grouping (GROUP BY), sorting (ORDER BY DESC), and limiting (LIMIT 3) operations to produce its results. The output ranks referees by the cumulative audience size of matches they've overseen, which could be valuable for assessing referee experience with high-profile matches. Key modifications could include: 1) Adding referee names by joining with a referees table for better identification, 2) Calculating average audience per match to account for referees who've officiated many matches, or 3) Filtering by tournament or season to analyze trends over time. This query could help answer questions like: 'Which referees have the most experience with high-attendance matches?', 'Is there a correlation between audience size and referee assignment to important matches?', or 'How does audience distribution vary among different referees?'",List top 3 referees who officiated matches with the highest total audience. Show referee_id and audience sum.,Siapa 3 wasit dengan total penonton terbanyak di semua pertandingan yang mereka pimpin? Tampilkan referee_id dan total penontonnya.,"['referee_id', 'total_audience']"
"Which venues hosted more than 3 matches? Show venue_id, venue_name, and match_count.","SELECT sv.venue_id, sv.venue_name, COUNT(*) AS match_count
  FROM match_mast mm
  JOIN soccer_venue sv ON mm.venue_id = sv.venue_id
  GROUP BY sv.venue_id, sv.venue_name
  HAVING COUNT(*) > 3;","This SQL query identifies venues that have hosted more than 3 matches by joining the 'match_mast' and 'soccer_venue' tables on 'venue_id', grouping by venue details, and applying a HAVING clause to filter venues with over 3 matches. The output includes venue ID, name, and match count, useful for analyzing high-activity venues. Key operations include JOIN, GROUP BY, and COUNT aggregation. Business relevance lies in understanding venue utilization for event planning or resource allocation. Modifications could include: 1) adding match dates to analyze temporal patterns, 2) joining with team data to see which teams frequently play at these venues, or 3) calculating average attendance per venue by incorporating attendance figures. This query helps answer questions like 'Which venues are most frequently used?' or 'Where should we focus maintenance efforts?'","Which venues hosted more than 3 different matches? Please show venue_id, venue name, and match count.","Venue mana yang jadi tempat 3 pertandingan atau lebih? Tampilkan venue_id, nama venue, dan jumlah pertandingan.","['venue_id', 'venue_name', 'match_count']"
Find players who were never substituted out. Show player_id and player_name.,"SELECT DISTINCT pm.player_id, pm.player_name
  FROM player_mast pm
  WHERE NOT EXISTS (
  SELECT 1 FROM player_in_out pio
  WHERE pio.player_id = pm.player_id AND pio.in_out = 'O'
  );","This SQL query identifies players who were never substituted out of a match by checking for absence in the player_in_out table with in_out = 'O'. The query uses a NOT EXISTS subquery against the player_mast table to find players without any substitution-out records. The output lists distinct player IDs and names who played full matches without being substituted out, which helps analyze player endurance and coach confidence in players. The query could be enhanced by: 1) Adding match count to show how often these players completed full matches, 2) Including position information to see if certain roles are more likely to play full matches, or 3) Filtering by tournament stage to analyze substitution patterns in critical matches. It helps answer questions like 'Which players consistently play full matches?' or 'How common are non-substituted players in the tournament?'",Find the players who were never substituted out in any match. Please show player_id and their name.,Tampilkan pemain yang tidak pernah diganti keluar selama pertandingan. Sertakan player_id dan nama pemainnya.,"['player_id', 'player_name']"
"Find cities that hosted matches with over 50000 audience. Show city, match_no, and audience.","SELECT sc.city, mm.match_no, mm.audence
  FROM match_mast mm
  JOIN soccer_venue sv ON mm.venue_id = sv.venue_id
  JOIN soccer_city sc ON sv.city_id = sc.city_id
  WHERE mm.audence > 50000;","This SQL query retrieves match details for high-attendance events by joining the 'match_mast', 'soccer_venue', and 'soccer_city' tables to identify matches with audiences exceeding 50,000. It outputs the city, match number, and audience count, providing insights into popular match locations. Key operations include multi-table JOINs and a WHERE filter on audience size. The business relevance lies in identifying high-traffic venues for marketing or operational planning. Modifications could include: 1) adding team information to see which matches draw large crowds, 2) calculating average audience per city by aggregating results, or 3) comparing weekend vs weekday attendance by incorporating match dates. This query helps answer questions like 'Which cities host the most attended matches?' or 'What is the threshold for a high-attendance event?'","List cities that had matches with more than 50,000 audience members. Show city, match_no, and audience.","Kota mana yang punya pertandingan dengan penonton lebih dari 50 ribu? Saya butuh nama kota, nomor pertandingan, dan jumlah penonton.","['city', 'match_no', 'audence']"
List matches where all goals were scored in the first half. Show match_no and goal_count.,"SELECT match_no, COUNT(*) AS goal_count
  FROM goal_details
  GROUP BY match_no
  HAVING SUM(CASE WHEN goal_half = 2 THEN 1 ELSE 0 END) = 0;","This SQL query identifies matches where all goals were scored in the first half by analyzing data from the 'goal_details' table. It counts total goals per match and uses a HAVING clause with a conditional SUM to filter for matches with zero second-half goals. Key operations include GROUP BY match_no, COUNT aggregation, and a CASE expression within the HAVING filter. The output shows match numbers and their total goal counts for matches with exclusively first-half scoring. This is valuable for analyzing scoring patterns and team performance across match halves. Business applications include tactical analysis and betting market insights. Potential modifications: 1) add team information to identify which teams tend to score early, 2) include match dates to analyze temporal trends, or 3) compare with match outcomes to see if early scoring correlates with results. This query helps answer questions like 'Which matches featured all goals in the first half?' or 'How common are matches without second-half goals?'",Which matches had all goals scored in the first half only? Show match number and number of goals.,Pertandingan mana yang semua golnya tercipta di babak pertama? Saya mau lihat match_no dan jumlah golnya.,"['match_no', 'goal_count']"
Identify coaches who coached multiple teams. Show coach_id and total_teams.,"SELECT coach_id, COUNT(DISTINCT team_id) AS total_teams
  FROM team_coaches
  GROUP BY coach_id
  HAVING COUNT(DISTINCT team_id) > 1;","This SQL query identifies coaches who have managed more than one team by analyzing data from the 'team_coaches' table. It counts the distinct number of teams each coach has been associated with and filters for coaches with multiple team assignments using GROUP BY and HAVING clauses. The output provides coach IDs and their total number of teams managed, highlighting experienced coaches with diverse team experience. This is valuable for analyzing coaching careers and team management patterns. Business applications include coaching recruitment and team strategy development. Potential modifications: 1) add coach names for identification, 2) include time periods to analyze coaching timelines, or 3) join with team performance data to assess coaching impact across different teams. This query helps answer questions like 'Which coaches have the most diverse team experience?' or 'Is there a correlation between number of teams coached and career success?'",Which coaches were assigned to more than one team? Show coach_id and how many teams.,Pelatih mana yang pernah melatih lebih dari satu tim? Saya mau lihat coach_id dan jumlah timnya.,"['coach_id', 'total_teams']"
"List players who scored goals in matches they were also substituted out. Show unique player_id, player_name, and match_no.","SELECT DISTINCT gd.player_id, pm.player_name, gd.match_no
  FROM goal_details gd
  JOIN player_in_out pio ON gd.player_id = pio.player_id AND gd.match_no = pio.match_no AND pio.in_out = 'O'
  JOIN player_mast pm ON gd.player_id = pm.player_id;","This SQL query identifies players who scored goals after being substituted out of matches by joining the 'goal_details', 'player_in_out', and 'player_mast' tables. The query returns distinct player IDs, names, and match numbers where a player scored despite being recorded as substituted out (in_out = 'O'). Key operations include a multi-condition JOIN on both player_id and match_no with an additional filter for substitution status. The output highlights unusual scoring events that may indicate data anomalies or special game situations. Business applications include data quality verification and player performance analysis. Potential modifications: 1) add goal timing to check if goals occurred after substitution, 2) include team information to analyze patterns by club, or 3) filter by tournament stage to see if this occurs more in critical matches. This query helps answer questions like 'Are there instances of players scoring after being substituted?' or 'How reliable are our substitution recording systems?'","List players who scored and also got subbed out in the same game. Show unique player_id, name, and match number.","Pemain mana yang cetak gol lalu diganti keluar di pertandingan yang sama? Saya mau lihat unik player_id, nama, dan match_no.","['player_id', 'player_name', 'match_no']"
