Question ID,Question,Generated SQL Query,Expected SQL Query,Execution Accuracy
1.1,Can you give me actors whose first name is Scarlett?,SELECT * FROM actor WHERE first_name = 'Scarlett';,SELECT * FROM actor WHERE first_name = 'Scarlett';,1.0
1.2,Aktor siapa aja yang nama depannya 'Scarlett'?,"SELECT first_name, last_name FROM actor WHERE first_name = 'Scarlett';",SELECT * FROM actor WHERE first_name = 'Scarlett';,1.0
2.1,"Hey, how many unique last names do we have among actors?",SELECT COUNT(DISTINCT last_name) FROM actor;,SELECT COUNT(DISTINCT last_name) FROM actor;,1.0
2.2,Ada berapa banyak nama belakang aktor yang berbeda?,SELECT COUNT(DISTINCT last_name) FROM actor;,SELECT COUNT(DISTINCT last_name) FROM actor;,1.0
3.1,Who is the actor that shows up in the most movies?,"SELECT a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id GROUP BY a.actor_id ORDER BY count(*) DESC LIMIT 1;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    COUNT(fa.film_id) AS film_count
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY 
    a.actor_id
ORDER BY 
    film_count DESC
LIMIT 1;",1.0
3.2,Aktor mana yang muncul di film paling banyak?,"SELECT a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id GROUP BY a.actor_id ORDER BY count(*) DESC LIMIT 1;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    COUNT(fa.film_id) AS film_count
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY 
    a.actor_id
ORDER BY 
    film_count DESC
LIMIT 1;",1.0
4.1,What are the top 5 movie genres based on total revenue?,"SELECT c.name, SUM(p.amount) AS total_revenue
FROM payment p
JOIN rental r ON p.rental_id = r.rental_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name
ORDER BY total_revenue DESC
LIMIT 5;","SELECT 
    c.name AS genre, 
    SUM(p.amount) AS gross_revenue
FROM 
    category c
    JOIN film_category fc ON c.category_id = fc.category_id
    JOIN inventory i ON fc.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    c.name
ORDER BY 
    gross_revenue DESC
LIMIT 5;",1.0
4.2,Genre film apa yang paling besar total penghasilannya? Kasih 5 teratas ya.,"SELECT c.name, SUM(p.amount) AS total_revenue
FROM payment p
JOIN rental r ON p.rental_id = r.rental_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name
ORDER BY total_revenue DESC
LIMIT 5;","SELECT 
    c.name AS genre, 
    SUM(p.amount) AS gross_revenue
FROM 
    category c
    JOIN film_category fc ON c.category_id = fc.category_id
    JOIN inventory i ON fc.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    c.name
ORDER BY 
    gross_revenue DESC
LIMIT 5;",1.0
5.1,How much money has each store made from rentals?,"SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.manager_staff_id = st.staff_id
JOIN rental r ON st.staff_id = r.staff_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY s.store_id;","SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.store_id = st.store_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id
ORDER BY total_revenue DESC;",0.0
5.2,Tiap toko dapet pemasukan berapa dari rental?,"SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN rental r ON s.store_id = r.staff_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY s.store_id;","SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.store_id = st.store_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id
ORDER BY total_revenue DESC;",0.0
6.1,What language is most commonly used in our movies?,SELECT name FROM language WHERE language_id = (SELECT language_id FROM film GROUP BY language_id ORDER BY COUNT(*) DESC LIMIT 1);,"SELECT 
    l.name
FROM 
    language l
    JOIN film f ON l.language_id = f.language_id
GROUP BY 
    l.name
ORDER BY
    COUNT(f.film_id) DESC
LIMIT 1;",1.0
6.2,Bahasa apa yang paling sering dipakai di film?,"SELECT l.name
FROM film f
JOIN language l ON f.language_id = l.language_id
GROUP BY l.name
ORDER BY COUNT(*) DESC
LIMIT 1;","SELECT 
    l.name
FROM 
    language l
    JOIN film f ON l.language_id = f.language_id
GROUP BY 
    l.name
ORDER BY
    COUNT(f.film_id) DESC
LIMIT 1;",1.0
7.1,"Who are the top 5 customers based on how many movies they've rented? Show the customer ID, first name, last name, and number of rented movies.","SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) AS number_of_rentals
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    number_of_rentals DESC
LIMIT 5;","SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) as total_rentals
FROM
    customer c
    JOIN rental r ON c.customer_id= r.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    total_rentals DESC
LIMIT 5;",1.0
7.2,"Siapa 5 pelanggan yang paling sering nyewa film? Tampilkan ID pelanggan, nama depan, nama belakang, dan jumlah film yang disewa.","SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) AS total_rentals
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    total_rentals DESC
LIMIT 5;","SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) as total_rentals
FROM
    customer c
    JOIN rental r ON c.customer_id= r.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    total_rentals DESC
LIMIT 5;",1.0
8.1,"Which customers have rented from more than 3 categories? Show the customer ID, first name, last name, and the number of categories they've rented from.","SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(DISTINCT fc.category_id) AS num_categories_rented
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
JOIN 
    film_category fc ON f.film_id = fc.film_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(DISTINCT fc.category_id) > 3;","SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(DISTINCT fc.category_id) AS category_count
FROM 
    customer c
    JOIN rental r ON c.customer_id = r.customer_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film_category fc ON i.film_id = fc.film_id
GROUP BY 
    c.customer_id
HAVING 
    COUNT(DISTINCT fc.category_id) > 3;",1.0
8.2,"Pelanggan mana aja yang udah nyewa film dari lebih dari 3 kategori? Tampilkan ID pelanggan, nama depan, nama belakang, dan jumlah kategori yang disewa.","SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(DISTINCT fc.category_id) AS total_categories_rented
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT fc.category_id) > 3;","SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(DISTINCT fc.category_id) AS category_count
FROM 
    customer c
    JOIN rental r ON c.customer_id = r.customer_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film_category fc ON i.film_id = fc.film_id
GROUP BY 
    c.customer_id
HAVING 
    COUNT(DISTINCT fc.category_id) > 3;",1.0
9.1,"Are there any movies in our collection that no one has ever rented? I need the film ID, title, and release year.","SELECT f.film_id, f.title, f.release_year FROM film f LEFT JOIN inventory i ON f.film_id = i.film_id LEFT JOIN rental r ON i.inventory_id = r.inventory_id WHERE r.rental_id IS NULL;","SELECT 
    f.film_id, 
    f.title, 
    f.release_year
FROM 
    film f
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.rental_id IS NULL;",1.0
9.2,"Film apa aja yang belum pernah disewa sama sekali? Aku butuh film ID, judul, dan tahun rilis","SELECT f.film_id, f.title, EXTRACT(YEAR FROM f.last_update) AS release_year
FROM film f
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL;","SELECT 
    f.film_id, 
    f.title, 
    f.release_year
FROM 
    film f
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.rental_id IS NULL;",1.0
10.1,"How much total revenue has each actor generated based on the movies they were in? Show the actor ID, first name, last name, and total revenue.","SELECT 
    a.actor_id,
    a.first_name,
    a.last_name,
    SUM(f.rental_rate) as total_revenue
FROM 
    actor a
JOIN 
    film_actor fa ON a.actor_id = fa.actor_id
JOIN 
    film f ON fa.film_id = f.film_id
GROUP BY 
    a.actor_id, a.first_name, a.last_name
ORDER BY 
    total_revenue DESC;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    SUM(p.amount) AS total_revenue
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
    JOIN inventory i ON fa.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    a.actor_id
ORDER BY 
    total_revenue DESC;",0.0
10.2,"Berapa total pemasukan dari tiap aktor, berdasarkan film yang mereka bintangi? Tampilkan ID aktor, nama depan, nama belakang, dan total pendapatan.","SELECT 
    a.actor_id,
    a.first_name,
    a.last_name,
    SUM(f.rental_rate) AS total_revenue
FROM 
    actor a
JOIN 
    film_actor fa ON a.actor_id = fa.actor_id
JOIN 
    film f ON fa.film_id = f.film_id
GROUP BY 
    a.actor_id, a.first_name, a.last_name
ORDER BY 
    a.actor_id;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    SUM(p.amount) AS total_revenue
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
    JOIN inventory i ON fa.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    a.actor_id
ORDER BY 
    total_revenue DESC;",0.0
11.1,"Which store has earned the most revenue, and what is the name of the staff member managing it?","SELECT s.store_id, s.first_name, s.last_name
FROM staff s
JOIN store st ON s.staff_id = st.manager_staff_id
ORDER BY st.store_id DESC
LIMIT 1;","SELECT 
    s.store_id, 
    CONCAT(st.first_name, ' ', st.last_name) AS manager_name, 
    SUM(p.amount) AS total_revenue
FROM 
    store s
JOIN staff st ON s.manager_staff_id = st.staff_id
JOIN inventory i ON s.store_id = i.store_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    s.store_id, manager_name
ORDER BY 
    total_revenue DESC
LIMIT 1;",0.0
11.2,"Toko mana yang penghasilannya paling tinggi, dan siapa nama staf yang megang toko itu?","SELECT s.first_name, s.last_name, SUM(p.amount) AS total_revenue
FROM staff s
JOIN store st ON s.staff_id = st.manager_staff_id
JOIN payment p ON st.store_id = p.staff_id
GROUP BY s.staff_id, s.first_name, s.last_name
ORDER BY total_revenue DESC
LIMIT 1;","SELECT 
    s.store_id, 
    CONCAT(st.first_name, ' ', st.last_name) AS manager_name, 
    SUM(p.amount) AS total_revenue
FROM 
    store s
JOIN staff st ON s.manager_staff_id = st.staff_id
JOIN inventory i ON s.store_id = i.store_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    s.store_id, manager_name
ORDER BY 
    total_revenue DESC
LIMIT 1;",0.0
12.1,"Which customers have rented the same film more than once? Show the customer ID, first name, last name, film title, and the number of times they rented it.","SELECT c.customer_id, c.first_name, c.last_name, f.title, COUNT(*) AS rental_count
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
GROUP BY c.customer_id, c.first_name, c.last_name, f.title
HAVING COUNT(*) > 1
ORDER BY c.customer_id, rental_count DESC;","WITH customer_film_rentals AS (
    SELECT 
        r.customer_id, 
        f.film_id, 
        f.title, 
        COUNT(r.rental_id) AS rental_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film f ON i.film_id = f.film_id
    GROUP BY 
        r.customer_id, f.film_id
    HAVING 
        COUNT(r.rental_id) > 1
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    cfr.title, 
    cfr.rental_count
FROM 
    customer c
    JOIN customer_film_rentals cfr ON c.customer_id = cfr.customer_id;",1.0
12.2,"Siapa aja pelanggan yang nyewa film yang sama lebih dari sekali? Tampilkan ID pelanggan, nama depan, nama belakang, judul film, dan jumlah penyewaan.","SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    f.title,
    COUNT(*) AS rental_count
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name, f.title
HAVING 
    COUNT(*) > 1;","WITH customer_film_rentals AS (
    SELECT 
        r.customer_id, 
        f.film_id, 
        f.title, 
        COUNT(r.rental_id) AS rental_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film f ON i.film_id = f.film_id
    GROUP BY 
        r.customer_id, f.film_id
    HAVING 
        COUNT(r.rental_id) > 1
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    cfr.title, 
    cfr.rental_count
FROM 
    customer c
    JOIN customer_film_rentals cfr ON c.customer_id = cfr.customer_id;",1.0
13.1,"Which high replacement cost movies are also in the top 5 most rented categories? Show the film ID, title, replacement cost, and category name.","WITH Top5Categories AS (
  SELECT
    category_id,
    COUNT(*) AS rental_count
  FROM rental
  JOIN inventory
    ON rental.inventory_id = inventory.inventory_id
  JOIN film_category
    ON inventory.film_id = film_category.film_id
  GROUP BY
    category_id
  ORDER BY
    rental_count DESC
  LIMIT 5
), HighReplacementCostFilms AS (
  SELECT
    film_id,
    title,
    replacement_cost
  FROM film
  WHERE
    replacement_cost > (
      SELECT
        AVG(replacement_cost)
      FROM film
    )
)
SELECT
  hrcf.film_id,
  hrcf.title,
  hrcf.replacement_cost,
  c.name AS category_name
FROM HighReplacementCostFilms AS hrcf
JOIN film_category AS fc
  ON hrcf.film_id = fc.film_id
JOIN category AS c
  ON fc.category_id = c.category_id
JOIN Top5Categories AS t5c
  ON fc.category_id = t5c.category_id
ORDER BY
  hrcf.replacement_cost DESC;","WITH top_categories AS (
    SELECT 
        fc.category_id, 
        COUNT(r.rental_id) AS rental_count
    FROM 
        film_category fc
        JOIN inventory i ON fc.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        fc.category_id
    ORDER BY 
        rental_count DESC
    LIMIT 5
),
top_films AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.replacement_cost, 
        c.name AS category_name
    FROM 
        film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN category c ON fc.category_id = c.category_id
        JOIN top_categories tc ON fc.category_id = tc.category_id
    ORDER BY 
        f.replacement_cost DESC
)
SELECT * FROM top_films;",0.0
13.2,"Film apa yang biaya gantinya paling mahal dan masuk 5 kategori film yang paling sering disewa? Tampilkan ID film, judul, biaya ganti, dan nama kategori.","SELECT f.film_id, f.title, f.replacement_cost, c.name AS category_name
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
WHERE c.category_id IN (SELECT category_id FROM film_category GROUP BY category_id ORDER BY COUNT(*) DESC LIMIT 5)
ORDER BY f.replacement_cost DESC
LIMIT 1;","WITH top_categories AS (
    SELECT 
        fc.category_id, 
        COUNT(r.rental_id) AS rental_count
    FROM 
        film_category fc
        JOIN inventory i ON fc.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        fc.category_id
    ORDER BY 
        rental_count DESC
    LIMIT 5
),
top_films AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.replacement_cost, 
        c.name AS category_name
    FROM 
        film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN category c ON fc.category_id = c.category_id
        JOIN top_categories tc ON fc.category_id = tc.category_id
    ORDER BY 
        f.replacement_cost DESC
)
SELECT * FROM top_films;",0.0
14.1,Which pairs of actors have worked together in the most films? Show the pairs of actors and the number of films they've appeared in together.,"SELECT a1.first_name || ' ' || a1.last_name AS actor1, a2.first_name || ' ' || a2.last_name AS actor2, COUNT(*) AS films_together
FROM film_actor AS fa1
JOIN actor AS a1 ON fa1.actor_id = a1.actor_id
JOIN film AS f ON fa1.film_id = f.film_id
JOIN film_actor AS fa2 ON f.film_id = fa2.film_id
JOIN actor AS a2 ON fa2.actor_id = a2.actor_id
WHERE a1.actor_id < a2.actor_id
GROUP BY actor1, actor2
ORDER BY films_together DESC
LIMIT 1;","WITH actor_pairs AS (
    SELECT 
        fa1.actor_id AS actor1_id, 
        fa2.actor_id AS actor2_id, 
        COUNT(*) AS films_together
    FROM 
        film_actor fa1
        JOIN film_actor fa2 ON fa1.film_id = fa2.film_id
    WHERE 
        fa1.actor_id < fa2.actor_id
    GROUP BY 
        fa1.actor_id, fa2.actor_id
    ORDER BY 
        films_together DESC
)
SELECT 
    a1.first_name AS actor1_first_name, 
    a1.last_name AS actor1_last_name, 
    a2.first_name AS actor2_first_name, 
    a2.last_name AS actor2_last_name, 
    ap.films_together
FROM 
    actor_pairs ap
    JOIN actor a1 ON ap.actor1_id = a1.actor_id
    JOIN actor a2 ON ap.actor2_id = a2.actor_id;",0.0
14.2,Pasangan aktor mana aja yang paling sering main bareng? Tampilkan pasangan aktor dan jumlah film yang mereka mainkan bersama.,"SELECT a1.first_name || ' ' || a1.last_name AS actor1, a2.first_name || ' ' || a2.last_name AS actor2, COUNT(*) AS num_films FROM film_actor AS fa1 JOIN actor AS a1 ON fa1.actor_id = a1.actor_id JOIN film_actor AS fa2 ON fa1.film_id = fa2.film_id JOIN actor AS a2 ON fa2.actor_id = a2.actor_id WHERE fa1.actor_id < fa2.actor_id GROUP BY actor1, actor2 ORDER BY num_films DESC LIMIT 1;","WITH actor_pairs AS (
    SELECT 
        fa1.actor_id AS actor1_id, 
        fa2.actor_id AS actor2_id, 
        COUNT(*) AS films_together
    FROM 
        film_actor fa1
        JOIN film_actor fa2 ON fa1.film_id = fa2.film_id
    WHERE 
        fa1.actor_id < fa2.actor_id
    GROUP BY 
        fa1.actor_id, fa2.actor_id
    ORDER BY 
        films_together DESC
)
SELECT 
    a1.first_name AS actor1_first_name, 
    a1.last_name AS actor1_last_name, 
    a2.first_name AS actor2_first_name, 
    a2.last_name AS actor2_last_name, 
    ap.films_together
FROM 
    actor_pairs ap
    JOIN actor a1 ON ap.actor1_id = a1.actor_id
    JOIN actor a2 ON ap.actor2_id = a2.actor_id;",0.0
15.1,"Which movies are in the top 10% by total revenue? Show the film ID, title, and total revenue.","WITH FilmRevenue AS (
  SELECT
    film_id,
    title,
    SUM(amount) AS total_revenue
  FROM film
  JOIN inventory
    ON film.film_id = inventory.film_id
  JOIN rental
    ON inventory.inventory_id = rental.inventory_id
  GROUP BY
    film_id,
    title
), Top10PercentRevenue AS (
  SELECT
    total_revenue
  FROM FilmRevenue
  ORDER BY
    total_revenue DESC
  LIMIT
    (
      SELECT
        CAST(COUNT(*) AS REAL) * 0.1
      FROM FilmRevenue
    )
)
SELECT
  fr.film_id,
  fr.title,
  fr.total_revenue
FROM FilmRevenue fr
JOIN Top10PercentRevenue tpr
  ON fr.total_revenue >= tpr.total_revenue
ORDER BY
  fr.total_revenue DESC;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN payment p ON r.rental_id = p.rental_id
    GROUP BY 
        f.film_id
),
top_10_percent AS (
    SELECT 
        film_id, 
        title, 
        total_revenue, 
        PERCENT_RANK() OVER (ORDER BY total_revenue DESC) AS pct_rank
    FROM 
        film_revenue
)
SELECT 
    film_id, 
    title, 
    total_revenue
FROM 
    top_10_percent
WHERE 
    pct_rank <= 0.1;",0.0
15.2,"Film apa aja yang masuk 10% teratas berdasarkan pendapatan? Tampilkan ID film, judul, dan total pendapatan.","SELECT film_id, title, SUM(amount) AS total_revenue
FROM film
JOIN inventory ON film.film_id = inventory.film_id
JOIN rental ON inventory.inventory_id = rental.inventory_id
GROUP BY film_id, title
ORDER BY total_revenue DESC
LIMIT (SELECT COUNT(*) FROM film) / 10;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN payment p ON r.rental_id = p.rental_id
    GROUP BY 
        f.film_id
),
top_10_percent AS (
    SELECT 
        film_id, 
        title, 
        total_revenue, 
        PERCENT_RANK() OVER (ORDER BY total_revenue DESC) AS pct_rank
    FROM 
        film_revenue
)
SELECT 
    film_id, 
    title, 
    total_revenue
FROM 
    top_10_percent
WHERE 
    pct_rank <= 0.1;",0.0
16.1,"Which customers have rented every film in a specific category (e.g., 'Action')? Show the customer ID, first name, and last name.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category cat ON fc.category_id = cat.category_id
WHERE cat.name = 'Action'
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT f.film_id) = (SELECT COUNT(DISTINCT film_id) FROM film_category WHERE category_id = (SELECT category_id FROM category WHERE name = 'Action'));","WITH action_films AS (
    SELECT 
        fc.film_id
    FROM 
        film_category fc
        JOIN category c ON fc.category_id = c.category_id
    WHERE 
        c.name = 'Action'
),
customer_rentals AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT i.film_id) AS films_rented
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN action_films af ON i.film_id = af.film_id
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_rentals cr ON c.customer_id = cr.customer_id
WHERE 
    cr.films_rented = (SELECT COUNT(*) FROM action_films);",1.0
16.2,"Siapa pelanggan yang sudah menyewa semua film dalam satu genre (misalnya genre 'Action')? Tampilkan ID pelanggan, nama depan, dan nama belakang.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category cat ON fc.category_id = cat.category_id
WHERE cat.name = 'Action'
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT f.film_id) = (SELECT COUNT(*) FROM film f2 JOIN film_category fc2 ON f2.film_id = fc2.film_id JOIN category cat2 ON fc2.category_id = cat2.category_id WHERE cat2.name = 'Action');","WITH action_films AS (
    SELECT 
        fc.film_id
    FROM 
        film_category fc
        JOIN category c ON fc.category_id = c.category_id
    WHERE 
        c.name = 'Action'
),
customer_rentals AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT i.film_id) AS films_rented
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN action_films af ON i.film_id = af.film_id
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_rentals cr ON c.customer_id = cr.customer_id
WHERE 
    cr.films_rented = (SELECT COUNT(*) FROM action_films);",1.0
17.1,"Which movies have the highest average rental duration per customer? Show the film ID, title, and average rental duration.","SELECT f.film_id, f.title, AVG(DATEDIFF('day', r.rental_date, r.return_date)) AS average_rental_duration
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title
ORDER BY average_rental_duration DESC;","WITH film_rental_duration AS (
    SELECT 
        f.film_id, 
        f.title, 
        AVG(r.return_date - r.rental_date) AS avg_rental_duration
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.return_date IS NOT NULL
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    film_id, 
    title, 
    avg_rental_duration
FROM 
    film_rental_duration
ORDER BY 
    avg_rental_duration DESC
LIMIT 10;",0.0
17.2,"Film mana yang rata-rata waktu sewanya paling lama per pelanggan? Tampilkan ID film, judul, dan rata-rata durasi sewa.","SELECT f.film_id, f.title, AVG(DATEDIFF(day, r.rental_date, r.return_date)) AS average_rental_duration
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title
ORDER BY average_rental_duration DESC
LIMIT 1;","WITH film_rental_duration AS (
    SELECT 
        f.film_id, 
        f.title, 
        AVG(r.return_date - r.rental_date) AS avg_rental_duration
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.return_date IS NOT NULL
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    film_id, 
    title, 
    avg_rental_duration
FROM 
    film_rental_duration
ORDER BY 
    avg_rental_duration DESC
LIMIT 10;",0.0
18.1,"Which staff members have processed the most payments, and what is the total amount they've processed? Show the staff ID, first name, last name, and total amount.","SELECT s.staff_id, s.first_name, s.last_name, SUM(p.amount) AS total_amount_processed
FROM staff s
JOIN payment p ON s.staff_id = p.staff_id
GROUP BY s.staff_id, s.first_name, s.last_name
ORDER BY total_amount_processed DESC;","SELECT 
    s.staff_id, 
    s.first_name, 
    s.last_name, 
    COUNT(p.payment_id) AS total_payments, 
    SUM(p.amount) AS total_amount
FROM 
    staff s
    JOIN payment p ON s.staff_id = p.staff_id
GROUP BY 
    s.staff_id
ORDER BY 
    total_amount DESC;",1.0
18.2,"Staf mana yang paling banyak memproses pembayaran, dan berapa total yang mereka proses? Tampilkan ID staf, nama depan, nama belakang, dan total jumlahnya.","SELECT staff.staff_id, first_name, last_name, COUNT(*) AS total_payments
FROM staff
JOIN payment ON staff.staff_id = payment.staff_id
GROUP BY staff.staff_id, first_name, last_name
ORDER BY total_payments DESC
LIMIT 1;","SELECT 
    s.staff_id, 
    s.first_name, 
    s.last_name, 
    COUNT(p.payment_id) AS total_payments, 
    SUM(p.amount) AS total_amount
FROM 
    staff s
    JOIN payment p ON s.staff_id = p.staff_id
GROUP BY 
    s.staff_id
ORDER BY 
    total_amount DESC;",0.0
19.1,"Which films have never been rented but are in the top 5 most popular categories? Show the film ID, title, and category name.","SELECT f.film_id, f.title, c.name AS category_name
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL
AND c.category_id IN (SELECT category_id FROM film_category GROUP BY category_id ORDER BY COUNT(*) DESC LIMIT 5)
ORDER BY c.name;","WITH top_categories AS (
    SELECT 
        fc.category_id, 
        c.name AS category_name,
        COUNT(r.rental_id) AS rental_count
    FROM 
        film_category fc
    JOIN category c ON fc.category_id = c.category_id
    JOIN inventory i ON fc.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        fc.category_id, c.name
    ORDER BY 
        rental_count DESC
    LIMIT 5
),
never_rented_films AS (
    SELECT 
        f.film_id, 
        f.title, 
        c.category_id, 
        c.name AS category_name
    FROM 
        film f
    JOIN film_category fc ON f.film_id = fc.film_id
    JOIN category c ON fc.category_id = c.category_id
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.rental_id IS NULL
)
SELECT 
    nrf.film_id, 
    nrf.title, 
    nrf.category_name
FROM 
    never_rented_films nrf
JOIN 
    top_categories tc ON nrf.category_id = tc.category_id;",0.0
19.2,"Film apa saja yang belum pernah disewa tapi termasuk dalam 5 kategori paling populer? Tampilkan ID film, judul, dan nama kategori.","SELECT f.film_id, f.title, c.name
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
LEFT JOIN inventory i ON f.film_id = i.film_id
WHERE i.inventory_id IS NULL
AND c.category_id IN (SELECT category_id FROM film_category GROUP BY category_id ORDER BY COUNT(*) DESC LIMIT 5);","WITH top_categories AS (
    SELECT 
        fc.category_id, 
        c.name AS category_name,
        COUNT(r.rental_id) AS rental_count
    FROM 
        film_category fc
    JOIN category c ON fc.category_id = c.category_id
    JOIN inventory i ON fc.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        fc.category_id, c.name
    ORDER BY 
        rental_count DESC
    LIMIT 5
),
never_rented_films AS (
    SELECT 
        f.film_id, 
        f.title, 
        c.category_id, 
        c.name AS category_name
    FROM 
        film f
    JOIN film_category fc ON f.film_id = fc.film_id
    JOIN category c ON fc.category_id = c.category_id
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.rental_id IS NULL
)
SELECT 
    nrf.film_id, 
    nrf.title, 
    nrf.category_name
FROM 
    never_rented_films nrf
JOIN 
    top_categories tc ON nrf.category_id = tc.category_id;",0.0
20.1,"Which customers have rented films from all categories? Show the customer ID, first name, and last name.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category cat ON fc.category_id = cat.category_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT cat.category_id) = (SELECT COUNT(*) FROM category);","WITH customer_categories AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT fc.category_id) AS category_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_category fc ON i.film_id = fc.film_id
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_categories cc ON c.customer_id = cc.customer_id
WHERE 
    cc.category_count = (SELECT COUNT(*) FROM category);",1.0
20.2,"Siapa aja pelanggan yang sudah nyewa film dari semua kategori? Tampilkan ID pelanggan, nama depan, dan nama belakang.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film_category fc ON i.film_id = fc.film_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT fc.category_id) = (SELECT COUNT(*) FROM category);","WITH customer_categories AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT fc.category_id) AS category_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_category fc ON i.film_id = fc.film_id
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_categories cc ON c.customer_id = cc.customer_id
WHERE 
    cc.category_count = (SELECT COUNT(*) FROM category);",1.0
21.1,"Which films have the highest revenue per day of rental? Show the film ID, title, and revenue per day.","WITH FilmRentals AS (
  SELECT
    f.film_id,
    f.title,
    COUNT(r.rental_id) AS total_rentals,
    SUM(p.amount) AS total_revenue,
    MAX(r.rental_date) - MIN(r.rental_date) AS rental_period
  FROM film AS f
  JOIN inventory AS i
    ON f.film_id = i.film_id
  JOIN rental AS r
    ON i.inventory_id = r.inventory_id
  JOIN payment AS p
    ON r.rental_id = p.rental_id
  GROUP BY
    f.film_id,
    f.title
), RevenuePerDay AS (
  SELECT
    film_id,
    title,
    total_revenue / EXTRACT(DAY FROM rental_period) AS revenue_per_day
  FROM FilmRentals
  WHERE
    EXTRACT(DAY FROM rental_period) > 0
)
SELECT
  film_id,
  title,
  revenue_per_day
FROM RevenuePerDay
ORDER BY
  revenue_per_day DESC
LIMIT 1;","WITH film_revenue_per_day AS (
    SELECT 
        f.film_id, 
        f.title, 
        SUM(p.amount) / NULLIF(SUM(EXTRACT(DAY FROM (r.return_date - r.rental_date))), 0) AS revenue_per_day
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
    WHERE 
        r.return_date IS NOT NULL
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    film_id, 
    title, 
    revenue_per_day
FROM 
    film_revenue_per_day
ORDER BY 
    revenue_per_day DESC
LIMIT 10;",0.0
21.2,"Film mana yang penghasilannya paling tinggi per hari sewa? Tampilkan ID film, judul, dan pendapatan per hari.","SELECT f.film_id, f.title, SUM(p.amount) / COUNT(DISTINCT r.rental_date) AS average_daily_revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY f.film_id, f.title
ORDER BY average_daily_revenue DESC
LIMIT 1;","WITH film_revenue_per_day AS (
    SELECT 
        f.film_id, 
        f.title, 
        SUM(p.amount) / NULLIF(SUM(EXTRACT(DAY FROM (r.return_date - r.rental_date))), 0) AS revenue_per_day
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
    WHERE 
        r.return_date IS NOT NULL
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    film_id, 
    title, 
    revenue_per_day
FROM 
    film_revenue_per_day
ORDER BY 
    revenue_per_day DESC
LIMIT 10;",0.0
22.1,"Which films have the longest and shortest rental durations in each category? Show the category name, film title, and rental duration.","WITH FilmRentalDuration AS (
  SELECT
    fc.category_id,
    f.title,
    f.rental_duration
  FROM film AS f
  JOIN film_category AS fc
    ON f.film_id = fc.film_id
), RankedRentalDuration AS (
  SELECT
    fr.category_id,
    fr.title,
    fr.rental_duration,
    RANK() OVER (PARTITION BY fr.category_id ORDER BY fr.rental_duration DESC) AS longest_rank,
    RANK() OVER (PARTITION BY fr.category_id ORDER BY fr.rental_duration ASC) AS shortest_rank
  FROM FilmRentalDuration AS fr
)
SELECT
  c.name AS category_name,
  rrd.title AS film_title,
  rrd.rental_duration
FROM RankedRentalDuration AS rrd
JOIN category AS c
  ON rrd.category_id = c.category_id
WHERE
  rrd.longest_rank = 1
  OR rrd.shortest_rank = 1
ORDER BY
  c.name,
  rrd.longest_rank;","WITH film_durations AS (
    SELECT 
        c.name AS category_name, 
        f.title, 
        f.rental_duration,
        RANK() OVER (PARTITION BY c.name ORDER BY f.rental_duration DESC) AS longest_rank,
        RANK() OVER (PARTITION BY c.name ORDER BY f.rental_duration ASC) AS shortest_rank
    FROM 
        film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN category c ON fc.category_id = c.category_id
)
SELECT 
    category_name, 
    title, 
    rental_duration
FROM 
    film_durations
WHERE 
    longest_rank = 1 OR shortest_rank = 1
ORDER BY 
    category_name, rental_duration DESC;",1.0
22.2,"Untuk tiap kategori, film mana yang punya durasi sewa terpanjang dan terpendek? Tampilkan nama kategori, judul film, dan durasi sewa.","WITH FilmDurations AS (
  SELECT
    c.name AS category_name,
    f.title AS film_title,
    f.rental_rate AS rental_duration
  FROM category AS c
  JOIN film_category AS fc
    ON c.category_id = fc.category_id
  JOIN film AS f
    ON fc.film_id = f.film_id
), RankedDurations AS (
  SELECT
    category_name,
    film_title,
    rental_duration,
    ROW_NUMBER() OVER (PARTITION BY category_name ORDER BY rental_duration ASC) AS rn_asc,
    ROW_NUMBER() OVER (PARTITION BY category_name ORDER BY rental_duration DESC) AS rn_desc
  FROM FilmDurations
)
SELECT
  category_name,
  MAX(CASE WHEN rn_asc = 1 THEN film_title END) AS shortest_film,
  MIN(CASE WHEN rn_asc = 1 THEN rental_duration END) AS shortest_duration,
  MAX(CASE WHEN rn_desc = 1 THEN film_title END) AS longest_film,
  MAX(CASE WHEN rn_desc = 1 THEN rental_duration END) AS longest_duration
FROM RankedDurations
GROUP BY
  category_name
ORDER BY
  category_name;","WITH film_durations AS (
    SELECT 
        c.name AS category_name, 
        f.title, 
        f.rental_duration,
        RANK() OVER (PARTITION BY c.name ORDER BY f.rental_duration DESC) AS longest_rank,
        RANK() OVER (PARTITION BY c.name ORDER BY f.rental_duration ASC) AS shortest_rank
    FROM 
        film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN category c ON fc.category_id = c.category_id
)
SELECT 
    category_name, 
    title, 
    rental_duration
FROM 
    film_durations
WHERE 
    longest_rank = 1 OR shortest_rank = 1
ORDER BY 
    category_name, rental_duration DESC;",0.0
23.1,"Which customers have rented films from exactly 2 categories? Show the customer ID, first name, last name, and the categories they've rented from.","SELECT c.customer_id, c.first_name, c.last_name, GROUP_CONCAT(DISTINCT cat.name) AS categories_rented
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category cat ON fc.category_id = cat.category_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT cat.category_id) = 2;","WITH customer_categories AS (
    SELECT 
        r.customer_id, 
        c.name AS category_name
    FROM 
        rental r
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film_category fc ON i.film_id = fc.film_id
    JOIN category c ON fc.category_id = c.category_id
    GROUP BY 
        r.customer_id, c.name
),
customer_category_count AS (
    SELECT 
        cc.customer_id, 
        cu.first_name, 
        cu.last_name, 
        STRING_AGG(cc.category_name, ', ' ORDER BY cc.category_name) AS categories,
        COUNT(DISTINCT cc.category_name) AS category_count
    FROM 
        customer_categories cc
    JOIN customer cu ON cc.customer_id = cu.customer_id
    GROUP BY 
        cc.customer_id, cu.first_name, cu.last_name
)
SELECT 
    customer_id, 
    first_name, 
    last_name, 
    categories
FROM 
    customer_category_count
WHERE 
    category_count = 2;",1.0
23.2,"Ada gak pelanggan yang nyewa film dari tepat 2 kategori? Tampilkan ID pelanggan, nama depan, nama belakang, dan daftar kategorinya.","SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    string_agg(cat.name, ', ') AS categories
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
JOIN 
    film_category fc ON f.film_id = fc.film_id
JOIN 
    category cat ON fc.category_id = cat.category_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(DISTINCT cat.category_id) = 2;","WITH customer_categories AS (
    SELECT 
        r.customer_id, 
        c.name AS category_name
    FROM 
        rental r
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film_category fc ON i.film_id = fc.film_id
    JOIN category c ON fc.category_id = c.category_id
    GROUP BY 
        r.customer_id, c.name
),
customer_category_count AS (
    SELECT 
        cc.customer_id, 
        cu.first_name, 
        cu.last_name, 
        STRING_AGG(cc.category_name, ', ' ORDER BY cc.category_name) AS categories,
        COUNT(DISTINCT cc.category_name) AS category_count
    FROM 
        customer_categories cc
    JOIN customer cu ON cc.customer_id = cu.customer_id
    GROUP BY 
        cc.customer_id, cu.first_name, cu.last_name
)
SELECT 
    customer_id, 
    first_name, 
    last_name, 
    categories
FROM 
    customer_category_count
WHERE 
    category_count = 2;",1.0
24.1,"Which films have been rented more than the average number of rentals for their category? Show the film ID, title, category name, and rental count.","SELECT f.film_id, f.title, c.name AS category_name, COUNT(r.rental_id) AS rental_count
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title, c.name
HAVING COUNT(r.rental_id) > (
    SELECT AVG(rental_count) FROM (
        SELECT COUNT(r.rental_id) AS rental_count
        FROM film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        GROUP BY f.film_id
    ) AS AverageRentalCounts
);","WITH category_rentals AS (
    SELECT 
        fc.category_id, 
        f.film_id, 
        f.title, 
        COUNT(r.rental_id) AS rental_count,
        AVG(COUNT(r.rental_id)) OVER (PARTITION BY fc.category_id) AS avg_rentals_per_category
    FROM 
        film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        fc.category_id, f.film_id
)
SELECT 
    film_id, 
    title, 
    c.name AS category_name, 
    rental_count
FROM 
    category_rentals cr
    JOIN category c ON cr.category_id = c.category_id
WHERE 
    rental_count > avg_rentals_per_category;",0.0
24.2,"Film mana yang disewa lebih banyak dari rata-rata di kategori-nya? Tampilkan ID film, judul, nama kategori, dan jumlah penyewaannya.","WITH CategoryRentalCounts AS (
  SELECT
    fc.category_id,
    f.film_id,
    f.title,
    COUNT(r.rental_id) AS rental_count,
    AVG(COUNT(r.rental_id)) OVER (PARTITION BY fc.category_id) AS avg_rental_count
  FROM film_category AS fc
  JOIN film AS f
    ON fc.film_id = f.film_id
  JOIN inventory AS i
    ON f.film_id = i.film_id
  JOIN rental AS r
    ON i.inventory_id = r.inventory_id
  GROUP BY
    fc.category_id,
    f.film_id,
    f.title
)
SELECT
  crc.film_id,
  crc.title,
  c.name AS category_name,
  crc.rental_count
FROM CategoryRentalCounts AS crc
JOIN category AS c
  ON crc.category_id = c.category_id
WHERE
  crc.rental_count > crc.avg_rental_count
ORDER BY
  crc.category_id,
  crc.rental_count DESC;","WITH category_rentals AS (
    SELECT 
        fc.category_id, 
        f.film_id, 
        f.title, 
        COUNT(r.rental_id) AS rental_count,
        AVG(COUNT(r.rental_id)) OVER (PARTITION BY fc.category_id) AS avg_rentals_per_category
    FROM 
        film f
        JOIN film_category fc ON f.film_id = fc.film_id
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        fc.category_id, f.film_id
)
SELECT 
    film_id, 
    title, 
    c.name AS category_name, 
    rental_count
FROM 
    category_rentals cr
    JOIN category c ON cr.category_id = c.category_id
WHERE 
    rental_count > avg_rentals_per_category;",1.0
25.1,"Which actors have never appeared in a film with a rating of 'R'? Show the actor ID, first name, and last name.","SELECT a.actor_id, a.first_name, a.last_name
FROM actor a
LEFT JOIN film_actor fa ON a.actor_id = fa.actor_id
LEFT JOIN film f ON fa.film_id = f.film_id
WHERE f.rating <> 'R'
GROUP BY a.actor_id, a.first_name, a.last_name
HAVING COUNT(CASE WHEN f.rating = 'R' THEN 1 END) = 0;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name
FROM 
    actor a
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM film_actor fa
        JOIN film f ON fa.film_id = f.film_id
        WHERE fa.actor_id = a.actor_id AND f.rating = 'R'
    );",0.0
25.2,"Aktor mana yang belum pernah main di film dengan rating 'R'? Tampilkan ID aktor, nama depan, dan nama belakang.","SELECT a.actor_id, a.first_name, a.last_name
FROM actor a
LEFT JOIN film_actor fa ON a.actor_id = fa.actor_id
LEFT JOIN film f ON fa.film_id = f.film_id
WHERE f.rating <> 'R'
GROUP BY a.actor_id, a.first_name, a.last_name
HAVING count(CASE WHEN f.rating = 'R' THEN 1 END) = 0;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name
FROM 
    actor a
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM film_actor fa
        JOIN film f ON fa.film_id = f.film_id
        WHERE fa.actor_id = a.actor_id AND f.rating = 'R'
    );",0.0
26.1,"Which films have the highest replacement cost but have never been rented? Show the film ID, title, and replacement cost.","SELECT f.film_id, f.title, f.replacement_cost
FROM film f
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL
ORDER BY f.replacement_cost DESC;","SELECT 
    f.film_id, 
    f.title, 
    f.replacement_cost
FROM 
    film f
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.rental_id IS NULL
ORDER BY 
    f.replacement_cost DESC
LIMIT 10;",0.0
26.2,"Film apa yang biaya gantinya paling mahal tapi belum pernah disewa? Tampilkan ID film, judul, dan biaya ganti.","SELECT film_id, title, replacement_cost
FROM film
WHERE film_id NOT IN (SELECT film_id FROM inventory)
ORDER BY replacement_cost DESC
LIMIT 1;","SELECT 
    f.film_id, 
    f.title, 
    f.replacement_cost
FROM 
    film f
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.rental_id IS NULL
ORDER BY 
    f.replacement_cost DESC
LIMIT 10;",0.0
27.1,"Which customers have rented films from all stores? Show the customer ID, first name, and last name.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN store s ON i.store_id = s.store_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT s.store_id) = (SELECT COUNT(*) FROM store);","WITH customer_stores AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_stores cs ON c.customer_id = cs.customer_id
WHERE 
    cs.store_count = (SELECT COUNT(*) FROM store);",1.0
27.2,"Siapa pelanggan yang sudah nyewa dari semua toko? Tampilkan ID pelanggan, nama depan, dan nama belakang.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT r.store_id) = (SELECT COUNT(*) FROM store);","WITH customer_stores AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_stores cs ON c.customer_id = cs.customer_id
WHERE 
    cs.store_count = (SELECT COUNT(*) FROM store);",0.0
28.1,"Which films have been rented in all stores? Show the film ID, title, and the number of stores it was rented in.","SELECT f.film_id, f.title, COUNT(DISTINCT i.store_id) AS num_stores_rented
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title
HAVING COUNT(DISTINCT i.store_id) = (SELECT COUNT(*) FROM store);","WITH film_stores AS (
    SELECT 
        f.film_id, 
        f.title, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        f.film_id
)
SELECT 
    film_id, 
    title, 
    store_count
FROM 
    film_stores
WHERE 
    store_count = (SELECT COUNT(*) FROM store);",1.0
28.2,"Film mana yang sudah pernah disewa di semua toko? Tampilkan ID film, judul, dan jumlah toko tempat film itu disewa.","SELECT f.film_id, f.title, COUNT(DISTINCT i.store_id) AS total_stores
FROM film f
JOIN inventory i ON f.film_id = i.film_id
GROUP BY f.film_id, f.title
HAVING COUNT(DISTINCT i.store_id) = (SELECT COUNT(*) FROM store);","WITH film_stores AS (
    SELECT 
        f.film_id, 
        f.title, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        f.film_id
)
SELECT 
    film_id, 
    title, 
    store_count
FROM 
    film_stores
WHERE 
    store_count = (SELECT COUNT(*) FROM store);",1.0
29.1,"Which films have the highest revenue per minute of runtime? Show the film ID, title, runtime, and revenue per minute.","SELECT film_id, title, length, rental_rate / length AS revenue_per_minute
FROM film
ORDER BY revenue_per_minute DESC;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.length, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN payment p ON r.rental_id = p.rental_id
    GROUP BY 
        f.film_id
)
SELECT 
    film_id, 
    title, 
    length, 
    total_revenue / length AS revenue_per_minute
FROM 
    film_revenue
ORDER BY 
    revenue_per_minute DESC
LIMIT 10;",0.0
29.2,"Film mana yang punya pendapatan paling tinggi per menit durasi? Tampilkan ID film, judul, durasi, dan pendapatan per menit.","SELECT film_id, title, length, rental_rate / length AS revenue_per_minute
FROM film
ORDER BY revenue_per_minute DESC
LIMIT 1;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.length, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN payment p ON r.rental_id = p.rental_id
    GROUP BY 
        f.film_id
)
SELECT 
    film_id, 
    title, 
    length, 
    total_revenue / length AS revenue_per_minute
FROM 
    film_revenue
ORDER BY 
    revenue_per_minute DESC
LIMIT 10;",0.0
30.1,"Which customers have rented films from every actor in a specific film (e.g., film_id = 1)? Show the customer ID, first name, and last name.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_actor fa ON f.film_id = fa.film_id
WHERE f.film_id = 1
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT fa.actor_id) = (SELECT COUNT(DISTINCT actor_id) FROM film_actor WHERE film_id = 1);","WITH film_actors AS (
    SELECT 
        fa.actor_id
    FROM 
        film_actor fa
    WHERE 
        fa.film_id = 1
),
customer_actors AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT fa.actor_id) AS actor_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_actor fa ON i.film_id = fa.film_id
    WHERE 
        fa.actor_id IN (SELECT actor_id FROM film_actors)
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_actors ca ON c.customer_id = ca.customer_id
WHERE 
    ca.actor_count = (SELECT COUNT(*) FROM film_actors);",0.0
30.2,"Siapa pelanggan yang nyewa dari semua aktor di film tertentu (misalnya ID film = 1)? Tampilkan ID pelanggan, nama depan, dan nama belakang.","SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film_actor fa ON i.film_id = fa.film_id
WHERE i.film_id = 1
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT fa.actor_id) = (SELECT COUNT(*) FROM film_actor WHERE film_id = 1);","WITH film_actors AS (
    SELECT 
        fa.actor_id
    FROM 
        film_actor fa
    WHERE 
        fa.film_id = 1
),
customer_actors AS (
    SELECT 
        r.customer_id, 
        COUNT(DISTINCT fa.actor_id) AS actor_count
    FROM 
        rental r
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_actor fa ON i.film_id = fa.film_id
    WHERE 
        fa.actor_id IN (SELECT actor_id FROM film_actors)
    GROUP BY 
        r.customer_id
)
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customer c
    JOIN customer_actors ca ON c.customer_id = ca.customer_id
WHERE 
    ca.actor_count = (SELECT COUNT(*) FROM film_actors);",0.0
31.1,"Which films have the highest number of actors but have never been rented? Show the film ID, title, and number of actors.","SELECT f.film_id, f.title, COUNT(fa.actor_id) AS num_actors
FROM film f
JOIN film_actor fa ON f.film_id = fa.film_id
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL
GROUP BY f.film_id, f.title
ORDER BY num_actors DESC
LIMIT 1;","WITH film_actor_counts AS (
    SELECT 
        f.film_id, 
        f.title, 
        COUNT(fa.actor_id) AS actor_count
    FROM 
        film f
        JOIN film_actor fa ON f.film_id = fa.film_id
        LEFT JOIN inventory i ON f.film_id = i.film_id
        LEFT JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.rental_id IS NULL
    GROUP BY 
        f.film_id
)
SELECT 
    film_id, 
    title, 
    actor_count
FROM 
    film_actor_counts
ORDER BY 
    actor_count DESC
LIMIT 10;",0.0
31.2,"Film mana yang punya jumlah aktor terbanyak tapi belum pernah disewa? Tampilkan ID film, judul, dan jumlah aktor.","SELECT f.film_id, f.title, COUNT(fa.actor_id) AS actor_count
FROM film f
LEFT JOIN film_actor fa ON f.film_id = fa.film_id
LEFT JOIN inventory i ON f.film_id = i.film_id
WHERE i.inventory_id IS NULL
GROUP BY f.film_id, f.title
ORDER BY actor_count DESC
LIMIT 1;","WITH film_actor_counts AS (
    SELECT 
        f.film_id, 
        f.title, 
        COUNT(fa.actor_id) AS actor_count
    FROM 
        film f
        JOIN film_actor fa ON f.film_id = fa.film_id
        LEFT JOIN inventory i ON f.film_id = i.film_id
        LEFT JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.rental_id IS NULL
    GROUP BY 
        f.film_id
)
SELECT 
    film_id, 
    title, 
    actor_count
FROM 
    film_actor_counts
ORDER BY 
    actor_count DESC
LIMIT 10;",0.0
32.1,Which movies have the longest runtime but have never been rented? Show the movie title and runtime.,"SELECT f.title, f.length FROM film f LEFT JOIN inventory i ON f.film_id = i.film_id LEFT JOIN rental r ON i.inventory_id = r.inventory_id WHERE r.rental_id IS NULL ORDER BY f.length DESC LIMIT 1;","SELECT 
    f.title, 
    f.length AS runtime
FROM 
    film f
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.rental_id IS NULL
ORDER BY 
    f.length DESC
LIMIT 10;",0.0
32.2,Film apa yang durasinya paling panjang tapi belum pernah disewa? Tampilkan judul film dan durasi.,"SELECT f.title, f.length FROM film f LEFT JOIN inventory i ON f.film_id = i.film_id WHERE i.inventory_id IS NULL ORDER BY f.length DESC LIMIT 1;","SELECT 
    f.title, 
    f.length AS runtime
FROM 
    film f
    LEFT JOIN inventory i ON f.film_id = i.film_id
    LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.rental_id IS NULL
ORDER BY 
    f.length DESC
LIMIT 10;",0.0
33.1,Which customers have rented the most movies in a single day? Show the customer name and the number of movies rented on that day.,"WITH DailyRentals AS (
  SELECT 
    customer_id,
    rental_date::DATE AS rental_day,
    COUNT(*) AS movies_rented
  FROM rental
  GROUP BY customer_id, rental_day
),
MaxDailyRentals AS (
  SELECT 
    customer_id,
    MAX(movies_rented) AS max_movies_rented
  FROM DailyRentals
  GROUP BY customer_id
)
SELECT 
  c.first_name || ' ' || c.last_name AS customer_name,
  mdr.max_movies_rented AS max_movies_rented_in_a_day
FROM customer c
JOIN MaxDailyRentals mdr ON c.customer_id = mdr.customer_id
ORDER BY mdr.max_movies_rented DESC;","WITH customer_daily_rentals AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        DATE(r.rental_date) AS rental_day, 
        COUNT(r.rental_id) AS rentals_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
    GROUP BY 
        c.customer_id, rental_day
)
SELECT 
    customer_name, 
    rentals_count
FROM 
    customer_daily_rentals
ORDER BY 
    rentals_count DESC
LIMIT 10;",0.0
33.2,Siapa pelanggan yang nyewa film terbanyak dalam satu hari? Tampilkan nama pelanggan dan jumlah film yang disewa hari itu.,"SELECT c.first_name, c.last_name, COUNT(r.rental_id) AS total_rentals
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY total_rentals DESC
LIMIT 1;","WITH customer_daily_rentals AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        DATE(r.rental_date) AS rental_day, 
        COUNT(r.rental_id) AS rentals_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
    GROUP BY 
        c.customer_id, rental_day
)
SELECT 
    customer_name, 
    rentals_count
FROM 
    customer_daily_rentals
ORDER BY 
    rentals_count DESC
LIMIT 10;",0.0
34.1,Which movies have been rented more than 10 times but have never been returned late? Show the movie title and number of rentals.,"SELECT f.title, COUNT(r.rental_id) AS num_rentals
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
HAVING COUNT(r.rental_id) > 10
AND NOT EXISTS (SELECT 1 FROM rental r2 WHERE r2.inventory_id = i.inventory_id AND r2.return_date > r2.rental_date + INTERVAL '7 day');","SELECT 
    f.title, 
    COUNT(r.rental_id) AS rentals_count
FROM 
    film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.return_date <= (r.rental_date + f.rental_duration * INTERVAL '1 day')
GROUP BY 
    f.film_id, f.title
HAVING 
    COUNT(r.rental_id) > 10;",0.0
34.2,Film apa yang disewa lebih dari 10 kali tapi gak pernah telat dikembalikan? Tampilkan judul film dan jumlah penyewaannya.,"SELECT f.title, COUNT(r.rental_id) AS total_rentals
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
HAVING COUNT(r.rental_id) > 10
AND NOT EXISTS (
    SELECT 1
    FROM rental r2
    JOIN inventory i2 ON r2.inventory_id = i2.inventory_id
    WHERE i2.film_id = f.film_id
    AND r2.return_date IS NULL
);","SELECT 
    f.title, 
    COUNT(r.rental_id) AS rentals_count
FROM 
    film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    r.return_date <= (r.rental_date + f.rental_duration * INTERVAL '1 day')
GROUP BY 
    f.film_id, f.title
HAVING 
    COUNT(r.rental_id) > 10;",0.0
35.1,Which staff members have processed the most payments on weekends? Show the staff name and the number of payments processed.,"SELECT s.first_name || ' ' || s.last_name AS staff_name, COUNT(*) AS num_payments
FROM staff s
JOIN payment p ON s.staff_id = p.staff_id
WHERE EXTRACT(DOW FROM p.payment_date) IN (0, 6)
GROUP BY staff_name
ORDER BY num_payments DESC;","SELECT 
    s.first_name || ' ' || s.last_name AS staff_name, 
    COUNT(p.payment_id) AS payments_count
FROM 
    staff s
JOIN payment p ON s.staff_id = p.staff_id
WHERE 
    EXTRACT(DOW FROM p.payment_date) IN (0, 6)
GROUP BY 
    s.staff_id, s.first_name, s.last_name
ORDER BY 
    payments_count DESC
LIMIT 10;
",1.0
35.2,Staf mana yang paling banyak memproses pembayaran saat akhir pekan? Tampilkan nama staf dan jumlah pembayaran yang diproses.,"SELECT s.first_name, s.last_name, COUNT(p.payment_id) AS total_payments
FROM staff s
JOIN payment p ON s.staff_id = p.staff_id
WHERE EXTRACT(DOW FROM p.payment_date) IN (0, 6) -- 0: Sunday, 6: Saturday
GROUP BY s.staff_id, s.first_name, s.last_name
ORDER BY total_payments DESC
LIMIT 1;","SELECT 
    s.first_name || ' ' || s.last_name AS staff_name, 
    COUNT(p.payment_id) AS payments_count
FROM 
    staff s
JOIN payment p ON s.staff_id = p.staff_id
WHERE 
    EXTRACT(DOW FROM p.payment_date) IN (0, 6)
GROUP BY 
    s.staff_id, s.first_name, s.last_name
ORDER BY 
    payments_count DESC
LIMIT 10;
",0.0
36.1,"Which movies have the highest revenue but the lowest rental rate? Show the movie title, rental rate, and total revenue.","SELECT f.title, f.rental_rate, SUM(p.amount) AS total_revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN payment p ON i.inventory_id = p.inventory_id
GROUP BY f.film_id, f.title, f.rental_rate
ORDER BY f.rental_rate ASC, total_revenue DESC
LIMIT 1;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.rental_rate, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN payment p ON r.rental_id = p.rental_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    rental_rate, 
    total_revenue
FROM 
    film_revenue
ORDER BY 
    total_revenue DESC, rental_rate ASC
LIMIT 10;",0.0
36.2,"Film mana yang pendapatannya tinggi tapi harga sewanya rendah? Tampilkan judul film, harga sewa, dan total pendapatan.","SELECT f.title, f.rental_rate, SUM(p.amount) AS total_revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY f.film_id, f.title, f.rental_rate
HAVING f.rental_rate < (SELECT AVG(rental_rate) FROM film)
ORDER BY total_revenue DESC;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.rental_rate, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN payment p ON r.rental_id = p.rental_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    rental_rate, 
    total_revenue
FROM 
    film_revenue
ORDER BY 
    total_revenue DESC, rental_rate ASC
LIMIT 10;",0.0
37.1,Which customers have rented movies from every store but have never rented a movie with a rating of 'R'? Show the customer full name.,"SELECT cu.first_name, cu.last_name
FROM customer cu
JOIN rental r ON cu.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
WHERE f.rating != 'R'
GROUP BY cu.customer_id, cu.first_name, cu.last_name
HAVING COUNT(DISTINCT i.store_id) = (SELECT COUNT(*) FROM store);","WITH customer_stores AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
    GROUP BY 
        c.customer_id
),
customer_no_r_ratings AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.rating = 'R'
        )
)
SELECT 
    cs.customer_name
FROM 
    customer_stores cs
    JOIN customer_no_r_ratings cnr ON cs.customer_id = cnr.customer_id
WHERE 
    cs.store_count = (SELECT COUNT(*) FROM store);",0.0
37.2,Ada pelanggan yang sudah nyewa dari semua toko tapi gak pernah nyewa film dengan rating 'R'? Tampilkan nama lengkap pelanggan.,"SELECT 
    customer.first_name || ' ' || customer.last_name AS full_name
FROM 
    customer
JOIN
    rental ON customer.customer_id = rental.customer_id
JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
JOIN
    film ON inventory.film_id = film.film_id
GROUP BY 
    full_name
HAVING 
    COUNT(DISTINCT rental.staff_id) = (SELECT COUNT(*) FROM staff) AND SUM(CASE WHEN film.rating = 'R' THEN 1 ELSE 0 END) = 0;","WITH customer_stores AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
    GROUP BY 
        c.customer_id
),
customer_no_r_ratings AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.rating = 'R'
        )
)
SELECT 
    cs.customer_name
FROM 
    customer_stores cs
    JOIN customer_no_r_ratings cnr ON cs.customer_id = cnr.customer_id
WHERE 
    cs.store_count = (SELECT COUNT(*) FROM store);",1.0
38.1,Which movies have been rented by customers from more than 5 different cities? Show the movie title and the number of cities.,"SELECT ft.title, COUNT(DISTINCT c.city_id) AS number_of_cities
FROM film_text ft
JOIN inventory i ON ft.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer cu ON r.customer_id = cu.customer_id
JOIN address a ON cu.address_id = a.address_id
JOIN city c ON a.city_id = c.city_id
GROUP BY ft.title
HAVING COUNT(DISTINCT c.city_id) > 5;","WITH movie_city_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT ci.city_id) AS city_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    city_count
FROM 
    movie_city_rentals
WHERE 
    city_count > 5;",0.0
38.2,Film mana yang disewa oleh pelanggan dari lebih dari 5 kota? Tampilkan judul film dan jumlah kotanya.,"SELECT f.title, COUNT(DISTINCT c.city_id) AS city_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id
JOIN address a ON c.address_id = a.address_id
JOIN city c ON a.city_id = c.city_id
GROUP BY f.title
HAVING COUNT(DISTINCT c.city_id) > 5;","WITH movie_city_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT ci.city_id) AS city_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    city_count
FROM 
    movie_city_rentals
WHERE 
    city_count > 5;",0.0
39.1,Which movies have the highest number of actors but have never been rented? Show the movie title and number of actors.,"SELECT f.title, COUNT(fa.actor_id) AS num_actors
FROM film f
JOIN film_actor fa ON f.film_id = fa.film_id
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL
GROUP BY f.title
ORDER BY num_actors DESC
LIMIT 1;","WITH film_actor_counts AS (
    SELECT 
        f.film_id, 
        f.title, 
        COUNT(fa.actor_id) AS actor_count
    FROM 
        film f
        JOIN film_actor fa ON f.film_id = fa.film_id
        LEFT JOIN inventory i ON f.film_id = i.film_id
        LEFT JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.rental_id IS NULL
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    actor_count
FROM 
    film_actor_counts
ORDER BY 
    actor_count DESC
LIMIT 10;",0.0
39.2,Film mana yang punya banyak aktor tapi belum pernah disewa? Tampilkan judul film dan jumlah aktor.,"SELECT f.title, COUNT(fa.actor_id) AS actor_count
FROM film f
LEFT JOIN film_actor fa ON f.film_id = fa.film_id
LEFT JOIN inventory i ON f.film_id = i.film_id
WHERE i.inventory_id IS NULL
GROUP BY f.title
HAVING COUNT(fa.actor_id) > 1;","WITH film_actor_counts AS (
    SELECT 
        f.film_id, 
        f.title, 
        COUNT(fa.actor_id) AS actor_count
    FROM 
        film f
        JOIN film_actor fa ON f.film_id = fa.film_id
        LEFT JOIN inventory i ON f.film_id = i.film_id
        LEFT JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE 
        r.rental_id IS NULL
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    actor_count
FROM 
    film_actor_counts
ORDER BY 
    actor_count DESC
LIMIT 10;",0.0
40.1,"Which customers have rented the same movie more than once in a single month? Show the customer name, movie title, and the number of times rented.","SELECT c.first_name || ' ' || c.last_name AS customer_name,
       f.title AS movie_title,
       COUNT(*) AS rental_count
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
GROUP BY customer_name, movie_title, strftime('%Y-%m', r.rental_date)
HAVING COUNT(*) > 1
ORDER BY customer_name, movie_title;","WITH customer_movie_rentals AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        f.title, 
        TO_CHAR(r.rental_date, 'YYYY-MM') AS rental_month,
        COUNT(r.rental_id) AS rentals_count
    FROM 
        customer c
    JOIN rental r ON c.customer_id = r.customer_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film f ON i.film_id = f.film_id
    GROUP BY 
        c.customer_id, f.film_id, rental_month, c.first_name, c.last_name, f.title
)
SELECT 
    customer_name, 
    title, 
    rentals_count
FROM 
    customer_movie_rentals
WHERE 
    rentals_count > 1;",0.0
40.2,"Ada pelanggan yang nyewa film yang sama lebih dari sekali dalam bulan yang sama? Tampilkan nama pelanggan, judul film, dan jumlah penyewaan.","SELECT c.first_name || ' ' || c.last_name AS customer_name,
       f.title AS film_title,
       COUNT(*) AS rental_count
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
GROUP BY customer_name, film_title
HAVING COUNT(*) > 1;","WITH customer_movie_rentals AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        f.title, 
        TO_CHAR(r.rental_date, 'YYYY-MM') AS rental_month,
        COUNT(r.rental_id) AS rentals_count
    FROM 
        customer c
    JOIN rental r ON c.customer_id = r.customer_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film f ON i.film_id = f.film_id
    GROUP BY 
        c.customer_id, f.film_id, rental_month, c.first_name, c.last_name, f.title
)
SELECT 
    customer_name, 
    title, 
    rentals_count
FROM 
    customer_movie_rentals
WHERE 
    rentals_count > 1;",0.0
41.1,Which movies have been rented by customers from every country? Show the movie title and the number of countries.,"SELECT f.title, COUNT(DISTINCT c.country_id) AS num_countries
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer cu ON r.customer_id = cu.customer_id
JOIN address a ON cu.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN country c ON ci.country_id = c.country_id
GROUP BY f.title
HAVING COUNT(DISTINCT c.country_id) = (SELECT COUNT(*) FROM country);","WITH movie_country_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT co.country_id) AS country_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
        JOIN country co ON ci.country_id = co.country_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    country_count
FROM 
    movie_country_rentals
WHERE 
    country_count = (SELECT COUNT(*) FROM country);",1.0
41.2,Film mana yang disewa oleh pelanggan dari semua negara? Tampilkan judul film dan jumlah negara.,"SELECT f.title, COUNT(DISTINCT c.country_id) AS number_of_countries
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
JOIN customer AS cu ON r.customer_id = cu.customer_id
JOIN address AS a ON cu.address_id = a.address_id
JOIN city AS ci ON a.city_id = ci.city_id
JOIN country AS c ON ci.country_id = c.country_id
GROUP BY f.title
ORDER BY number_of_countries DESC;","WITH movie_country_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT co.country_id) AS country_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
        JOIN country co ON ci.country_id = co.country_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    country_count
FROM 
    movie_country_rentals
WHERE 
    country_count = (SELECT COUNT(*) FROM country);",0.0
42.1,"Which movies have been rented the most during holidays (e.g., December)? Show the movie title and the number of rentals.","SELECT f.title, COUNT(r.rental_id) AS num_rentals
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
WHERE EXTRACT(MONTH FROM r.rental_date) = 12
GROUP BY f.title
ORDER BY num_rentals DESC;","SELECT 
    f.title, 
    COUNT(r.rental_id) AS rentals_count
FROM 
    film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    EXTRACT(MONTH FROM r.rental_date) = 12
GROUP BY 
    f.film_id, f.title
ORDER BY 
    rentals_count DESC
LIMIT 10;
",1.0
42.2,Film mana yang paling sering disewa saat libur (misalnya bulan Desember)? Tampilkan judul film dan jumlah penyewaan.,"SELECT f.title, COUNT(r.rental_id) AS total_rentals
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
WHERE EXTRACT(MONTH FROM r.rental_date) = 12
GROUP BY f.title
ORDER BY total_rentals DESC
LIMIT 1;","SELECT 
    f.title, 
    COUNT(r.rental_id) AS rentals_count
FROM 
    film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
WHERE 
    EXTRACT(MONTH FROM r.rental_date) = 12
GROUP BY 
    f.film_id, f.title
ORDER BY 
    rentals_count DESC
LIMIT 10;
",1.0
43.1,Which customers have rented movies from every category but have never rented a movie with a replacement cost over $20? Show the customer full name.,"SELECT c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category cat ON fc.category_id = cat.category_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT cat.category_id) = (SELECT COUNT(*) FROM category)
AND MAX(f.replacement_cost) <= 20;","WITH customer_categories AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT fc.category_id) AS category_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_category fc ON i.film_id = fc.film_id
    GROUP BY 
        c.customer_id
),
customer_no_expensive_rentals AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.replacement_cost > 20
        )
)
SELECT 
    cc.customer_name
FROM 
    customer_categories cc
    JOIN customer_no_expensive_rentals cne ON cc.customer_id = cne.customer_id
WHERE 
    cc.category_count = (SELECT COUNT(*) FROM category);",1.0
43.2,Ada pelanggan yang nyewa dari semua kategori tapi gak pernah nyewa film dengan biaya ganti di atas $20? Tampilkan nama lengkap pelanggan.,"SELECT 
    customer.first_name || ' ' || customer.last_name AS full_name
FROM 
    customer
JOIN 
    rental ON customer.customer_id = rental.customer_id
JOIN 
    inventory ON rental.inventory_id = inventory.inventory_id
JOIN 
    film ON inventory.film_id = film.film_id
JOIN 
    film_category ON film.film_id = film_category.film_id
JOIN 
    category ON film_category.category_id = category.category_id
GROUP BY 
    full_name
HAVING 
    COUNT(DISTINCT category.category_id) = (SELECT COUNT(*) FROM category)
    AND MAX(film.replacement_cost) <= 20;","WITH customer_categories AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT fc.category_id) AS category_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_category fc ON i.film_id = fc.film_id
    GROUP BY 
        c.customer_id
),
customer_no_expensive_rentals AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.replacement_cost > 20
        )
)
SELECT 
    cc.customer_name
FROM 
    customer_categories cc
    JOIN customer_no_expensive_rentals cne ON cc.customer_id = cne.customer_id
WHERE 
    cc.category_count = (SELECT COUNT(*) FROM category);",1.0
44.1,"Which movies have the highest number of rentals but the lowest replacement cost? Show the movie title, replacement cost, and number of rentals.","WITH MovieRentalCounts AS (
  SELECT 
    f.title,
    f.replacement_cost,
    COUNT(r.rental_id) AS rental_count
  FROM film f
  JOIN inventory i ON f.film_id = i.film_id
  JOIN rental r ON i.inventory_id = r.inventory_id
  GROUP BY f.film_id, f.title, f.replacement_cost
)
SELECT 
  title, 
  replacement_cost, 
  rental_count
FROM MovieRentalCounts
ORDER BY rental_count DESC, replacement_cost ASC
LIMIT 1;","WITH film_rentals AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.replacement_cost, 
        COUNT(r.rental_id) AS rentals_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    replacement_cost, 
    rentals_count
FROM 
    film_rentals
ORDER BY 
    rentals_count DESC, replacement_cost ASC
LIMIT 10;",0.0
44.2,"Film apa yang paling sering disewa tapi biaya gantinya rendah? Tampilkan judul film, biaya ganti, dan jumlah penyewaan.","SELECT f.title, f.rental_rate, COUNT(r.rental_id) AS total_rentals
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title, f.rental_rate
ORDER BY total_rentals DESC, f.rental_rate ASC
LIMIT 1;","WITH film_rentals AS (
    SELECT 
        f.film_id, 
        f.title, 
        f.replacement_cost, 
        COUNT(r.rental_id) AS rentals_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    replacement_cost, 
    rentals_count
FROM 
    film_rentals
ORDER BY 
    rentals_count DESC, replacement_cost ASC
LIMIT 10;",0.0
45.1,Which customers have rented movies from every store but have never rented a movie with a runtime over 2 hours? Show the customer full name.,"SELECT 
    c.first_name || ' ' || c.last_name AS customer_full_name
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
GROUP BY 
    customer_full_name
HAVING 
    COUNT(DISTINCT i.store_id) = (SELECT COUNT(*) FROM store) AND MAX(f.length) <= 120;","WITH customer_stores AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
    GROUP BY 
        c.customer_id
),
customer_no_long_movies AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.length > 120
        )
)
SELECT 
    cs.customer_name
FROM 
    customer_stores cs
    JOIN customer_no_long_movies cnl ON cs.customer_id = cnl.customer_id
WHERE 
    cs.store_count = (SELECT COUNT(*) FROM store);",1.0
45.2,Siapa pelanggan yang nyewa dari semua toko tapi gak pernah nyewa film berdurasi lebih dari 2 jam? Tampilkan nama lengkap pelanggan.,"SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_full_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
WHERE f.rental_duration <= 120
GROUP BY customer_full_name
HAVING COUNT(DISTINCT r.store_id) = (SELECT COUNT(*) FROM store);","WITH customer_stores AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT i.store_id) AS store_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
    GROUP BY 
        c.customer_id
),
customer_no_long_movies AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.length > 120
        )
)
SELECT 
    cs.customer_name
FROM 
    customer_stores cs
    JOIN customer_no_long_movies cnl ON cs.customer_id = cnl.customer_id
WHERE 
    cs.store_count = (SELECT COUNT(*) FROM store);",1.0
46.1,Which movies have been rented by customers from more than 10 different cities? Show the movie title and the number of cities.,"SELECT ft.title, COUNT(DISTINCT c.city_id) AS number_of_cities
FROM film_text ft
JOIN inventory i ON ft.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer cu ON r.customer_id = cu.customer_id
JOIN address a ON cu.address_id = a.address_id
JOIN city c ON a.city_id = c.city_id
GROUP BY ft.title
HAVING COUNT(DISTINCT c.city_id) > 10;","WITH movie_city_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT ci.city_id) AS city_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    city_count
FROM 
    movie_city_rentals
WHERE 
    city_count > 10;",0.0
46.2,Film mana yang disewa oleh pelanggan dari lebih dari 10 kota? Tampilkan judul film dan jumlah kotanya.,"SELECT f.title, COUNT(DISTINCT c.city_id) AS num_cities
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id
JOIN address a ON c.address_id = a.address_id
JOIN city c ON a.city_id = c.city_id
GROUP BY f.title
HAVING COUNT(DISTINCT c.city_id) > 10;","WITH movie_city_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT ci.city_id) AS city_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    city_count
FROM 
    movie_city_rentals
WHERE 
    city_count > 10;",0.0
47.1,Which movies have been rented the most by customers under the age of 25? Show the movie title and the number of rentals.,-- Unable to provide an adequate query for the request.  The provided schema does not contain customer age information.  Additional information is needed in the database schema to answer this question.,"WITH young_customer_rentals AS (
    SELECT 
        f.title, 
        COUNT(r.rental_id) AS rentals_count
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN customer c ON r.customer_id = c.customer_id
    WHERE 
        EXTRACT(YEAR FROM AGE(CURRENT_DATE, c.create_date)) < 25
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    title, 
    rentals_count
FROM 
    young_customer_rentals
ORDER BY 
    rentals_count DESC
LIMIT 10;
",0.0
47.2,Film mana yang paling banyak disewa oleh pelanggan berusia di bawah 25 tahun? Tampilkan judul film dan jumlah penyewaan.,"SELECT f.title, COUNT(r.rental_id) AS total_rentals
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id
WHERE c.age < 25
GROUP BY f.title
ORDER BY total_rentals DESC
LIMIT 1;","WITH young_customer_rentals AS (
    SELECT 
        f.title, 
        COUNT(r.rental_id) AS rentals_count
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN customer c ON r.customer_id = c.customer_id
    WHERE 
        EXTRACT(YEAR FROM AGE(CURRENT_DATE, c.create_date)) < 25
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    title, 
    rentals_count
FROM 
    young_customer_rentals
ORDER BY 
    rentals_count DESC
LIMIT 10;
",0.0
48.1,Which movies have the highest revenue but have never been rented on weekends? Show the movie title and total revenue.,"SELECT f.title, SUM(p.amount) AS total_revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
WHERE EXTRACT(DOW FROM r.rental_date) NOT IN (0, 6)
GROUP BY f.title
ORDER BY total_revenue DESC;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
    WHERE 
        EXTRACT(DOW FROM r.rental_date) NOT IN (0, 6)
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    title, 
    total_revenue
FROM 
    film_revenue
ORDER BY 
    total_revenue DESC
LIMIT 10;
",0.0
48.2,Film mana yang pendapatannya tinggi tapi tidak pernah disewa saat akhir pekan? Tampilkan judul film dan total pendapatan.,"SELECT f.title, SUM(p.amount) AS total_revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
LEFT JOIN payment p ON r.rental_id = p.rental_id
WHERE r.rental_date IS NULL OR DAYOFWEEK(r.rental_date) NOT IN (1,7)
GROUP BY f.title
HAVING SUM(p.amount) > (SELECT AVG(amount) FROM payment)
;","WITH film_revenue AS (
    SELECT 
        f.film_id, 
        f.title, 
        SUM(p.amount) AS total_revenue
    FROM 
        film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
    WHERE 
        EXTRACT(DOW FROM r.rental_date) NOT IN (0, 6)
    GROUP BY 
        f.film_id, f.title
)
SELECT 
    title, 
    total_revenue
FROM 
    film_revenue
ORDER BY 
    total_revenue DESC
LIMIT 10;
",0.0
49.1,Which customers have rented movies from every category but have never rented a movie with a rating of 'PG-13'? Show the customer full name.,"SELECT c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category cat ON fc.category_id = cat.category_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT cat.category_id) = (SELECT COUNT(*) FROM category) AND SUM(CASE WHEN f.rating = 'PG-13' THEN 1 ELSE 0 END) = 0;","WITH customer_categories AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT fc.category_id) AS category_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_category fc ON i.film_id = fc.film_id
    GROUP BY 
        c.customer_id
),
customer_no_pg13 AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.rating = 'PG-13'
        )
)
SELECT 
    cc.customer_name
FROM 
    customer_categories cc
    JOIN customer_no_pg13 cnp ON cc.customer_id = cnp.customer_id
WHERE 
    cc.category_count = (SELECT COUNT(*) FROM category);",1.0
49.2,Ada pelanggan yang nyewa dari semua kategori tapi gak pernah nyewa film dengan rating 'PG-13'? Tampilkan nama lengkap pelanggan.,"SELECT 
    c.first_name || ' ' || c.last_name AS full_name
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
JOIN 
    film_category fc ON f.film_id = fc.film_id
JOIN 
    category cat ON fc.category_id = cat.category_id
GROUP BY 
    full_name
HAVING 
    COUNT(DISTINCT cat.category_id) = (SELECT COUNT(*) FROM category) AND SUM(CASE WHEN f.rating = 'PG-13' THEN 1 ELSE 0 END) = 0;","WITH customer_categories AS (
    SELECT 
        c.customer_id, 
        CONCAT(c.first_name, ' ', c.last_name) AS customer_name, 
        COUNT(DISTINCT fc.category_id) AS category_count
    FROM 
        customer c
        JOIN rental r ON c.customer_id = r.customer_id
        JOIN inventory i ON r.inventory_id = i.inventory_id
        JOIN film_category fc ON i.film_id = fc.film_id
    GROUP BY 
        c.customer_id
),
customer_no_pg13 AS (
    SELECT 
        c.customer_id
    FROM 
        customer c
    WHERE 
        NOT EXISTS (
            SELECT 1
            FROM rental r
            JOIN inventory i ON r.inventory_id = i.inventory_id
            JOIN film f ON i.film_id = f.film_id
            WHERE r.customer_id = c.customer_id AND f.rating = 'PG-13'
        )
)
SELECT 
    cc.customer_name
FROM 
    customer_categories cc
    JOIN customer_no_pg13 cnp ON cc.customer_id = cnp.customer_id
WHERE 
    cc.category_count = (SELECT COUNT(*) FROM category);",1.0
50.1,Which movies have been rented by customers from more than 5 different countries? Show the movie title and the number of countries.,"SELECT f.title, COUNT(DISTINCT c.country_id) AS number_of_countries
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer cu ON r.customer_id = cu.customer_id
JOIN address a ON cu.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN country c ON ci.country_id = c.country_id
GROUP BY f.title
HAVING COUNT(DISTINCT c.country_id) > 5;","WITH movie_country_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT co.country_id) AS country_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
        JOIN country co ON ci.country_id = co.country_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    country_count
FROM 
    movie_country_rentals
WHERE 
    country_count > 5;",1.0
50.2,Film mana yang disewa oleh pelanggan dari lebih dari 5 negara? Tampilkan judul film dan jumlah negara.,"SELECT f.title, COUNT(DISTINCT c.country_id) AS number_of_countries
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
JOIN customer AS cu ON r.customer_id = cu.customer_id
JOIN address AS a ON cu.address_id = a.address_id
JOIN city AS ci ON a.city_id = ci.city_id
JOIN country AS c ON ci.country_id = c.country_id
GROUP BY f.title
HAVING COUNT(DISTINCT c.country_id) > 5;","WITH movie_country_rentals AS (
    SELECT 
        f.title, 
        COUNT(DISTINCT co.country_id) AS country_count
    FROM 
        film f
        JOIN inventory i ON f.film_id = i.film_id
        JOIN rental r ON i.inventory_id = r.inventory_id
        JOIN customer c ON r.customer_id = c.customer_id
        JOIN address a ON c.address_id = a.address_id
        JOIN city ci ON a.city_id = ci.city_id
        JOIN country co ON ci.country_id = co.country_id
    GROUP BY 
        f.film_id
)
SELECT 
    title, 
    country_count
FROM 
    movie_country_rentals
WHERE 
    country_count > 5;",1.0
