Question ID,Question,Generated SQL Query,Expected SQL Query,Execution Accuracy
1.1,Can you tell me which faculty did the most research projects? I just need their name (nama) and the number of projects (total_proyek).,"SELECT f.nama, COUNT(p.id_proyek) AS total_proyek FROM Fakultas f LEFT JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas GROUP BY f.nama ORDER BY total_proyek DESC LIMIT 1","SELECT f.nama, COUNT(p.id_proyek) AS total_proyek
  FROM Fakultas f
  JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas
  GROUP BY f.nama
  ORDER BY total_proyek DESC
  LIMIT 1;",1.0
1.2,Fakultas mana yang paling banyak bikin proyek penelitian? Tampilkan nama (nama) dan jumlah proyeknya (total_proyek).,"SELECT f.nama, COUNT(p.id_proyek) AS total_proyek FROM Fakultas f JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas GROUP BY f.nama ORDER BY total_proyek DESC LIMIT 1","SELECT f.nama, COUNT(p.id_proyek) AS total_proyek
  FROM Fakultas f
  JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas
  GROUP BY f.nama
  ORDER BY total_proyek DESC
  LIMIT 1;",1.0
2.1,I’m curious which lecturer guides the most students. Please show their name (nama) and how many students they supervise (total_mahasiswa_dibimbing).,"SELECT d.nama, COUNT(m.id_mahasiswa) AS total_mahasiswa_dibimbing
FROM Dosen AS d
LEFT JOIN Mahasiswa AS m ON d.id_dosen = m.id_pembimbing
WHERE d.id_dosen = (SELECT id_pembimbing FROM Mahasiswa GROUP BY id_pembimbing ORDER BY COUNT(*) DESC LIMIT 1)
GROUP BY d.nama;","SELECT d.nama, COUNT(m.id_mahasiswa) AS total_mahasiswa_dibimbing
  FROM Dosen d
  JOIN Mahasiswa m ON d.id_dosen = m.id_pembimbing
  GROUP BY d.nama
  ORDER BY total_mahasiswa_dibimbing DESC
  LIMIT 1;",0.0
2.2,Dosen mana yang ngebimbing mahasiswa paling banyak? Aku butuh namanya (nama) dan total mahasiswa bimbingannya (total_mahasiswa_dibimbing).,"SELECT d.nama, COUNT(m.id_pembimbing) AS total_mahasiswa_dibimbing FROM Dosen d JOIN Mahasiswa m ON d.id_dosen = m.id_pembimbing GROUP BY d.nama ORDER BY total_mahasiswa_dibimbing DESC LIMIT 1","SELECT d.nama, COUNT(m.id_mahasiswa) AS total_mahasiswa_dibimbing
  FROM Dosen d
  JOIN Mahasiswa m ON d.id_dosen = m.id_pembimbing
  GROUP BY d.nama
  ORDER BY total_mahasiswa_dibimbing DESC
  LIMIT 1;",1.0
3.1,Which student joined the most sessions? I want to see their name (nama) and how many sessions they attended (total_kehadiran).,"WITH StudentSessionCounts AS (
    SELECT id_mahasiswa, COUNT(*) AS total_kehadiran
    FROM CatatanKehadiran
    GROUP BY id_mahasiswa
), MaxAttendance AS (
    SELECT MAX(total_kehadiran) AS max_kehadiran
    FROM StudentSessionCounts
)
SELECT m.nama, ssc.total_kehadiran
FROM Mahasiswa m
JOIN StudentSessionCounts ssc ON m.id_mahasiswa = ssc.id_mahasiswa
WHERE ssc.total_kehadiran = (SELECT max_kehadiran FROM MaxAttendance);","SELECT m.nama, COUNT(k.id_kehadiran) AS total_kehadiran
  FROM Mahasiswa m
  JOIN CatatanKehadiran k ON m.id_mahasiswa = k.id_mahasiswa
  GROUP BY m.nama
  ORDER BY total_kehadiran DESC
  LIMIT 1;",0.0
3.2,Mahasiswa mana yang paling rajin ikut sesi kelas? Kasih liat nama (nama) dan jumlah kehadirannya (total_kehadiran).,"SELECT m.nama, COUNT(ck.id_kehadiran) AS total_kehadiran FROM Mahasiswa AS m LEFT JOIN CatatanKehadiran AS ck ON m.id_mahasiswa = ck.id_mahasiswa GROUP BY m.nama ORDER BY total_kehadiran DESC LIMIT 1","SELECT m.nama, COUNT(k.id_kehadiran) AS total_kehadiran
  FROM Mahasiswa m
  JOIN CatatanKehadiran k ON m.id_mahasiswa = k.id_mahasiswa
  GROUP BY m.nama
  ORDER BY total_kehadiran DESC
  LIMIT 1;",1.0
4.1,What are the top 5 most popular courses? Show me the course title (judul) and how many students joined (total_mahasiswa).,"SELECT mk.judul, COUNT(k.id_mahasiswa) AS total_mahasiswa FROM Kelas AS k JOIN MataKuliah AS mk ON k.id_mk = mk.id_mk GROUP BY mk.judul ORDER BY total_mahasiswa DESC LIMIT 5","SELECT mk.judul, COUNT(e.id_mahasiswa) AS total_mahasiswa
  FROM MataKuliah mk
  JOIN Sesi s ON mk.id_mk = s.id_mk
  JOIN EnrolmenKelas e ON s.id_sesi = e.id_sesi
  GROUP BY mk.judul
  ORDER BY total_mahasiswa DESC
  LIMIT 5;",1.0
4.2,Top 5 matkul yang paling banyak diambil siapa aja ya? Tampilkan judul matkulnya (judul) dan jumlah mahasiswa (total_mahasiswa).,"SELECT mk.judul, COUNT(k.id_mahasiswa) AS total_mahasiswa FROM MataKuliah AS mk JOIN Kelas AS k ON mk.id_mk = k.id_mk GROUP BY mk.judul ORDER BY total_mahasiswa DESC LIMIT 5","SELECT mk.judul, COUNT(e.id_mahasiswa) AS total_mahasiswa
  FROM MataKuliah mk
  JOIN Sesi s ON mk.id_mk = s.id_mk
  JOIN EnrolmenKelas e ON s.id_sesi = e.id_sesi
  GROUP BY mk.judul
  ORDER BY total_mahasiswa DESC
  LIMIT 5;",1.0
5.1,Which faculty uses the most facilities? I need the faculty name (nama) and the number of facilities used (total_fasilitas).,"SELECT f.nama, COUNT(ff.id_fasilitas) AS total_fasilitas FROM Fakultas f JOIN FasilitasFakultas ff ON f.id_fakultas = ff.id_fakultas GROUP BY f.nama ORDER BY total_fasilitas DESC LIMIT 1","SELECT f.nama, COUNT(ff.id_fasilitas) AS total_fasilitas
  FROM Fakultas f
  JOIN FasilitasFakultas ff ON f.id_fakultas = ff.id_fakultas
  GROUP BY f.nama
  ORDER BY total_fasilitas DESC 
  LIMIT 1;",1.0
5.2,Fakultas mana yang paling banyak pake fasilitas? Aku mau liat nama (nama) dan jumlah fasilitasnya (total_fasilitas).,"SELECT f.nama, COUNT(ff.id_fasilitas) AS total_fasilitas FROM Fakultas f JOIN FasilitasFakultas ff ON f.id_fakultas = ff.id_fakultas GROUP BY f.nama ORDER BY total_fasilitas DESC LIMIT 1","SELECT f.nama, COUNT(ff.id_fasilitas) AS total_fasilitas
  FROM Fakultas f
  JOIN FasilitasFakultas ff ON f.id_fakultas = ff.id_fakultas
  GROUP BY f.nama
  ORDER BY total_fasilitas DESC 
  LIMIT 1;",1.0
6.1,Which course has the best average exam score? Show me the title (judul) and the average score (rata_rata_nilai).,"SELECT mk.judul, AVG(hu.nilai_diperoleh) AS rata_rata_nilai FROM MataKuliah AS mk JOIN Ujian AS u ON mk.id_mk = u.id_mk JOIN HasilUjian AS hu ON u.id_ujian = hu.id_ujian GROUP BY mk.judul ORDER BY rata_rata_nilai DESC LIMIT 1","SELECT mk.judul, AVG(h.nilai_diperoleh) AS rata_rata_nilai
  FROM MataKuliah mk
  JOIN Ujian u ON mk.id_mk = u.id_mk
  JOIN HasilUjian h ON u.id_ujian = h.id_ujian
  GROUP BY mk.judul
  ORDER BY rata_rata_nilai DESC
  LIMIT 1;",1.0
6.2,Matkul mana yang nilai ujiannya paling tinggi rata-ratanya? Kasih tau judul (judul) dan nilai rata-rata (rata_rata_nilai).,"SELECT mk.judul, AVG(hu.nilai_diperoleh) AS rata_rata_nilai
FROM HasilUjian hu
JOIN Ujian u ON hu.id_ujian = u.id_ujian
JOIN MataKuliah mk ON u.id_mk = mk.id_mk
GROUP BY mk.judul
ORDER BY rata_rata_nilai DESC
LIMIT 1;","SELECT mk.judul, AVG(h.nilai_diperoleh) AS rata_rata_nilai
  FROM MataKuliah mk
  JOIN Ujian u ON mk.id_mk = u.id_mk
  JOIN HasilUjian h ON u.id_ujian = h.id_ujian
  GROUP BY mk.judul
  ORDER BY rata_rata_nilai DESC
  LIMIT 1;",1.0
7.1,Who is the lecturer with the most publications? Just show their name (nama) and how many they’ve authored (total_publikasi).,"SELECT d.nama, COUNT(pp.id_publikasi) AS total_publikasi
FROM Dosen AS d
JOIN PenulisPublikasi AS pp ON d.id_dosen = pp.id_dosen
GROUP BY d.nama
ORDER BY total_publikasi DESC
LIMIT 1;","SELECT d.nama, COUNT(p.id_publikasi) AS total_publikasi
  FROM Dosen d
  JOIN PenulisPublikasi pp ON d.id_dosen = pp.id_dosen
  JOIN Publikasi p ON pp.id_publikasi = p.id_publikasi
  GROUP BY d.nama
  ORDER BY total_publikasi DESC
  LIMIT 1;",1.0
7.2,Dosen mana yang paling banyak nulis publikasi? Tunjukin namanya (nama) dan total publikasinya (total_publikasi).,"SELECT D.nama, COUNT(PP.id_publikasi) AS total_publikasi FROM Dosen AS D JOIN PenulisPublikasi AS PP ON D.id_dosen = PP.id_dosen GROUP BY D.nama ORDER BY total_publikasi DESC LIMIT 1","SELECT d.nama, COUNT(p.id_publikasi) AS total_publikasi
  FROM Dosen d
  JOIN PenulisPublikasi pp ON d.id_dosen = pp.id_dosen
  JOIN Publikasi p ON pp.id_publikasi = p.id_publikasi
  GROUP BY d.nama
  ORDER BY total_publikasi DESC
  LIMIT 1;",1.0
8.1,Which student has joined the most research projects? I need their name (nama) and the total number (total_partisipasi).,"SELECT m.nama, COUNT(pp.id_proyek) AS total_partisipasi FROM Mahasiswa AS m JOIN PartisipasiPenelitian AS pp ON m.id_mahasiswa = pp.id_mahasiswa GROUP BY m.nama ORDER BY total_partisipasi DESC LIMIT 1","SELECT m.nama, COUNT(pp.id_proyek) AS total_partisipasi
  FROM Mahasiswa m
  JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  GROUP BY m.nama
  ORDER BY total_partisipasi DESC
  LIMIT 1;",1.0
8.2,Mahasiswa mana yang paling sering ikut proyek penelitian? Tunjukin namanya (nama) dan jumlah partisipasinya (total_partisipasi).,"SELECT m.nama, COUNT(pp.id_partisipasi) AS total_partisipasi FROM Mahasiswa m JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa GROUP BY m.nama ORDER BY total_partisipasi DESC LIMIT 1","SELECT m.nama, COUNT(pp.id_proyek) AS total_partisipasi
  FROM Mahasiswa m
  JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  GROUP BY m.nama
  ORDER BY total_partisipasi DESC
  LIMIT 1;",1.0
9.1,Who’s borrowed the most books among students? Please show the ID (id_peminjam) and total borrow count (total_peminjaman).,"SELECT id_peminjam, COUNT(*) AS total_peminjaman FROM PeminjamanBuku WHERE id_peminjam IN (SELECT id_mahasiswa FROM Mahasiswa) GROUP BY id_peminjam ORDER BY total_peminjaman DESC LIMIT 1","SELECT id_peminjam, COUNT(*) AS total_peminjaman
  FROM PeminjamanBuku
  GROUP BY id_peminjam
  ORDER BY total_peminjaman DESC
  LIMIT 1;",0.0
9.2,Mahasiswa mana yang paling sering minjem buku? Aku mau ID-nya (id_peminjam) dan total pinjamannya (total_peminjaman).,"SELECT id_peminjam, COUNT(*) AS total_peminjaman FROM PeminjamanBuku WHERE id_peminjam IN (SELECT id_mahasiswa FROM Mahasiswa) GROUP BY id_peminjam ORDER BY total_peminjaman DESC LIMIT 1","SELECT id_peminjam, COUNT(*) AS total_peminjaman
  FROM PeminjamanBuku
  GROUP BY id_peminjam
  ORDER BY total_peminjaman DESC
  LIMIT 1;",0.0
10.1,Which club has the most members? Show the name (nama) and total members (total_anggota).,"SELECT ok.nama, COUNT(kk.id_mahasiswa) AS total_anggota
FROM OrganisasiKlub ok
JOIN KeanggotaanKlub kk ON ok.id_klub = kk.id_klub
GROUP BY ok.nama
ORDER BY total_anggota DESC
LIMIT 1;","SELECT k.nama, COUNT(kk.id_mahasiswa) AS total_anggota
  FROM OrganisasiKlub k
  JOIN KeanggotaanKlub kk ON k.id_klub = kk.id_klub
  GROUP BY k.nama
  ORDER BY total_anggota DESC
  LIMIT 1;",1.0
10.2,Klub mana yang anggotanya paling banyak? Kasih tau nama klubnya (nama) dan jumlah anggota (total_anggota).,"SELECT ok.nama, COUNT(k.id_mahasiswa) AS total_anggota FROM OrganisasiKlub ok LEFT JOIN KeanggotaanKlub k ON ok.id_klub = k.id_klub GROUP BY ok.nama ORDER BY total_anggota DESC LIMIT 1","SELECT k.nama, COUNT(kk.id_mahasiswa) AS total_anggota
  FROM OrganisasiKlub k
  JOIN KeanggotaanKlub kk ON k.id_klub = kk.id_klub
  GROUP BY k.nama
  ORDER BY total_anggota DESC
  LIMIT 1;",1.0
11.1,"Which student has the highest exam score total? I want to see id_mahasiswa, nama, and total_score.","SELECT m.id_mahasiswa, m.nama, total_nilai_ujian AS total_score FROM Mahasiswa AS m JOIN (SELECT id_mahasiswa, SUM(nilai_diperoleh) AS total_nilai_ujian FROM HasilUjian GROUP BY id_mahasiswa ORDER BY total_nilai_ujian DESC LIMIT 1) AS scores ON m.id_mahasiswa = scores.id_mahasiswa","SELECT h.id_mahasiswa, m.nama, SUM(h.nilai_diperoleh) AS total_score
  FROM HasilUjian h
  JOIN Mahasiswa m ON h.id_mahasiswa = m.id_mahasiswa
  GROUP BY h.id_mahasiswa, m.nama
  ORDER BY total_score DESC
  LIMIT 1;",1.0
11.2,"Mahasiswa mana yang total nilainya dari semua ujian paling tinggi? Aku mau id_mahasiswa, nama, dan total_score.","SELECT id_mahasiswa, nama, SUM(nilai_diperoleh) AS total_score FROM Mahasiswa JOIN HasilUjian ON Mahasiswa.id_mahasiswa = HasilUjian.id_mahasiswa GROUP BY id_mahasiswa, nama ORDER BY total_score DESC LIMIT 1","SELECT h.id_mahasiswa, m.nama, SUM(h.nilai_diperoleh) AS total_score
  FROM HasilUjian h
  JOIN Mahasiswa m ON h.id_mahasiswa = m.id_mahasiswa
  GROUP BY h.id_mahasiswa, m.nama
  ORDER BY total_score DESC
  LIMIT 1;",0.0
12.1,"Can you list all faculties and show how many research projects, publications, and active lecturers each has? Show nama, total_proyek, total_publikasi, total_dosen_aktif.","SELECT F.nama, COALESCE(PP.total_proyek, 0) AS total_proyek, COALESCE(PU.total_publikasi, 0) AS total_publikasi, COALESCE(D.total_dosen_aktif, 0) AS total_dosen_aktif FROM Fakultas F LEFT JOIN (SELECT id_fakultas, COUNT(*) AS total_proyek FROM ProyekPenelitian GROUP BY id_fakultas) PP ON F.id_fakultas = PP.id_fakultas LEFT JOIN (SELECT id_fakultas, COUNT(*) AS total_publikasi FROM Publikasi GROUP BY id_fakultas) PU ON F.id_fakultas = PU.id_fakultas LEFT JOIN (SELECT id_fakultas, COUNT(*) AS total_dosen_aktif FROM Dosen GROUP BY id_fakultas) D ON F.id_fakultas = D.id_fakultas","SELECT f.nama,
  COUNT(DISTINCT p.id_proyek) AS total_proyek,
  COUNT(DISTINCT pb.id_publikasi) AS total_publikasi,
  COUNT(DISTINCT d.id_dosen) AS total_dosen_aktif
  FROM Fakultas f
  LEFT JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas
  LEFT JOIN Publikasi pb ON f.id_fakultas = pb.id_fakultas
  LEFT JOIN Dosen d ON d.id_fakultas = f.id_fakultas
  WHERE d.id_dosen IN (
  SELECT id_dosen FROM PenulisPublikasi
  UNION
  SELECT id_dosen FROM ProyekPenelitian
  )
  GROUP BY f.nama;",1.0
12.2,"Tolong tampilin semua fakultas beserta total proyek, publikasi, dan dosen aktifnya. Kolom: nama, total_proyek, total_publikasi, total_dosen_aktif.","SELECT f.nama, COUNT(DISTINCT p.id_proyek) AS total_proyek, COUNT(DISTINCT pu.id_publikasi) AS total_publikasi, COUNT(DISTINCT d.id_dosen) AS total_dosen_aktif
FROM Fakultas f
LEFT JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas
LEFT JOIN Publikasi pu ON f.id_fakultas = pu.id_fakultas
LEFT JOIN Dosen d ON f.id_fakultas = d.id_fakultas
GROUP BY f.nama;","SELECT f.nama,
  COUNT(DISTINCT p.id_proyek) AS total_proyek,
  COUNT(DISTINCT pb.id_publikasi) AS total_publikasi,
  COUNT(DISTINCT d.id_dosen) AS total_dosen_aktif
  FROM Fakultas f
  LEFT JOIN ProyekPenelitian p ON f.id_fakultas = p.id_fakultas
  LEFT JOIN Publikasi pb ON f.id_fakultas = pb.id_fakultas
  LEFT JOIN Dosen d ON d.id_fakultas = f.id_fakultas
  WHERE d.id_dosen IN (
  SELECT id_dosen FROM PenulisPublikasi
  UNION
  SELECT id_dosen FROM ProyekPenelitian
  )
  GROUP BY f.nama;",1.0
13.1,"Which lecturer has taught the most different subjects? Show me their id_dosen, nama, and how many subjects (total_mk_diajar).","SELECT d.id_dosen, d.nama, COUNT(DISTINCT mk.id_mk) AS total_mk_diajar FROM Dosen AS d JOIN MataKuliah AS mk ON d.id_dosen = mk.id_pengajar GROUP BY d.id_dosen, d.nama ORDER BY total_mk_diajar DESC LIMIT 1","SELECT d.id_dosen, d.nama, COUNT(DISTINCT mk.id_mk) AS total_mk_diajar
  FROM Dosen d
  JOIN Sesi s ON d.id_dosen = s.id_pengajar
  JOIN MataKuliah mk ON mk.id_mk = s.id_mk
  GROUP BY d.id_dosen, d.nama
  ORDER BY total_mk_diajar DESC
  LIMIT 1;",1.0
13.2,"Dosen mana yang pernah ngajar mata kuliah paling banyak? Kasih id_dosen, nama, dan jumlah matkul (total_mk_diajar).","SELECT d.id_dosen, d.nama, COUNT(mk.id_mk) AS total_mk_diajar FROM Dosen AS d JOIN MataKuliah AS mk ON d.id_dosen = mk.id_pengajar GROUP BY d.id_dosen, d.nama ORDER BY total_mk_diajar DESC LIMIT 1","SELECT d.id_dosen, d.nama, COUNT(DISTINCT mk.id_mk) AS total_mk_diajar
  FROM Dosen d
  JOIN Sesi s ON d.id_dosen = s.id_pengajar
  JOIN MataKuliah mk ON mk.id_mk = s.id_mk
  GROUP BY d.id_dosen, d.nama
  ORDER BY total_mk_diajar DESC
  LIMIT 1;",1.0
14.1,"Who are the top 3 students with the best total participation scores? I want id_mahasiswa, nama, and total_partisipasi.","SELECT m.id_mahasiswa, m.nama, COALESCE(SUM(ek.nilai_partisipasi), 0) + COALESCE(SUM(pp.jam_kontribusi), 0) AS total_partisipasi FROM Mahasiswa AS m LEFT JOIN EnrolmenKelas AS ek ON m.id_mahasiswa = ek.id_mahasiswa LEFT JOIN PartisipasiPenelitian AS pp ON m.id_mahasiswa = pp.id_mahasiswa GROUP BY m.id_mahasiswa, m.nama ORDER BY total_partisipasi DESC LIMIT 3","SELECT m.id_mahasiswa, m.nama, SUM(e.nilai_partisipasi) AS total_partisipasi
  FROM EnrolmenKelas e
  JOIN Mahasiswa m ON m.id_mahasiswa = e.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  ORDER BY total_partisipasi DESC
  LIMIT 3;",0.0
14.2,"Tolong tunjukin 3 mahasiswa dengan nilai partisipasi tertinggi. Kolom: id_mahasiswa, nama, total_partisipasi.","SELECT m.id_mahasiswa, m.nama, SUM(ek.nilai_partisipasi) AS total_partisipasi FROM Mahasiswa m JOIN EnrolmenKelas ek ON m.id_mahasiswa = ek.id_mahasiswa GROUP BY m.id_mahasiswa, m.nama ORDER BY total_partisipasi DESC LIMIT 3","SELECT m.id_mahasiswa, m.nama, SUM(e.nilai_partisipasi) AS total_partisipasi
  FROM EnrolmenKelas e
  JOIN Mahasiswa m ON m.id_mahasiswa = e.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  ORDER BY total_partisipasi DESC
  LIMIT 3;",1.0
15.1,"Which students joined more than 2 projects and are in a club? Show id_mahasiswa, nama, total_proyek, and total_klub.","SELECT m.id_mahasiswa, m.nama, pp.total_proyek, kk.total_klub
FROM Mahasiswa AS m
JOIN (SELECT id_mahasiswa, COUNT(*) AS total_proyek FROM PartisipasiPenelitian GROUP BY id_mahasiswa HAVING COUNT(*) > 2) AS pp ON m.id_mahasiswa = pp.id_mahasiswa
JOIN (SELECT id_mahasiswa, COUNT(*) AS total_klub FROM KeanggotaanKlub GROUP BY id_mahasiswa) AS kk ON m.id_mahasiswa = kk.id_mahasiswa;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT pp.id_proyek) AS total_proyek,
  COUNT(DISTINCT kk.id_klub) AS total_klub
  FROM Mahasiswa m
  JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  JOIN KeanggotaanKlub kk ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT pp.id_proyek) > 2;",1.0
15.2,"Siapa aja mahasiswa yang ikut lebih dari 2 proyek dan juga aktif di klub? Tampilkan id_mahasiswa, nama, total_proyek, total_klub.","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT pp.id_proyek) AS total_proyek, COUNT(DISTINCT kk.id_klub) AS total_klub
FROM Mahasiswa AS m
JOIN PartisipasiPenelitian AS pp ON m.id_mahasiswa = pp.id_mahasiswa
JOIN KeanggotaanKlub AS kk ON m.id_mahasiswa = kk.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(DISTINCT pp.id_proyek) > 2;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT pp.id_proyek) AS total_proyek,
  COUNT(DISTINCT kk.id_klub) AS total_klub
  FROM Mahasiswa m
  JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  JOIN KeanggotaanKlub kk ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT pp.id_proyek) > 2;",1.0
16.1,"What are the top 5 facilities with the highest average access? Show id_fasilitas, nama, and avg_akses.","SELECT FF.id_fasilitas, F.nama, AVG(FF.tingkat_akses) AS avg_akses FROM FasilitasFakultas AS FF JOIN Fasilitas AS F ON FF.id_fasilitas = F.id_fasilitas GROUP BY FF.id_fasilitas, F.nama ORDER BY avg_akses DESC LIMIT 5","SELECT f.id_fasilitas, f.nama, AVG(ff.tingkat_akses) AS avg_akses
  FROM Fasilitas f
  JOIN FasilitasFakultas ff ON f.id_fasilitas = ff.id_fasilitas
  GROUP BY f.id_fasilitas, f.nama
  ORDER BY avg_akses DESC
  LIMIT 5;",0.6
16.2,"Fasilitas apa aja yang rata-rata tingkat aksesnya paling tinggi? Aku mau id_fasilitas, nama, avg_akses.","SELECT F.id_fasilitas, F.nama, AVG(FF.tingkat_akses) AS avg_akses FROM Fasilitas AS F JOIN FasilitasFakultas AS FF ON F.id_fasilitas = FF.id_fasilitas GROUP BY F.id_fasilitas, F.nama ORDER BY avg_akses DESC LIMIT 1","SELECT f.id_fasilitas, f.nama, AVG(ff.tingkat_akses) AS avg_akses
  FROM Fasilitas f
  JOIN FasilitasFakultas ff ON f.id_fasilitas = ff.id_fasilitas
  GROUP BY f.id_fasilitas, f.nama
  ORDER BY avg_akses DESC
  LIMIT 5;",0.0
17.1,"Find me lecturers who both supervise students and publish papers. Show id_dosen, nama, total_mahasiswa_bimbingan, total_publikasi.","SELECT d.id_dosen, d.nama, COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa_bimbingan, COUNT(DISTINCT pp.id_publikasi) AS total_publikasi
FROM Dosen AS d
INNER JOIN Mahasiswa AS m ON d.id_dosen = m.id_pembimbing
INNER JOIN PenulisPublikasi AS pp ON d.id_dosen = pp.id_dosen
GROUP BY d.id_dosen, d.nama","SELECT d.id_dosen, d.nama,
  COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa_bimbingan,
  COUNT(DISTINCT pp.id_publikasi) AS total_publikasi
  FROM Dosen d
  LEFT JOIN Mahasiswa m ON d.id_dosen = m.id_pembimbing
  LEFT JOIN PenulisPublikasi pp ON d.id_dosen = pp.id_dosen
  WHERE m.id_mahasiswa IS NOT NULL AND pp.id_publikasi IS NOT NULL
  GROUP BY d.id_dosen, d.nama;",1.0
17.2,"Dosen mana yang bimbing mahasiswa sekaligus bikin publikasi? Tampilkan id_dosen, nama, total_mahasiswa_bimbingan, total_publikasi.","SELECT D.id_dosen, D.nama, COALESCE(M.total_mahasiswa_bimbingan, 0) AS total_mahasiswa_bimbingan, COALESCE(P.total_publikasi, 0) AS total_publikasi FROM Dosen AS D LEFT JOIN (SELECT id_pembimbing, COUNT(*) AS total_mahasiswa_bimbingan FROM Mahasiswa GROUP BY id_pembimbing) AS M ON D.id_dosen = M.id_pembimbing LEFT JOIN (SELECT id_dosen, COUNT(*) AS total_publikasi FROM PenulisPublikasi GROUP BY id_dosen) AS P ON D.id_dosen = P.id_dosen","SELECT d.id_dosen, d.nama,
  COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa_bimbingan,
  COUNT(DISTINCT pp.id_publikasi) AS total_publikasi
  FROM Dosen d
  LEFT JOIN Mahasiswa m ON d.id_dosen = m.id_pembimbing
  LEFT JOIN PenulisPublikasi pp ON d.id_dosen = pp.id_dosen
  WHERE m.id_mahasiswa IS NOT NULL AND pp.id_publikasi IS NOT NULL
  GROUP BY d.id_dosen, d.nama;",0.0
18.1,"Which students both borrow books and attend 10+ sessions? Show id_mahasiswa, nama, total_buku_dipinjam, total_sesi.","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT pb.id_peminjaman) AS total_buku_dipinjam, COUNT(DISTINCT ck.id_sesi) AS total_sesi
FROM Mahasiswa AS m
JOIN PeminjamanBuku AS pb ON m.id_mahasiswa = pb.id_peminjam
JOIN CatatanKehadiran AS ck ON m.id_mahasiswa = ck.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(DISTINCT ck.id_sesi) >= 10;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT pb.id_peminjaman) AS total_buku_dipinjam,
  COUNT(DISTINCT ck.id_sesi) AS total_sesi
  FROM Mahasiswa m
  LEFT JOIN PeminjamanBuku pb ON m.id_mahasiswa = pb.id_peminjam
  LEFT JOIN CatatanKehadiran ck ON m.id_mahasiswa = ck.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT ck.id_sesi) >= 10 AND COUNT(DISTINCT pb.id_peminjaman) > 0;",1.0
18.2,"Mahasiswa mana aja yang suka minjem buku dan hadir di lebih dari 10 sesi? Tampilkan id_mahasiswa, nama, total_buku_dipinjam, total_sesi.","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT pb.id_peminjaman) AS total_buku_dipinjam, COUNT(DISTINCT ck.id_kehadiran) AS total_sesi
FROM Mahasiswa m
JOIN PeminjamanBuku pb ON m.id_mahasiswa = pb.id_peminjam
JOIN CatatanKehadiran ck ON m.id_mahasiswa = ck.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(DISTINCT ck.id_kehadiran) > 10;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT pb.id_peminjaman) AS total_buku_dipinjam,
  COUNT(DISTINCT ck.id_sesi) AS total_sesi
  FROM Mahasiswa m
  LEFT JOIN PeminjamanBuku pb ON m.id_mahasiswa = pb.id_peminjam
  LEFT JOIN CatatanKehadiran ck ON m.id_mahasiswa = ck.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT ck.id_sesi) >= 10 AND COUNT(DISTINCT pb.id_peminjaman) > 0;",1.0
19.1,"List all courses with both a session and an exam, and show the average grade and exam score. Show id_mk, judul, avg_nilai_akhir, avg_nilai_ujian.","SELECT mk.id_mk, mk.judul, n.avg_nilai_akhir, hu.avg_nilai_ujian
FROM MataKuliah AS mk
JOIN (SELECT id_mk, AVG(nilai_akhir) AS avg_nilai_akhir FROM Nilai GROUP BY id_mk) AS n ON mk.id_mk = n.id_mk
JOIN (SELECT id_mk, AVG(nilai_diperoleh) AS avg_nilai_ujian FROM HasilUjian JOIN Ujian ON HasilUjian.id_ujian = Ujian.id_ujian GROUP BY id_mk) AS hu ON mk.id_mk = hu.id_mk
WHERE mk.id_mk IN (SELECT id_mk FROM Sesi INTERSECT SELECT id_mk FROM Ujian);","SELECT mk.id_mk, mk.judul,
  AVG(n.nilai_akhir) AS avg_nilai_akhir,
  AVG(h.nilai_diperoleh) AS avg_nilai_ujian
  FROM MataKuliah mk
  JOIN Nilai n ON mk.id_mk = n.id_mk
  JOIN Ujian u ON mk.id_mk = u.id_mk
  JOIN HasilUjian h ON u.id_ujian = h.id_ujian AND n.id_mahasiswa = h.id_mahasiswa
  GROUP BY mk.id_mk, mk.judul
  HAVING COUNT(DISTINCT u.id_ujian) > 0;",0.0
19.2,"Matkul apa yang punya sesi & ujian? Tampilkan nilai akhir rata-rata dan nilai ujian rata-rata. Kolom: id_mk, judul, avg_nilai_akhir, avg_nilai_ujian.","SELECT mk.id_mk, mk.judul, AVG(n.nilai_akhir) AS avg_nilai_akhir, AVG(hu.nilai_diperoleh) AS avg_nilai_ujian
FROM MataKuliah AS mk
JOIN Sesi AS s ON mk.id_mk = s.id_mk
JOIN Ujian AS u ON mk.id_mk = u.id_mk
JOIN Nilai AS n ON mk.id_mk = n.id_mk
JOIN HasilUjian AS hu ON u.id_ujian = hu.id_ujian
GROUP BY mk.id_mk, mk.judul","SELECT mk.id_mk, mk.judul,
  AVG(n.nilai_akhir) AS avg_nilai_akhir,
  AVG(h.nilai_diperoleh) AS avg_nilai_ujian
  FROM MataKuliah mk
  JOIN Nilai n ON mk.id_mk = n.id_mk
  JOIN Ujian u ON mk.id_mk = u.id_mk
  JOIN HasilUjian h ON u.id_ujian = h.id_ujian AND n.id_mahasiswa = h.id_mahasiswa
  GROUP BY mk.id_mk, mk.judul
  HAVING COUNT(DISTINCT u.id_ujian) > 0;",0.0
20.1,"Which faculties have clubs joined by students from different majors? I want id_fakultas, nama, and total_jurusan_klub.","SELECT f.id_fakultas, f.nama, COUNT(DISTINCT j.id_jurusan) AS total_jurusan_klub
FROM Fakultas f
JOIN Dosen d ON f.id_fakultas = d.id_fakultas
JOIN OrganisasiKlub ok ON d.id_dosen = ok.id_pembimbing_dosen
JOIN KeanggotaanKlub kk ON ok.id_klub = kk.id_klub
JOIN Mahasiswa m ON kk.id_mahasiswa = m.id_mahasiswa
JOIN Jurusan j ON m.id_jurusan = j.id_jurusan
GROUP BY f.id_fakultas, f.nama
HAVING COUNT(DISTINCT j.id_jurusan) > 1;","SELECT f.id_fakultas, f.nama, COUNT(DISTINCT j.id_jurusan) AS total_jurusan_klub
  FROM Fakultas f
  JOIN Mahasiswa m ON f.id_fakultas = m.id_fakultas
  JOIN Jurusan j ON j.id_jurusan = m.id_jurusan
  JOIN KeanggotaanKlub kk ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY f.id_fakultas, f.nama
  ORDER BY total_jurusan_klub DESC;",0.0
20.2,"Fakultas mana yang klubnya diisi mahasiswa dari banyak jurusan? Tampilkan id_fakultas, nama, total_jurusan_klub.","SELECT f.id_fakultas, f.nama, COUNT(DISTINCT j.id_jurusan) AS total_jurusan_klub FROM Fakultas AS f JOIN Jurusan AS j ON f.id_fakultas = j.id_fakultas JOIN Mahasiswa AS m ON j.id_jurusan = m.id_jurusan JOIN KeanggotaanKlub AS kk ON m.id_mahasiswa = kk.id_mahasiswa JOIN OrganisasiKlub AS ok ON kk.id_klub = ok.id_klub WHERE ok.id_klub IN (SELECT id_klub FROM (SELECT id_klub, COUNT(DISTINCT m.id_jurusan) AS total_jurusan FROM Mahasiswa AS m JOIN KeanggotaanKlub AS kk ON m.id_mahasiswa = kk.id_mahasiswa GROUP BY id_klub) AS KlubJurusan WHERE total_jurusan > 1) GROUP BY f.id_fakultas, f.nama","SELECT f.id_fakultas, f.nama, COUNT(DISTINCT j.id_jurusan) AS total_jurusan_klub
  FROM Fakultas f
  JOIN Mahasiswa m ON f.id_fakultas = m.id_fakultas
  JOIN Jurusan j ON j.id_jurusan = m.id_jurusan
  JOIN KeanggotaanKlub kk ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY f.id_fakultas, f.nama
  ORDER BY total_jurusan_klub DESC;",0.0
21.1,"Which faculty head also teaches? Show id_kepala, nama_dosen, and jumlah_mk_diajar.","SELECT F.id_kepala, D.nama, COUNT(M.id_mk) AS jumlah_mk_diajar
FROM Fakultas AS F
JOIN Dosen AS D ON F.id_kepala = D.id_dosen
LEFT JOIN MataKuliah AS M ON D.id_dosen = M.id_pengajar
GROUP BY F.id_kepala, D.nama
HAVING COUNT(M.id_mk) > 0;","SELECT f.id_kepala, d.nama AS nama_dosen, COUNT(mk.id_mk) AS jumlah_mk_diajar
  FROM Fakultas f
  JOIN Dosen d ON f.id_kepala = d.id_dosen
  JOIN MataKuliah mk ON mk.id_pengajar = d.id_dosen
  GROUP BY f.id_kepala, d.nama
  HAVING COUNT(mk.id_mk) > 0;",1.0
21.2,"Kepala fakultas mana yang juga ngajar? Tampilkan id_kepala, nama_dosen, dan jumlah matkul yang diajarkan.","SELECT F.id_kepala, D.nama, COUNT(MK.id_mk) AS jumlah_matkul
FROM Fakultas AS F
JOIN Dosen AS D ON F.id_kepala = D.id_dosen
LEFT JOIN MataKuliah AS MK ON D.id_dosen = MK.id_pengajar
GROUP BY F.id_kepala, D.nama
HAVING COUNT(MK.id_mk) > 0;","SELECT f.id_kepala, d.nama AS nama_dosen, COUNT(mk.id_mk) AS jumlah_mk_diajar
  FROM Fakultas f
  JOIN Dosen d ON f.id_kepala = d.id_dosen
  JOIN MataKuliah mk ON mk.id_pengajar = d.id_dosen
  GROUP BY f.id_kepala, d.nama
  HAVING COUNT(mk.id_mk) > 0;",1.0
22.1,"List students who got a grade for every course they attended. Show id_mahasiswa, nama, and jumlah_mk.","SELECT m.id_mahasiswa, m.nama, COUNT(k.id_mk) AS jumlah_mk
FROM Mahasiswa AS m
JOIN Kelas AS k ON m.id_mahasiswa = k.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(DISTINCT k.id_mk) = (SELECT COUNT(DISTINCT n.id_mk) FROM Nilai AS n WHERE n.id_mahasiswa = m.id_mahasiswa);","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT n.id_mk) AS jumlah_mk
  FROM Mahasiswa m
  JOIN Nilai n ON m.id_mahasiswa = n.id_mahasiswa
  JOIN EnrolmenKelas e ON m.id_mahasiswa = e.id_mahasiswa
  JOIN Sesi s ON e.id_sesi = s.id_sesi
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT n.id_mk) = (
  SELECT COUNT(DISTINCT s2.id_mk)
  FROM EnrolmenKelas e2
  JOIN Sesi s2 ON s2.id_sesi = e2.id_sesi
  WHERE e2.id_mahasiswa = m.id_mahasiswa
  );",1.0
22.2,"Siapa aja mahasiswa yang dapet nilai akhir untuk semua matkul yang dia ambil? Kolom: id_mahasiswa, nama, jumlah_mk.","SELECT m.id_mahasiswa, m.nama, COUNT(k.id_mk) AS jumlah_mk
FROM Mahasiswa AS m
JOIN Kelas AS k ON m.id_mahasiswa = k.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(k.id_mk) = (SELECT COUNT(DISTINCT id_mk) FROM MataKuliah WHERE id_jurusan = m.id_jurusan);","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT n.id_mk) AS jumlah_mk
  FROM Mahasiswa m
  JOIN Nilai n ON m.id_mahasiswa = n.id_mahasiswa
  JOIN EnrolmenKelas e ON m.id_mahasiswa = e.id_mahasiswa
  JOIN Sesi s ON e.id_sesi = s.id_sesi
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT n.id_mk) = (
  SELECT COUNT(DISTINCT s2.id_mk)
  FROM EnrolmenKelas e2
  JOIN Sesi s2 ON s2.id_sesi = e2.id_sesi
  WHERE e2.id_mahasiswa = m.id_mahasiswa
  );",0.0
23.1,"Which students both did research and got a grade above 85? Show id_mahasiswa, nama, total_proyek, nilai_tertinggi.","SELECT m.id_mahasiswa, m.nama, tp.total_proyek, nt.nilai_tertinggi FROM Mahasiswa m JOIN (SELECT id_mahasiswa, COUNT(*) AS total_proyek FROM PartisipasiPenelitian GROUP BY id_mahasiswa) tp ON m.id_mahasiswa = tp.id_mahasiswa JOIN (SELECT id_mahasiswa, MAX(nilai_akhir) AS nilai_tertinggi FROM Nilai GROUP BY id_mahasiswa) nt ON m.id_mahasiswa = nt.id_mahasiswa WHERE m.id_mahasiswa IN (SELECT id_mahasiswa FROM PartisipasiPenelitian INTERSECT SELECT id_mahasiswa FROM Nilai WHERE nilai_akhir > 85);","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT pp.id_proyek) AS total_proyek, MAX(n.nilai_akhir) AS nilai_tertinggi
  FROM Mahasiswa m
  JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  JOIN Nilai n ON m.id_mahasiswa = n.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING MAX(n.nilai_akhir) > 85;",1.0
23.2,"Siapa mahasiswa yang ikut riset dan juga dapet nilai di atas 85? Tampilkan id_mahasiswa, nama, total_proyek, nilai_tertinggi.","SELECT m.id_mahasiswa, m.nama, COUNT(pp.id_proyek) AS total_proyek, MAX(n.nilai_akhir) AS nilai_tertinggi
FROM Mahasiswa m
JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
JOIN Nilai n ON m.id_mahasiswa = n.id_mahasiswa
WHERE n.nilai_akhir > 85
GROUP BY m.id_mahasiswa, m.nama;","SELECT m.id_mahasiswa, m.nama, COUNT(DISTINCT pp.id_proyek) AS total_proyek, MAX(n.nilai_akhir) AS nilai_tertinggi
  FROM Mahasiswa m
  JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  JOIN Nilai n ON m.id_mahasiswa = n.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING MAX(n.nilai_akhir) > 85;",0.8333333333333334
24.1,"Find lecturers who supervise students and teach in multiple semesters. Show id_dosen, nama, total_mahasiswa, jumlah_semester.","SELECT d.id_dosen, d.nama, COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa, COUNT(DISTINCT s.semester) AS jumlah_semester
FROM Dosen AS d
JOIN Mahasiswa AS m ON d.id_dosen = m.id_pembimbing
JOIN Sesi AS s ON d.id_dosen = s.id_pengajar
GROUP BY d.id_dosen, d.nama
HAVING COUNT(DISTINCT s.semester) > 1;","SELECT d.id_dosen, d.nama,
  COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa,
  COUNT(DISTINCT s.semester) AS jumlah_semester
  FROM Dosen d
  JOIN Mahasiswa m ON m.id_pembimbing = d.id_dosen
  JOIN Sesi s ON s.id_pengajar = d.id_dosen
  GROUP BY d.id_dosen, d.nama
  HAVING COUNT(DISTINCT s.semester) > 1;",1.0
24.2,"Dosen mana aja yang ngebimbing mahasiswa dan juga ngajar di lebih dari 1 semester? Tampilkan id_dosen, nama, total_mahasiswa, jumlah_semester.","SELECT d.id_dosen, d.nama, COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa, COUNT(DISTINCT s.semester) AS jumlah_semester
FROM Dosen d
JOIN Mahasiswa m ON d.id_dosen = m.id_pembimbing
JOIN Sesi s ON d.id_dosen = s.id_pengajar
GROUP BY d.id_dosen, d.nama
HAVING COUNT(DISTINCT s.semester) > 1;","SELECT d.id_dosen, d.nama,
  COUNT(DISTINCT m.id_mahasiswa) AS total_mahasiswa,
  COUNT(DISTINCT s.semester) AS jumlah_semester
  FROM Dosen d
  JOIN Mahasiswa m ON m.id_pembimbing = d.id_dosen
  JOIN Sesi s ON s.id_pengajar = d.id_dosen
  GROUP BY d.id_dosen, d.nama
  HAVING COUNT(DISTINCT s.semester) > 1;",1.0
25.1,"Which facility is shared by the most faculties? Show id_fasilitas, nama_fasilitas, and total_fakultas.","SELECT ff.id_fasilitas, f.nama AS nama_fasilitas, COUNT(DISTINCT ff.id_fakultas) AS total_fakultas FROM FasilitasFakultas AS ff JOIN Fasilitas AS f ON ff.id_fasilitas = f.id_fasilitas GROUP BY ff.id_fasilitas, f.nama HAVING COUNT(DISTINCT ff.id_fakultas) = (SELECT MAX(total_fakultas) FROM (SELECT COUNT(DISTINCT id_fakultas) AS total_fakultas FROM FasilitasFakultas GROUP BY id_fasilitas) AS subquery);","SELECT f.id_fasilitas, f.nama AS nama_fasilitas, COUNT(DISTINCT ff.id_fakultas) AS total_fakultas
  FROM Fasilitas f
  JOIN FasilitasFakultas ff ON f.id_fasilitas = ff.id_fasilitas
  GROUP BY f.id_fasilitas, f.nama
  ORDER BY total_fakultas DESC;",1.0
25.2,"Fasilitas mana yang dipake paling banyak fakultas? Tampilkan id_fasilitas, nama_fasilitas, total_fakultas.","SELECT f.id_fasilitas, f.nama, COUNT(ff.id_fakultas) AS total_fakultas FROM Fasilitas AS f JOIN FasilitasFakultas AS ff ON f.id_fasilitas = ff.id_fasilitas GROUP BY f.id_fasilitas, f.nama HAVING COUNT(ff.id_fakultas) = (SELECT MAX(jumlah_fakultas) FROM (SELECT COUNT(id_fakultas) AS jumlah_fakultas FROM FasilitasFakultas GROUP BY id_fasilitas) AS subquery);","SELECT f.id_fasilitas, f.nama AS nama_fasilitas, COUNT(DISTINCT ff.id_fakultas) AS total_fakultas
  FROM Fasilitas f
  JOIN FasilitasFakultas ff ON f.id_fasilitas = ff.id_fasilitas
  GROUP BY f.id_fasilitas, f.nama
  ORDER BY total_fakultas DESC;",1.0
26.1,"Which students never missed any class? I want id_mahasiswa, nama, total_sesi_dihadiri.","SELECT m.id_mahasiswa, m.nama, COUNT(ck.id_sesi) AS total_sesi_dihadiri
FROM Mahasiswa AS m
JOIN CatatanKehadiran AS ck ON m.id_mahasiswa = ck.id_mahasiswa
WHERE m.id_mahasiswa NOT IN (SELECT DISTINCT id_mahasiswa FROM CatatanKehadiran WHERE status != 'present')
GROUP BY m.id_mahasiswa, m.nama;","SELECT m.id_mahasiswa, m.nama, COUNT(*) AS total_sesi_dihadiri
  FROM Mahasiswa m
  JOIN CatatanKehadiran k ON k.id_mahasiswa = m.id_mahasiswa
  WHERE k.status = 'Hadir'
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(*) = (
  SELECT COUNT(*) FROM CatatanKehadiran k2 WHERE k2.id_mahasiswa = m.id_mahasiswa
  );",0.0
26.2,"Siapa mahasiswa yang ga pernah bolos sekalipun? Kolom: id_mahasiswa, nama, total_sesi_dihadiri.","SELECT m.id_mahasiswa, m.nama, COUNT(ck.id_sesi) AS total_sesi_dihadiri FROM Mahasiswa AS m LEFT JOIN CatatanKehadiran AS ck ON m.id_mahasiswa = ck.id_mahasiswa GROUP BY m.id_mahasiswa, m.nama HAVING COUNT(DISTINCT ck.id_sesi) = (SELECT COUNT(*) FROM Sesi)","SELECT m.id_mahasiswa, m.nama, COUNT(*) AS total_sesi_dihadiri
  FROM Mahasiswa m
  JOIN CatatanKehadiran k ON k.id_mahasiswa = m.id_mahasiswa
  WHERE k.status = 'Hadir'
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(*) = (
  SELECT COUNT(*) FROM CatatanKehadiran k2 WHERE k2.id_mahasiswa = m.id_mahasiswa
  );",0.0
27.1,"List clubs where the average GPA of members is above 3.5. Show id_klub, nama_klub, avg_ipk.","SELECT k.id_klub, k.nama AS nama_klub, AVG(n.IPK) AS avg_ipk FROM OrganisasiKlub AS k JOIN KeanggotaanKlub AS kk ON k.id_klub = kk.id_klub JOIN Mahasiswa AS m ON kk.id_mahasiswa = m.id_mahasiswa JOIN Nilai AS n ON m.id_mahasiswa = n.id_mahasiswa GROUP BY k.id_klub, k.nama HAVING AVG(n.IPK) > 3.5","SELECT k.id_klub, k.nama AS nama_klub, AVG(n.IPK) AS avg_ipk
  FROM KeanggotaanKlub kk
  JOIN OrganisasiKlub k ON kk.id_klub = k.id_klub
  JOIN Mahasiswa m ON kk.id_mahasiswa = m.id_mahasiswa
  JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
  GROUP BY k.id_klub, k.nama
  HAVING AVG(n.IPK) > 3.5;",1.0
27.2,"Klub mana aja yang anggota-anggotanya punya IPK rata-rata di atas 3.5? Tampilkan id_klub, nama_klub, avg_ipk.","SELECT ok.id_klub, ok.nama AS nama_klub, AVG(n.IPK) AS avg_ipk FROM OrganisasiKlub AS ok JOIN KeanggotaanKlub AS kk ON ok.id_klub = kk.id_klub JOIN Mahasiswa AS m ON kk.id_mahasiswa = m.id_mahasiswa JOIN Nilai AS n ON m.id_mahasiswa = n.id_mahasiswa GROUP BY ok.id_klub, ok.nama HAVING AVG(n.IPK) > 3.5","SELECT k.id_klub, k.nama AS nama_klub, AVG(n.IPK) AS avg_ipk
  FROM KeanggotaanKlub kk
  JOIN OrganisasiKlub k ON kk.id_klub = k.id_klub
  JOIN Mahasiswa m ON kk.id_mahasiswa = m.id_mahasiswa
  JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
  GROUP BY k.id_klub, k.nama
  HAVING AVG(n.IPK) > 3.5;",1.0
28.1,"Which courses have no students but still have sessions? Show id_mk, judul, jumlah_sesi.","SELECT mk.id_mk, mk.judul, COUNT(s.id_sesi) AS jumlah_sesi FROM MataKuliah mk JOIN Sesi s ON mk.id_mk = s.id_mk WHERE NOT EXISTS (SELECT 1 FROM Kelas k WHERE k.id_mk = mk.id_mk) GROUP BY mk.id_mk, mk.judul","SELECT mk.id_mk, mk.judul, COUNT(s.id_sesi) AS jumlah_sesi
  FROM MataKuliah mk
  JOIN Sesi s ON mk.id_mk = s.id_mk
  WHERE NOT EXISTS (
  SELECT 1 FROM EnrolmenKelas e
  JOIN Sesi s2 ON e.id_sesi = s2.id_sesi
  WHERE s2.id_mk = mk.id_mk
  )
  GROUP BY mk.id_mk, mk.judul;",1.0
28.2,"Matkul mana yang punya sesi tapi ga ada mahasiswa yang daftar? Kolom: id_mk, judul, jumlah_sesi.","SELECT mk.id_mk, mk.judul, COUNT(s.id_mk) AS jumlah_sesi
FROM MataKuliah AS mk
JOIN Sesi AS s ON mk.id_mk = s.id_mk
WHERE mk.id_mk NOT IN (SELECT id_mk FROM EnrolmenKelas AS ek JOIN Sesi AS s ON ek.id_sesi = s.id_sesi)
GROUP BY mk.id_mk, mk.judul;","SELECT mk.id_mk, mk.judul, COUNT(s.id_sesi) AS jumlah_sesi
  FROM MataKuliah mk
  JOIN Sesi s ON mk.id_mk = s.id_mk
  WHERE NOT EXISTS (
  SELECT 1 FROM EnrolmenKelas e
  JOIN Sesi s2 ON e.id_sesi = s2.id_sesi
  WHERE s2.id_mk = mk.id_mk
  )
  GROUP BY mk.id_mk, mk.judul;",1.0
29.1,"Which books were borrowed more than 5 times and still have copies? Show id_buku, judul, total_peminjaman, salinan_tersedia.","SELECT bp.id_buku, bp.judul, BorrowCounts.total_peminjaman, bp.salinan_tersedia
FROM BukuPerpustakaan AS bp
JOIN (SELECT id_buku, COUNT(*) AS total_peminjaman FROM PeminjamanBuku GROUP BY id_buku) AS BorrowCounts
ON bp.id_buku = BorrowCounts.id_buku
WHERE BorrowCounts.total_peminjaman > 5 AND bp.salinan_tersedia > 0;","SELECT b.id_buku, b.judul, COUNT(p.id_peminjaman) AS total_peminjaman, b.salinan_tersedia
  FROM BukuPerpustakaan b
  JOIN PeminjamanBuku p ON b.id_buku = p.id_buku
  GROUP BY b.id_buku, b.judul, b.salinan_tersedia
  HAVING COUNT(p.id_peminjaman) > 5 AND b.salinan_tersedia > 0;",1.0
29.2,"Buku apa aja yang udah dipinjam lebih dari 5x tapi masih tersedia? Kolom: id_buku, judul, total_peminjaman, salinan_tersedia.","SELECT bp.id_buku, bp.judul, tp.total_peminjaman, bp.salinan_tersedia
FROM BukuPerpustakaan AS bp
JOIN (SELECT id_buku, COUNT(*) AS total_peminjaman FROM PeminjamanBuku GROUP BY id_buku HAVING COUNT(*) > 5) AS tp ON bp.id_buku = tp.id_buku
WHERE bp.salinan_tersedia > 0","SELECT b.id_buku, b.judul, COUNT(p.id_peminjaman) AS total_peminjaman, b.salinan_tersedia
  FROM BukuPerpustakaan b
  JOIN PeminjamanBuku p ON b.id_buku = p.id_buku
  GROUP BY b.id_buku, b.judul, b.salinan_tersedia
  HAVING COUNT(p.id_peminjaman) > 5 AND b.salinan_tersedia > 0;",1.0
30.1,"Who are the top 5 lecturers with the most roles (teaching, supervising, publishing)? Show id_dosen, nama, total_peran.","SELECT d.id_dosen, d.nama, COALESCE(mengajar.jumlah_mengajar, 0) + COALESCE(membimbing.jumlah_membimbing, 0) + COALESCE(publikasi.jumlah_publikasi, 0) AS total_peran
FROM Dosen d
LEFT JOIN (SELECT id_pengajar, COUNT(DISTINCT id_mk) AS jumlah_mengajar FROM MataKuliah GROUP BY id_pengajar) AS mengajar ON d.id_dosen = mengajar.id_pengajar
LEFT JOIN (SELECT id_pembimbing, COUNT(DISTINCT id_mahasiswa) AS jumlah_membimbing FROM Mahasiswa GROUP BY id_pembimbing) AS membimbing ON d.id_dosen = membimbing.id_pembimbing
LEFT JOIN (SELECT id_dosen, COUNT(DISTINCT id_publikasi) AS jumlah_publikasi FROM PenulisPublikasi GROUP BY id_dosen) AS publikasi ON d.id_dosen = publikasi.id_dosen
ORDER BY total_peran DESC
LIMIT 5;","SELECT d.id_dosen, d.nama,
  (SELECT COUNT(*) FROM Sesi WHERE id_pengajar = d.id_dosen) +
  (SELECT COUNT(*) FROM Mahasiswa WHERE id_pembimbing = d.id_dosen) +
  (SELECT COUNT(*) FROM PenulisPublikasi WHERE id_dosen = d.id_dosen) AS total_peran
  FROM Dosen d
  ORDER BY total_peran DESC
  LIMIT 5;",1.0
30.2,"5 dosen teraktif dalam hal ngajar, bimbing, dan publikasi siapa aja? Kolom: id_dosen, nama, total_peran.","SELECT d.id_dosen, d.nama, COALESCE(mk.jumlah_mk_diajar, 0) + COALESCE(m.jumlah_mahasiswa_dibimbing, 0) + COALESCE(p.jumlah_publikasi, 0) AS total_peran
FROM Dosen d
LEFT JOIN (
    SELECT id_pengajar, COUNT(*) AS jumlah_mk_diajar
    FROM MataKuliah
    GROUP BY id_pengajar
) mk ON d.id_dosen = mk.id_pengajar
LEFT JOIN (
    SELECT id_pembimbing, COUNT(*) AS jumlah_mahasiswa_dibimbing
    FROM Mahasiswa
    GROUP BY id_pembimbing
) m ON d.id_dosen = m.id_pembimbing
LEFT JOIN (
    SELECT id_dosen, COUNT(*) AS jumlah_publikasi
    FROM PenulisPublikasi
    GROUP BY id_dosen
) p ON d.id_dosen = p.id_dosen
ORDER BY total_peran DESC
LIMIT 5;","SELECT d.id_dosen, d.nama,
  (SELECT COUNT(*) FROM Sesi WHERE id_pengajar = d.id_dosen) +
  (SELECT COUNT(*) FROM Mahasiswa WHERE id_pembimbing = d.id_dosen) +
  (SELECT COUNT(*) FROM PenulisPublikasi WHERE id_dosen = d.id_dosen) AS total_peran
  FROM Dosen d
  ORDER BY total_peran DESC
  LIMIT 5;",1.0
31.1,"Which student is most active overall (sessions, research, clubs)? Show id_mahasiswa, nama, total_sesi, total_proyek, total_klub.","SELECT m.id_mahasiswa, m.nama, s.total_sesi, p.total_proyek, k.total_klub
FROM Mahasiswa AS m
JOIN (
    SELECT id_mahasiswa, COUNT(*) AS total_sesi
    FROM EnrolmenKelas
    GROUP BY id_mahasiswa
) AS s ON m.id_mahasiswa = s.id_mahasiswa
JOIN (
    SELECT id_mahasiswa, COUNT(*) AS total_proyek
    FROM PartisipasiPenelitian
    GROUP BY id_mahasiswa
) AS p ON m.id_mahasiswa = p.id_mahasiswa
JOIN (
    SELECT id_mahasiswa, COUNT(*) AS total_klub
    FROM KeanggotaanKlub
    GROUP BY id_mahasiswa
) AS k ON m.id_mahasiswa = k.id_mahasiswa
ORDER BY (s.total_sesi + p.total_proyek + k.total_klub) DESC
LIMIT 1;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT k.id_sesi) AS total_sesi,
  COUNT(DISTINCT pp.id_proyek) AS total_proyek,
  COUNT(DISTINCT kk.id_klub) AS total_klub
FROM Mahasiswa m
LEFT JOIN CatatanKehadiran k ON k.id_mahasiswa = m.id_mahasiswa
LEFT JOIN PartisipasiPenelitian pp ON pp.id_mahasiswa = m.id_mahasiswa
LEFT JOIN KeanggotaanKlub kk ON kk.id_mahasiswa = m.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
ORDER BY (COUNT(DISTINCT k.id_sesi) + COUNT(DISTINCT pp.id_proyek) + COUNT(DISTINCT kk.id_klub)) DESC
LIMIT 1;
",0.0
31.2,"Mahasiswa mana yang paling aktif secara akademik? Kolom: id_mahasiswa, nama, total_sesi, total_proyek, total_klub.","SELECT m.id_mahasiswa, m.nama, COALESCE(total_sesi, 0) AS total_sesi, COALESCE(total_proyek, 0) AS total_proyek, COALESCE(total_klub, 0) AS total_klub
FROM Mahasiswa m
LEFT JOIN (SELECT id_mahasiswa, COUNT(*) AS total_sesi FROM EnrolmenKelas GROUP BY id_mahasiswa) AS sesi ON m.id_mahasiswa = sesi.id_mahasiswa
LEFT JOIN (SELECT id_mahasiswa, COUNT(*) AS total_proyek FROM PartisipasiPenelitian GROUP BY id_mahasiswa) AS proyek ON m.id_mahasiswa = proyek.id_mahasiswa
LEFT JOIN (SELECT id_mahasiswa, COUNT(*) AS total_klub FROM KeanggotaanKlub GROUP BY id_mahasiswa) AS klub ON m.id_mahasiswa = klub.id_mahasiswa
ORDER BY COALESCE(total_sesi, 0) + COALESCE(total_proyek, 0) + COALESCE(total_klub, 0) DESC
LIMIT 1;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT k.id_sesi) AS total_sesi,
  COUNT(DISTINCT pp.id_proyek) AS total_proyek,
  COUNT(DISTINCT kk.id_klub) AS total_klub
FROM Mahasiswa m
LEFT JOIN CatatanKehadiran k ON k.id_mahasiswa = m.id_mahasiswa
LEFT JOIN PartisipasiPenelitian pp ON pp.id_mahasiswa = m.id_mahasiswa
LEFT JOIN KeanggotaanKlub kk ON kk.id_mahasiswa = m.id_mahasiswa
GROUP BY m.id_mahasiswa, m.nama
ORDER BY (COUNT(DISTINCT k.id_sesi) + COUNT(DISTINCT pp.id_proyek) + COUNT(DISTINCT kk.id_klub)) DESC
LIMIT 1;
",0.0
32.1,"Which courses had the best average participation score? Show id_mk, judul, avg_partisipasi.","SELECT m.id_mk, m.judul, AVG(e.nilai_partisipasi) AS avg_partisipasi
FROM MataKuliah AS m
JOIN Sesi AS s ON m.id_mk = s.id_mk
JOIN EnrolmenKelas AS e ON s.id_sesi = e.id_sesi
GROUP BY m.id_mk, m.judul
ORDER BY avg_partisipasi DESC","SELECT mk.id_mk, mk.judul, AVG(e.nilai_partisipasi) AS avg_partisipasi
  FROM MataKuliah mk
  JOIN Sesi s ON s.id_mk = mk.id_mk
  JOIN EnrolmenKelas e ON e.id_sesi = s.id_sesi
  GROUP BY mk.id_mk, mk.judul
  ORDER BY avg_partisipasi DESC
  LIMIT 5;",0.0
32.2,"Matkul mana yang punya nilai partisipasi tertinggi secara rata-rata? Tampilkan id_mk, judul, avg_partisipasi.","SELECT m.id_mk, m.judul, AVG(e.nilai_partisipasi) AS avg_partisipasi FROM MataKuliah m JOIN EnrolmenKelas e ON m.id_mk = e.id_mk GROUP BY m.id_mk, m.judul ORDER BY avg_partisipasi DESC LIMIT 1","SELECT mk.id_mk, mk.judul, AVG(e.nilai_partisipasi) AS avg_partisipasi
  FROM MataKuliah mk
  JOIN Sesi s ON s.id_mk = mk.id_mk
  JOIN EnrolmenKelas e ON e.id_sesi = s.id_sesi
  GROUP BY mk.id_mk, mk.judul
  ORDER BY avg_partisipasi DESC
  LIMIT 5;",0.0
33.1,"Which lecturers teach in different faculties than the one they belong to? Show id_dosen, nama, assigned_fakultas, taught_fakultas.","SELECT d.id_dosen, d.nama, f.nama AS assigned_fakultas, f2.nama AS taught_fakultas FROM Dosen AS d JOIN Fakultas AS f ON d.id_fakultas = f.id_fakultas JOIN MataKuliah AS mk ON d.id_dosen = mk.id_pengajar JOIN Fakultas AS f2 ON mk.id_fakultas = f2.id_fakultas WHERE f.id_fakultas != f2.id_fakultas","SELECT d.id_dosen, d.nama, f1.nama AS assigned_fakultas, f2.nama AS taught_fakultas
  FROM Dosen d
  JOIN MataKuliah mk ON mk.id_pengajar = d.id_dosen
  JOIN Fakultas f1 ON d.id_fakultas = f1.id_fakultas
  JOIN Fakultas f2 ON mk.id_fakultas = f2.id_fakultas
  WHERE f1.id_fakultas <> f2.id_fakultas;",1.0
33.2,"Dosen mana aja yang ngajar di fakultas berbeda dari tempat asalnya? Kolom: id_dosen, nama, assigned_fakultas, taught_fakultas.","SELECT D.id_dosen, D.nama, D.id_fakultas AS assigned_fakultas, MK.id_fakultas AS taught_fakultas
FROM Dosen AS D
JOIN MataKuliah AS MK ON D.id_dosen = MK.id_pengajar
WHERE D.id_fakultas != MK.id_fakultas;","SELECT d.id_dosen, d.nama, f1.nama AS assigned_fakultas, f2.nama AS taught_fakultas
  FROM Dosen d
  JOIN MataKuliah mk ON mk.id_pengajar = d.id_dosen
  JOIN Fakultas f1 ON d.id_fakultas = f1.id_fakultas
  JOIN Fakultas f2 ON mk.id_fakultas = f2.id_fakultas
  WHERE f1.id_fakultas <> f2.id_fakultas;",1.0
34.1,"Which lecturers taught the same course in 3+ semesters? Show id_dosen, nama, id_mk, judul, total_semester.","SELECT d.id_dosen, d.nama, mk.id_mk, mk.judul, COUNT(DISTINCT s.semester) AS total_semester
FROM Dosen AS d
JOIN Sesi AS s ON d.id_dosen = s.id_pengajar
JOIN MataKuliah AS mk ON s.id_mk = mk.id_mk
GROUP BY d.id_dosen, d.nama, mk.id_mk, mk.judul
HAVING COUNT(DISTINCT s.semester) >= 3;","SELECT d.id_dosen, d.nama, mk.id_mk, mk.judul, COUNT(DISTINCT s.semester) AS total_semester
  FROM Dosen d
  JOIN Sesi s ON s.id_pengajar = d.id_dosen
  JOIN MataKuliah mk ON mk.id_mk = s.id_mk
  GROUP BY d.id_dosen, d.nama, mk.id_mk, mk.judul
  HAVING COUNT(DISTINCT s.semester) >= 3;",1.0
34.2,"Dosen mana yang ngajar matkul yang sama di 3 semester berbeda? Tampilkan id_dosen, nama, id_mk, judul, total_semester.","SELECT D.id_dosen, D.nama, MK.id_mk, MK.judul, COUNT(DISTINCT S.semester) AS total_semester
FROM Dosen AS D
JOIN MataKuliah AS MK ON D.id_dosen = MK.id_pengajar
JOIN Sesi AS S ON MK.id_mk = S.id_mk
GROUP BY D.id_dosen, D.nama, MK.id_mk, MK.judul
HAVING COUNT(DISTINCT S.semester) >= 3;","SELECT d.id_dosen, d.nama, mk.id_mk, mk.judul, COUNT(DISTINCT s.semester) AS total_semester
  FROM Dosen d
  JOIN Sesi s ON s.id_pengajar = d.id_dosen
  JOIN MataKuliah mk ON mk.id_mk = s.id_mk
  GROUP BY d.id_dosen, d.nama, mk.id_mk, mk.judul
  HAVING COUNT(DISTINCT s.semester) >= 3;",1.0
35.1,"Which students were absent more than 5 times? Show id_mahasiswa, nama, total_absen.","SELECT m.id_mahasiswa, m.nama, COUNT(ck.id_kehadiran) AS total_absen
FROM Mahasiswa AS m
JOIN CatatanKehadiran AS ck ON m.id_mahasiswa = ck.id_mahasiswa
WHERE ck.status = 'Absent'
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(ck.id_kehadiran) > 5;","SELECT m.id_mahasiswa, m.nama, COUNT(*) AS total_absen
  FROM Mahasiswa m
  JOIN CatatanKehadiran k ON m.id_mahasiswa = k.id_mahasiswa
  WHERE k.status = 'Tidak Hadir'
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(*) > 5;",1.0
35.2,"Mahasiswa mana yang absen lebih dari 5 kali? Kolom: id_mahasiswa, nama, total_absen.","SELECT m.id_mahasiswa, m.nama, COUNT(ck.id_kehadiran) AS total_absen
FROM Mahasiswa AS m
JOIN CatatanKehadiran AS ck ON m.id_mahasiswa = ck.id_mahasiswa
WHERE (ck.status ILIKE 'Absen' OR ck.status ILIKE 'Tidak Hadir')
GROUP BY m.id_mahasiswa, m.nama
HAVING COUNT(ck.id_kehadiran) > 5;","SELECT m.id_mahasiswa, m.nama, COUNT(*) AS total_absen
  FROM Mahasiswa m
  JOIN CatatanKehadiran k ON m.id_mahasiswa = k.id_mahasiswa
  WHERE k.status = 'Tidak Hadir'
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(*) > 5;",1.0
36.1,"Which research projects involved students from 3+ departments? Show id_proyek, judul, total_jurusan.","SELECT PP.id_proyek, PP.judul, COUNT(DISTINCT M.id_jurusan) AS total_jurusan FROM ProyekPenelitian AS PP JOIN PartisipasiPenelitian AS PaP ON PP.id_proyek = PaP.id_proyek JOIN Mahasiswa AS M ON PaP.id_mahasiswa = M.id_mahasiswa GROUP BY PP.id_proyek, PP.judul HAVING COUNT(DISTINCT M.id_jurusan) >= 3","SELECT p.id_proyek, p.judul, COUNT(DISTINCT m.id_jurusan) AS total_jurusan
  FROM ProyekPenelitian p
  JOIN PartisipasiPenelitian pp ON pp.id_proyek = p.id_proyek
  JOIN Mahasiswa m ON m.id_mahasiswa = pp.id_mahasiswa
  GROUP BY p.id_proyek, p.judul
  HAVING COUNT(DISTINCT m.id_jurusan) >= 3;",1.0
36.2,"Proyek penelitian mana yang diikuti mahasiswa dari minimal 3 jurusan? Kolom: id_proyek, judul, total_jurusan.","SELECT p.id_proyek, p.judul, COUNT(DISTINCT m.id_jurusan) AS total_jurusan FROM ProyekPenelitian p JOIN PartisipasiPenelitian pp ON p.id_proyek = pp.id_proyek JOIN Mahasiswa m ON pp.id_mahasiswa = m.id_mahasiswa GROUP BY p.id_proyek, p.judul HAVING COUNT(DISTINCT m.id_jurusan) >= 3","SELECT p.id_proyek, p.judul, COUNT(DISTINCT m.id_jurusan) AS total_jurusan
  FROM ProyekPenelitian p
  JOIN PartisipasiPenelitian pp ON pp.id_proyek = p.id_proyek
  JOIN Mahasiswa m ON m.id_mahasiswa = pp.id_mahasiswa
  GROUP BY p.id_proyek, p.judul
  HAVING COUNT(DISTINCT m.id_jurusan) >= 3;",1.0
37.1,"Which clubs have students from many departments? Show id_klub, nama, total_jurusan.","SELECT ok.id_klub, ok.nama, COUNT(DISTINCT m.id_jurusan) AS total_jurusan
FROM OrganisasiKlub AS ok
JOIN KeanggotaanKlub AS kk ON ok.id_klub = kk.id_klub
JOIN Mahasiswa AS m ON kk.id_mahasiswa = m.id_mahasiswa
GROUP BY ok.id_klub, ok.nama
HAVING COUNT(DISTINCT m.id_jurusan) > 1;","SELECT k.id_klub, k.nama, COUNT(DISTINCT m.id_jurusan) AS total_jurusan
  FROM OrganisasiKlub k
  JOIN KeanggotaanKlub kk ON kk.id_klub = k.id_klub
  JOIN Mahasiswa m ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY k.id_klub, k.nama
  ORDER BY total_jurusan DESC
  LIMIT 5;",0.0
37.2,"Klub mana yang anggotanya datang dari berbagai jurusan? Tampilkan id_klub, nama, total_jurusan.","SELECT ok.id_klub, ok.nama, COUNT(DISTINCT m.id_jurusan) AS total_jurusan
FROM OrganisasiKlub AS ok
JOIN KeanggotaanKlub AS kk ON ok.id_klub = kk.id_klub
JOIN Mahasiswa AS m ON kk.id_mahasiswa = m.id_mahasiswa
GROUP BY ok.id_klub, ok.nama
HAVING COUNT(DISTINCT m.id_jurusan) > 1;","SELECT k.id_klub, k.nama, COUNT(DISTINCT m.id_jurusan) AS total_jurusan
  FROM OrganisasiKlub k
  JOIN KeanggotaanKlub kk ON kk.id_klub = k.id_klub
  JOIN Mahasiswa m ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY k.id_klub, k.nama
  ORDER BY total_jurusan DESC
  LIMIT 5;",0.0
38.1,"What are the 3 most borrowed books and how many copies are left? Show id_buku, judul, total_peminjaman, salinan_tersedia.","SELECT pb.id_buku, bp.judul, COUNT(pb.id_buku) AS total_peminjaman, bp.salinan_tersedia FROM PeminjamanBuku pb JOIN BukuPerpustakaan bp ON pb.id_buku = bp.id_buku GROUP BY pb.id_buku, bp.judul, bp.salinan_tersedia ORDER BY total_peminjaman DESC LIMIT 3","SELECT b.id_buku, b.judul, COUNT(p.id_peminjaman) AS total_peminjaman, b.salinan_tersedia
  FROM BukuPerpustakaan b
  JOIN PeminjamanBuku p ON p.id_buku = b.id_buku
  GROUP BY b.id_buku, b.judul, b.salinan_tersedia
  ORDER BY total_peminjaman DESC
  LIMIT 3;",0.3333333333333333
38.2,"Apa aja 3 buku yang paling sering dipinjam dan berapa salinan tersisa? Kolom: id_buku, judul, total_peminjaman, salinan_tersedia.","SELECT bp.id_buku, bp.judul, COUNT(pb.id_buku) AS total_peminjaman, bp.salinan_tersedia
FROM BukuPerpustakaan bp
LEFT JOIN PeminjamanBuku pb ON bp.id_buku = pb.id_buku
GROUP BY bp.id_buku, bp.judul, bp.salinan_tersedia
ORDER BY total_peminjaman DESC
LIMIT 3;","SELECT b.id_buku, b.judul, COUNT(p.id_peminjaman) AS total_peminjaman, b.salinan_tersedia
  FROM BukuPerpustakaan b
  JOIN PeminjamanBuku p ON p.id_buku = b.id_buku
  GROUP BY b.id_buku, b.judul, b.salinan_tersedia
  ORDER BY total_peminjaman DESC
  LIMIT 3;",1.0
39.1,"Which students have top GPA and their advisor published something? Show id_mahasiswa, nama, IPK, total_publikasi_pembimbing.","SELECT m.id_mahasiswa, m.nama, n.IPK, COUNT(pp.id_publikasi) AS total_publikasi_pembimbing
FROM Mahasiswa AS m
JOIN Nilai AS n ON m.id_mahasiswa = n.id_mahasiswa
JOIN Dosen AS d ON m.id_pembimbing = d.id_dosen
JOIN PenulisPublikasi AS pp ON d.id_dosen = pp.id_dosen
WHERE n.IPK = (SELECT MAX(IPK) FROM Nilai)
GROUP BY m.id_mahasiswa, m.nama, n.IPK;","SELECT m.id_mahasiswa, m.nama, MAX(n.IPK) AS IPK,
  COUNT(DISTINCT pp.id_publikasi) AS total_publikasi_pembimbing
  FROM Mahasiswa m
  JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
  JOIN Dosen d ON d.id_dosen = m.id_pembimbing
  JOIN PenulisPublikasi pp ON pp.id_dosen = d.id_dosen
  WHERE n.IPK > (SELECT percentile_cont(0.9) WITHIN GROUP (ORDER BY IPK) FROM Nilai)
  GROUP BY m.id_mahasiswa, m.nama;",0.0
39.2,"Siapa mahasiswa IPK-nya masuk top 10% dan pembimbingnya pernah publikasi? Kolom: id_mahasiswa, nama, IPK, total_publikasi_pembimbing.","WITH RankedIPK AS (
    SELECT id_mahasiswa, AVG(IPK) AS avg_ipk, RANK() OVER (ORDER BY AVG(IPK) DESC) as ipk_rank, COUNT(*) OVER () AS total_mahasiswa
    FROM Nilai
    GROUP BY id_mahasiswa
),
DosenPublikasi AS (
    SELECT DISTINCT id_dosen
    FROM PenulisPublikasi
),
TotalPublikasiPembimbing AS (
    SELECT id_dosen, COUNT(id_publikasi) AS total_publikasi
    FROM PenulisPublikasi
    GROUP BY id_dosen
)
SELECT m.id_mahasiswa, m.nama, ri.avg_ipk AS IPK, tpp.total_publikasi AS total_publikasi_pembimbing
FROM Mahasiswa AS m
JOIN RankedIPK AS ri ON m.id_mahasiswa = ri.id_mahasiswa
JOIN DosenPublikasi AS dp ON m.id_pembimbing = dp.id_dosen
LEFT JOIN TotalPublikasiPembimbing AS tpp ON m.id_pembimbing = tpp.id_dosen
WHERE ri.ipk_rank <= ri.total_mahasiswa * 0.1;","SELECT m.id_mahasiswa, m.nama, MAX(n.IPK) AS IPK,
  COUNT(DISTINCT pp.id_publikasi) AS total_publikasi_pembimbing
  FROM Mahasiswa m
  JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
  JOIN Dosen d ON d.id_dosen = m.id_pembimbing
  JOIN PenulisPublikasi pp ON pp.id_dosen = d.id_dosen
  WHERE n.IPK > (SELECT percentile_cont(0.9) WITHIN GROUP (ORDER BY IPK) FROM Nilai)
  GROUP BY m.id_mahasiswa, m.nama;",0.0
40.1,"List faculties with >1 department, 5+ lecturers, and >3 projects. Show id_fakultas, nama, total_jurusan, total_dosen, total_proyek.","SELECT f.id_fakultas, f.nama, j.total_jurusan, d.total_dosen, p.total_proyek
FROM Fakultas f
JOIN (SELECT id_fakultas, COUNT(*) AS total_jurusan FROM Jurusan GROUP BY id_fakultas HAVING COUNT(*) > 1) j ON f.id_fakultas = j.id_fakultas
JOIN (SELECT id_fakultas, COUNT(*) AS total_dosen FROM Dosen GROUP BY id_fakultas HAVING COUNT(*) >= 5) d ON f.id_fakultas = d.id_fakultas
JOIN (SELECT id_fakultas, COUNT(*) AS total_proyek FROM ProyekPenelitian GROUP BY id_fakultas HAVING COUNT(*) > 3) p ON f.id_fakultas = p.id_fakultas;","SELECT f.id_fakultas, f.nama,
  COUNT(DISTINCT j.id_jurusan) AS total_jurusan,
  COUNT(DISTINCT d.id_dosen) AS total_dosen,
  COUNT(DISTINCT p.id_proyek) AS total_proyek
  FROM Fakultas f
  LEFT JOIN Jurusan j ON j.id_fakultas = f.id_fakultas
  LEFT JOIN Dosen d ON d.id_fakultas = f.id_fakultas
  LEFT JOIN ProyekPenelitian p ON p.id_fakultas = f.id_fakultas
  GROUP BY f.id_fakultas, f.nama
  HAVING COUNT(DISTINCT j.id_jurusan) > 1 AND COUNT(DISTINCT d.id_dosen) >= 5 AND COUNT(DISTINCT p.id_proyek) > 3;",1.0
40.2,"Fakultas mana yang punya >1 jurusan, 5+ dosen aktif, dan >3 proyek? Kolom: id_fakultas, nama, total_jurusan, total_dosen, total_proyek.","SELECT F.id_fakultas, F.nama, (SELECT COUNT(*) FROM Jurusan WHERE id_fakultas = F.id_fakultas) AS total_jurusan, (SELECT COUNT(*) FROM Dosen WHERE id_fakultas = F.id_fakultas) AS total_dosen, (SELECT COUNT(*) FROM ProyekPenelitian WHERE id_fakultas = F.id_fakultas) AS total_proyek FROM Fakultas F WHERE F.id_fakultas IN (SELECT id_fakultas FROM Jurusan GROUP BY id_fakultas HAVING COUNT(*) > 1 INTERSECT SELECT id_fakultas FROM Dosen GROUP BY id_fakultas HAVING COUNT(*) >= 5 INTERSECT SELECT id_fakultas FROM ProyekPenelitian GROUP BY id_fakultas HAVING COUNT(*) > 3)","SELECT f.id_fakultas, f.nama,
  COUNT(DISTINCT j.id_jurusan) AS total_jurusan,
  COUNT(DISTINCT d.id_dosen) AS total_dosen,
  COUNT(DISTINCT p.id_proyek) AS total_proyek
  FROM Fakultas f
  LEFT JOIN Jurusan j ON j.id_fakultas = f.id_fakultas
  LEFT JOIN Dosen d ON d.id_fakultas = f.id_fakultas
  LEFT JOIN ProyekPenelitian p ON p.id_fakultas = f.id_fakultas
  GROUP BY f.id_fakultas, f.nama
  HAVING COUNT(DISTINCT j.id_jurusan) > 1 AND COUNT(DISTINCT d.id_dosen) >= 5 AND COUNT(DISTINCT p.id_proyek) > 3;",1.0
41.1,"Which students took exams, did research, and joined clubs? Show id_mahasiswa, nama, total_ujian, total_proyek, total_klub.","SELECT m.id_mahasiswa, m.nama, COALESCE(tu.total_ujian, 0) AS total_ujian, COALESCE(tp.total_proyek, 0) AS total_proyek, COALESCE(tk.total_klub, 0) AS total_klub
FROM Mahasiswa AS m
LEFT JOIN (
    SELECT id_mahasiswa, COUNT(*) AS total_ujian
    FROM HasilUjian
    GROUP BY id_mahasiswa
) AS tu ON m.id_mahasiswa = tu.id_mahasiswa
LEFT JOIN (
    SELECT id_mahasiswa, COUNT(*) AS total_proyek
    FROM PartisipasiPenelitian
    GROUP BY id_mahasiswa
) AS tp ON m.id_mahasiswa = tp.id_mahasiswa
LEFT JOIN (
    SELECT id_mahasiswa, COUNT(*) AS total_klub
    FROM KeanggotaanKlub
    GROUP BY id_mahasiswa
) AS tk ON m.id_mahasiswa = tk.id_mahasiswa
WHERE m.id_mahasiswa IN (SELECT id_mahasiswa FROM HasilUjian INTERSECT SELECT id_mahasiswa FROM PartisipasiPenelitian INTERSECT SELECT id_mahasiswa FROM KeanggotaanKlub);","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT h.id_ujian) AS total_ujian,
  COUNT(DISTINCT pp.id_proyek) AS total_proyek,
  COUNT(DISTINCT kk.id_klub) AS total_klub
  FROM Mahasiswa m
  LEFT JOIN HasilUjian h ON m.id_mahasiswa = h.id_mahasiswa
  LEFT JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  LEFT JOIN KeanggotaanKlub kk ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT h.id_ujian) > 0 AND COUNT(DISTINCT pp.id_proyek) > 0 AND COUNT(DISTINCT kk.id_klub) > 0;",1.0
41.2,"Mahasiswa mana yang ujian, ikut riset, dan aktif di klub? Kolom: id_mahasiswa, nama, total_ujian, total_proyek, total_klub.","SELECT m.id_mahasiswa, m.nama, COALESCE(t_ujian.total_ujian, 0) AS total_ujian, COALESCE(t_proyek.total_proyek, 0) AS total_proyek, COALESCE(t_klub.total_klub, 0) AS total_klub
FROM Mahasiswa AS m
INNER JOIN (SELECT id_mahasiswa FROM HasilUjian INTERSECT SELECT id_mahasiswa FROM PartisipasiPenelitian INTERSECT SELECT id_mahasiswa FROM KeanggotaanKlub) AS s ON m.id_mahasiswa = s.id_mahasiswa
LEFT JOIN (SELECT id_mahasiswa, COUNT(*) AS total_ujian FROM HasilUjian GROUP BY id_mahasiswa) AS t_ujian ON m.id_mahasiswa = t_ujian.id_mahasiswa
LEFT JOIN (SELECT id_mahasiswa, COUNT(*) AS total_proyek FROM PartisipasiPenelitian GROUP BY id_mahasiswa) AS t_proyek ON m.id_mahasiswa = t_proyek.id_mahasiswa
LEFT JOIN (SELECT id_mahasiswa, COUNT(*) AS total_klub FROM KeanggotaanKlub GROUP BY id_mahasiswa) AS t_klub ON m.id_mahasiswa = t_klub.id_mahasiswa;","SELECT m.id_mahasiswa, m.nama,
  COUNT(DISTINCT h.id_ujian) AS total_ujian,
  COUNT(DISTINCT pp.id_proyek) AS total_proyek,
  COUNT(DISTINCT kk.id_klub) AS total_klub
  FROM Mahasiswa m
  LEFT JOIN HasilUjian h ON m.id_mahasiswa = h.id_mahasiswa
  LEFT JOIN PartisipasiPenelitian pp ON m.id_mahasiswa = pp.id_mahasiswa
  LEFT JOIN KeanggotaanKlub kk ON m.id_mahasiswa = kk.id_mahasiswa
  GROUP BY m.id_mahasiswa, m.nama
  HAVING COUNT(DISTINCT h.id_ujian) > 0 AND COUNT(DISTINCT pp.id_proyek) > 0 AND COUNT(DISTINCT kk.id_klub) > 0;",1.0
42.1,"Which faculties have a head who doesn’t teach? Show id_fakultas, nama, id_kepala, nama_kepala.","SELECT f.id_fakultas, f.nama, f.id_kepala, d.nama AS nama_kepala FROM Fakultas f JOIN Dosen d ON f.id_kepala = d.id_dosen WHERE f.id_kepala IN (SELECT id_kepala FROM Fakultas EXCEPT SELECT id_pengajar FROM MataKuliah)","SELECT f.id_fakultas, f.nama, f.id_kepala, d.nama AS nama_kepala
  FROM Fakultas f
  JOIN Dosen d ON f.id_kepala = d.id_dosen
  WHERE NOT EXISTS (
  SELECT 1 FROM MataKuliah mk WHERE mk.id_pengajar = f.id_kepala
  );",1.0
42.2,"Fakultas mana yang kepala fakultasnya ga pernah ngajar? Kolom: id_fakultas, nama, id_kepala, nama_kepala.","SELECT f.id_fakultas, f.nama, f.id_kepala, d.nama AS nama_kepala
FROM Fakultas AS f
JOIN Dosen AS d ON f.id_kepala = d.id_dosen
WHERE f.id_kepala NOT IN (SELECT id_pengajar FROM MataKuliah);","SELECT f.id_fakultas, f.nama, f.id_kepala, d.nama AS nama_kepala
  FROM Fakultas f
  JOIN Dosen d ON f.id_kepala = d.id_dosen
  WHERE NOT EXISTS (
  SELECT 1 FROM MataKuliah mk WHERE mk.id_pengajar = f.id_kepala
  );",1.0
43.1,"Which courses are taught by different lecturers in different semesters? Show id_mk, judul, total_pengajar.","SELECT m.id_mk, m.judul, COUNT(DISTINCT s.id_pengajar) AS total_pengajar FROM MataKuliah m JOIN Sesi s ON m.id_mk = s.id_mk GROUP BY m.id_mk, m.judul HAVING COUNT(DISTINCT s.semester) > 1 AND COUNT(DISTINCT s.id_pengajar) > 1","SELECT mk.id_mk, mk.judul, COUNT(DISTINCT s.id_pengajar) AS total_pengajar
  FROM MataKuliah mk
  JOIN Sesi s ON mk.id_mk = s.id_mk
  GROUP BY mk.id_mk, mk.judul
  HAVING COUNT(DISTINCT s.id_pengajar) > 1;",1.0
43.2,"Matkul mana yang diajar sama banyak dosen di semester berbeda? Kolom: id_mk, judul, total_pengajar.","SELECT mk.id_mk, mk.judul, COUNT(DISTINCT s.id_pengajar) AS total_pengajar
FROM MataKuliah AS mk
JOIN Sesi AS s ON mk.id_mk = s.id_mk
GROUP BY mk.id_mk, mk.judul
HAVING COUNT(DISTINCT CASE WHEN s.semester = 'Ganjil' THEN s.id_pengajar ELSE NULL END) = COUNT(DISTINCT CASE WHEN s.semester = 'Genap' THEN s.id_pengajar ELSE NULL END);","SELECT mk.id_mk, mk.judul, COUNT(DISTINCT s.id_pengajar) AS total_pengajar
  FROM MataKuliah mk
  JOIN Sesi s ON mk.id_mk = s.id_mk
  GROUP BY mk.id_mk, mk.judul
  HAVING COUNT(DISTINCT s.id_pengajar) > 1;",1.0
44.1,"Who got the highest score in each exam? Show id_ujian, id_mahasiswa, nama, nilai_diperoleh.","SELECT h.id_ujian, h.id_mahasiswa, m.nama, h.nilai_diperoleh
FROM HasilUjian AS h
JOIN Mahasiswa AS m ON h.id_mahasiswa = m.id_mahasiswa
WHERE (h.id_ujian, h.nilai_diperoleh) IN (SELECT id_ujian, MAX(nilai_diperoleh) FROM HasilUjian GROUP BY id_ujian);","SELECT h.id_ujian, h.id_mahasiswa, m.nama, h.nilai_diperoleh
  FROM HasilUjian h
  JOIN Mahasiswa m ON m.id_mahasiswa = h.id_mahasiswa
  WHERE h.nilai_diperoleh = (
  SELECT MAX(h2.nilai_diperoleh)
  FROM HasilUjian h2
  WHERE h2.id_ujian = h.id_ujian
  );",1.0
44.2,"Siapa aja mahasiswa dengan nilai tertinggi di setiap ujian? Kolom: id_ujian, id_mahasiswa, nama, nilai_diperoleh.","SELECT hu.id_ujian, hu.id_mahasiswa, m.nama, hu.nilai_diperoleh
FROM HasilUjian AS hu
JOIN Mahasiswa AS m ON hu.id_mahasiswa = m.id_mahasiswa
WHERE (hu.id_ujian, hu.nilai_diperoleh) IN (SELECT id_ujian, MAX(nilai_diperoleh) FROM HasilUjian GROUP BY id_ujian);","SELECT h.id_ujian, h.id_mahasiswa, m.nama, h.nilai_diperoleh
  FROM HasilUjian h
  JOIN Mahasiswa m ON m.id_mahasiswa = h.id_mahasiswa
  WHERE h.nilai_diperoleh = (
  SELECT MAX(h2.nilai_diperoleh)
  FROM HasilUjian h2
  WHERE h2.id_ujian = h.id_ujian
  );",1.0
45.1,"Which books were never borrowed but are in a category that others borrow often? Show id_buku, judul, kategori.","SELECT id_buku, judul, kategori FROM BukuPerpustakaan WHERE id_buku NOT IN (SELECT id_buku FROM PeminjamanBuku) AND kategori IN (SELECT DISTINCT kategori FROM BukuPerpustakaan WHERE id_buku IN (SELECT id_buku FROM PeminjamanBuku))","SELECT b.id_buku, b.judul, b.kategori
  FROM BukuPerpustakaan b
  WHERE NOT EXISTS (
  SELECT 1 FROM PeminjamanBuku p WHERE p.id_buku = b.id_buku
  )
  AND EXISTS (
  SELECT 1 FROM BukuPerpustakaan b2
  JOIN PeminjamanBuku p2 ON p2.id_buku = b2.id_buku
  WHERE b2.kategori = b.kategori
  GROUP BY b2.kategori
  HAVING COUNT(*) > 3
  );",1.0
45.2,"Buku mana yang belum pernah dipinjam tapi termasuk kategori populer? Kolom: id_buku, judul, kategori.","SELECT id_buku, judul, kategori FROM BukuPerpustakaan WHERE kategori = (SELECT kategori FROM BukuPerpustakaan GROUP BY kategori ORDER BY COUNT(*) DESC LIMIT 1) EXCEPT SELECT bp.id_buku, bp.judul, bp.kategori FROM BukuPerpustakaan bp JOIN PeminjamanBuku pb ON bp.id_buku = pb.id_buku","SELECT b.id_buku, b.judul, b.kategori
  FROM BukuPerpustakaan b
  WHERE NOT EXISTS (
  SELECT 1 FROM PeminjamanBuku p WHERE p.id_buku = b.id_buku
  )
  AND EXISTS (
  SELECT 1 FROM BukuPerpustakaan b2
  JOIN PeminjamanBuku p2 ON p2.id_buku = b2.id_buku
  WHERE b2.kategori = b.kategori
  GROUP BY b2.kategori
  HAVING COUNT(*) > 3
  );",1.0
46.1,"Which students have advisors that also write publications? Show id_mahasiswa, nama, id_pembimbing, nama_dosen, total_publikasi.","SELECT M.id_mahasiswa, M.nama, M.id_pembimbing, D.nama AS nama_dosen, (SELECT COUNT(*) FROM PenulisPublikasi PP WHERE PP.id_dosen = M.id_pembimbing) AS total_publikasi FROM Mahasiswa M JOIN Dosen D ON M.id_pembimbing = D.id_dosen WHERE M.id_pembimbing IN (SELECT id_dosen FROM PenulisPublikasi)","SELECT m.id_mahasiswa, m.nama, d.id_dosen AS id_pembimbing, d.nama AS nama_dosen, COUNT(DISTINCT pp.id_publikasi) AS total_publikasi
  FROM Mahasiswa m
  JOIN Dosen d ON m.id_pembimbing = d.id_dosen
  JOIN PenulisPublikasi pp ON pp.id_dosen = d.id_dosen
  GROUP BY m.id_mahasiswa, m.nama, d.id_dosen, d.nama;",1.0
46.2,"Mahasiswa mana yang dosennya juga nulis publikasi? Kolom: id_mahasiswa, nama, id_pembimbing, nama_dosen, total_publikasi.","SELECT m.id_mahasiswa, m.nama, m.id_pembimbing, d.nama AS nama_dosen, COALESCE(p.total_publikasi, 0) AS total_publikasi
FROM Mahasiswa AS m
JOIN Dosen AS d ON m.id_pembimbing = d.id_dosen
LEFT JOIN (
    SELECT id_dosen, COUNT(id_publikasi) AS total_publikasi
    FROM PenulisPublikasi
    GROUP BY id_dosen
) AS p ON d.id_dosen = p.id_dosen;","SELECT m.id_mahasiswa, m.nama, d.id_dosen AS id_pembimbing, d.nama AS nama_dosen, COUNT(DISTINCT pp.id_publikasi) AS total_publikasi
  FROM Mahasiswa m
  JOIN Dosen d ON m.id_pembimbing = d.id_dosen
  JOIN PenulisPublikasi pp ON pp.id_dosen = d.id_dosen
  GROUP BY m.id_mahasiswa, m.nama, d.id_dosen, d.nama;",1.0
47.1,"Which lecturers teach and lead research but don’t supervise students? Show id_dosen, nama.","SELECT d.id_dosen, d.nama
FROM Dosen AS d
WHERE d.id_dosen IN (SELECT mk.id_pengajar FROM MataKuliah AS mk)
  AND d.id_dosen IN (SELECT pp.id_dosen FROM ProyekPenelitian AS pp)
  AND d.id_dosen NOT IN (SELECT m.id_pembimbing FROM Mahasiswa AS m WHERE m.id_pembimbing IS NOT NULL);","SELECT DISTINCT d.id_dosen, d.nama
  FROM Dosen d
  WHERE EXISTS (
  SELECT 1 FROM ProyekPenelitian p WHERE p.id_dosen = d.id_dosen
  )
  AND EXISTS (
  SELECT 1 FROM Sesi s WHERE s.id_pengajar = d.id_dosen
  )
  AND NOT EXISTS (
  SELECT 1 FROM Mahasiswa m WHERE m.id_pembimbing = d.id_dosen
  );",1.0
47.2,"Dosen mana yang ngajar dan riset tapi ga bimbing mahasiswa? Kolom: id_dosen, nama.","SELECT id_dosen, nama
FROM Dosen
WHERE id_dosen IN (SELECT id_pengajar FROM MataKuliah)
INTERSECT
SELECT id_dosen, nama
FROM Dosen
WHERE id_dosen IN (SELECT id_dosen FROM ProyekPenelitian)
EXCEPT
SELECT id_dosen, nama
FROM Dosen
WHERE id_dosen IN (SELECT id_pembimbing FROM Mahasiswa);","SELECT DISTINCT d.id_dosen, d.nama
  FROM Dosen d
  WHERE EXISTS (
  SELECT 1 FROM ProyekPenelitian p WHERE p.id_dosen = d.id_dosen
  )
  AND EXISTS (
  SELECT 1 FROM Sesi s WHERE s.id_pengajar = d.id_dosen
  )
  AND NOT EXISTS (
  SELECT 1 FROM Mahasiswa m WHERE m.id_pembimbing = d.id_dosen
  );",1.0
48.1,"Which facilities are accessed by all faculties? Show id_fasilitas, nama.","SELECT f.id_fasilitas, f.nama FROM Fasilitas AS f INNER JOIN FasilitasFakultas AS ff ON f.id_fasilitas = ff.id_fasilitas GROUP BY f.id_fasilitas HAVING COUNT(DISTINCT ff.id_fakultas) = (SELECT COUNT(*) FROM Fakultas);","SELECT f.id_fasilitas, f.nama
  FROM Fasilitas f
  WHERE (
  SELECT COUNT(DISTINCT ff.id_fakultas)
  FROM FasilitasFakultas ff
  WHERE ff.id_fasilitas = f.id_fasilitas
  ) = (SELECT COUNT(*) FROM Fakultas);",1.0
48.2,"Fasilitas mana yang dipake semua fakultas? Kolom: id_fasilitas, nama.","SELECT f.id_fasilitas, f.nama
FROM Fasilitas AS f
WHERE f.id_fasilitas IN (
    SELECT id_fasilitas
    FROM FasilitasFakultas
    GROUP BY id_fasilitas
    HAVING COUNT(DISTINCT id_fakultas) = (SELECT COUNT(*) FROM Fakultas)
);","SELECT f.id_fasilitas, f.nama
  FROM Fasilitas f
  WHERE (
  SELECT COUNT(DISTINCT ff.id_fakultas)
  FROM FasilitasFakultas ff
  WHERE ff.id_fasilitas = f.id_fasilitas
  ) = (SELECT COUNT(*) FROM Fakultas);",1.0
49.1,"Which departments have students with above-average GPA? Show id_jurusan, nama_jurusan, jumlah_mahasiswa_unggul.","SELECT j.id_jurusan, j.nama, COUNT(m.id_mahasiswa) AS jumlah_mahasiswa_unggul FROM Jurusan AS j JOIN Mahasiswa AS m ON j.id_jurusan = m.id_jurusan WHERE m.id_mahasiswa IN (SELECT id_mahasiswa FROM Nilai WHERE IPK > (SELECT AVG(IPK) FROM Nilai)) GROUP BY j.id_jurusan, j.nama","SELECT 
  j.id_jurusan, 
  j.nama AS nama_jurusan, 
  COUNT(CASE WHEN n.IPK > sub.rata2 THEN 1 END) AS jumlah_mahasiswa_unggul
FROM Jurusan j
LEFT JOIN Mahasiswa m ON m.id_jurusan = j.id_jurusan
LEFT JOIN (
  SELECT 
    m.id_jurusan, 
    AVG(n.IPK) AS rata2
  FROM Mahasiswa m
  JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
  GROUP BY m.id_jurusan
) sub ON j.id_jurusan = sub.id_jurusan
LEFT JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
GROUP BY j.id_jurusan, j.nama;
",0.0
49.2,"Jurusan mana yang punya banyak mahasiswa IPK-nya di atas rata-rata? Kolom: id_jurusan, nama_jurusan, jumlah_mahasiswa_unggul.","SELECT j.id_jurusan, j.nama, COUNT(m.id_mahasiswa) AS jumlah_mahasiswa_unggul
FROM Jurusan AS j
JOIN Mahasiswa AS m ON j.id_jurusan = m.id_jurusan
JOIN Nilai AS n ON m.id_mahasiswa = n.id_mahasiswa
WHERE n.IPK > (SELECT AVG(IPK) FROM Nilai)
GROUP BY j.id_jurusan, j.nama
ORDER BY jumlah_mahasiswa_unggul DESC
LIMIT 1;","SELECT 
  j.id_jurusan, 
  j.nama AS nama_jurusan, 
  COUNT(CASE WHEN n.IPK > sub.rata2 THEN 1 END) AS jumlah_mahasiswa_unggul
FROM Jurusan j
LEFT JOIN Mahasiswa m ON m.id_jurusan = j.id_jurusan
LEFT JOIN (
  SELECT 
    m.id_jurusan, 
    AVG(n.IPK) AS rata2
  FROM Mahasiswa m
  JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
  GROUP BY m.id_jurusan
) sub ON j.id_jurusan = sub.id_jurusan
LEFT JOIN Nilai n ON n.id_mahasiswa = m.id_mahasiswa
GROUP BY j.id_jurusan, j.nama;
",0.0
50.1,"Which clubs have only students from the same department? Show id_klub, nama_klub, id_jurusan.","SELECT ok.id_klub, ok.nama AS nama_klub, m.id_jurusan
FROM OrganisasiKlub AS ok
JOIN KeanggotaanKlub AS kk ON ok.id_klub = kk.id_klub
JOIN Mahasiswa AS m ON kk.id_mahasiswa = m.id_mahasiswa
GROUP BY ok.id_klub, ok.nama, m.id_jurusan
HAVING COUNT(DISTINCT m.id_fakultas) = 1;","SELECT k.id_klub, k.nama AS nama_klub, m.id_jurusan
  FROM OrganisasiKlub k
  JOIN KeanggotaanKlub kk ON kk.id_klub = k.id_klub
  JOIN Mahasiswa m ON kk.id_mahasiswa = m.id_mahasiswa
  GROUP BY k.id_klub, k.nama, m.id_jurusan
  HAVING COUNT(DISTINCT m.id_jurusan) = 1;",1.0
50.2,"Klub mana yang semua anggotanya dari satu jurusan aja? Kolom: id_klub, nama_klub, id_jurusan.","SELECT ok.id_klub, ok.nama AS nama_klub, m.id_jurusan
FROM OrganisasiKlub AS ok
JOIN KeanggotaanKlub AS kk ON ok.id_klub = kk.id_klub
JOIN Mahasiswa AS m ON kk.id_mahasiswa = m.id_mahasiswa
GROUP BY ok.id_klub, ok.nama, m.id_jurusan
HAVING COUNT(DISTINCT m.id_jurusan) = 1;","SELECT k.id_klub, k.nama AS nama_klub, m.id_jurusan
  FROM OrganisasiKlub k
  JOIN KeanggotaanKlub kk ON kk.id_klub = k.id_klub
  JOIN Mahasiswa m ON kk.id_mahasiswa = m.id_mahasiswa
  GROUP BY k.id_klub, k.nama, m.id_jurusan
  HAVING COUNT(DISTINCT m.id_jurusan) = 1;",1.0
