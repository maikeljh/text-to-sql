Question ID,Question,Generated SQL Query,Expected SQL Query,Execution Accuracy
1.1,"Can you show me the actor_id, first_name, and last_name of actors with the first name Scarlett?","SELECT actor_id, first_name, last_name FROM actor WHERE first_name ILIKE 'Scarlett';","SELECT actor_id, first_name, last_name
FROM actor
WHERE first_name ILIKE 'scarlett';",1.0
1.2,"Bisa kasih daftar actor_id, first_name, dan last_name dari aktor yang nama depannya Scarlett?","SELECT actor_id, first_name, last_name FROM actor WHERE first_name = 'Scarlett';","SELECT actor_id, first_name, last_name
FROM actor
WHERE first_name ILIKE 'scarlett';",0.0
2.1,How many different last_name values are there among all the actors?,SELECT COUNT(DISTINCT last_name) FROM actor,SELECT COUNT(DISTINCT last_name) FROM actor;,1.0
2.2,Total ada berapa nama belakang (last_name) aktor yang beda-beda?,SELECT COUNT(DISTINCT last_name) FROM actor,SELECT COUNT(DISTINCT last_name) FROM actor;,1.0
3.1,"Who’s the top 1 actor that’s been in the most films? Just show me their actor_id, first_name, and last_name.","SELECT actor_id, first_name, last_name FROM actor WHERE actor_id IN (SELECT actor_id FROM film_actor GROUP BY actor_id ORDER BY COUNT(film_id) DESC LIMIT 1)","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    COUNT(fa.film_id) AS film_count
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY 
    a.actor_id,
    a.first_name,
    a.last_name
ORDER BY 
    film_count DESC
LIMIT 1;",1.0
3.2,"Siapa aktor top 1 yang paling sering main film? Kasih tau actor_id, first_name, sama last_name-nya aja ya.","SELECT actor_id, first_name, last_name FROM actor WHERE actor_id IN (SELECT actor_id FROM film_actor GROUP BY actor_id ORDER BY COUNT(film_id) DESC LIMIT 1)","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    COUNT(fa.film_id) AS film_count
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY 
    a.actor_id,
    a.first_name,
    a.last_name
ORDER BY 
    film_count DESC
LIMIT 1;",1.0
4.1,"What are the top 5 film genres that brought in the highest revenue by looking from the payments in all store? Just show the genre names, sorted from the highest.","SELECT c.name
FROM payment AS p
JOIN rental AS r ON p.rental_id = r.rental_id
JOIN inventory AS i ON r.inventory_id = i.inventory_id
JOIN film_category AS fc ON i.film_id = fc.film_id
JOIN category AS c ON fc.category_id = c.category_id
GROUP BY c.name
ORDER BY SUM(p.amount) DESC
LIMIT 5;","SELECT 
    c.name AS genre, 
    SUM(p.amount) AS gross_revenue
FROM 
    category c
    JOIN film_category fc ON c.category_id = fc.category_id
    JOIN inventory i ON fc.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    c.name
ORDER BY 
    gross_revenue DESC
LIMIT 5;",1.0
4.2,"Apa aja 5 genre film dengan pemasukan tertinggi dengan melihat pembayaran di semua toko? Cukup tampilkan nama genre-nya, urut dari yang paling banyak.","SELECT c.name
FROM category AS c
JOIN film_category AS fc ON c.category_id = fc.category_id
JOIN inventory AS i ON fc.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
JOIN payment AS p ON r.rental_id = p.rental_id
GROUP BY c.name
ORDER BY SUM(p.amount) DESC
LIMIT 5;","SELECT 
    c.name AS genre, 
    SUM(p.amount) AS gross_revenue
FROM 
    category c
    JOIN film_category fc ON c.category_id = fc.category_id
    JOIN inventory i ON fc.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    c.name
ORDER BY 
    gross_revenue DESC
LIMIT 5;",1.0
5.1,"How much revenue did each store make, looking from the staff's payments? Just show me the store_id and total revenue, sorted from highest to lowest.","SELECT staff.store_id, SUM(payment.amount) AS total_revenue
FROM staff
JOIN payment ON staff.staff_id = payment.staff_id
GROUP BY staff.store_id
ORDER BY total_revenue DESC;","SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.store_id = st.store_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id
ORDER BY total_revenue DESC;",1.0
5.2,"Tiap toko dapet pemasukan berapa kalau dilihat dari pembayaran oleh staffnya? Tampilkan store_id sama total pemasukannya aja, urut dari yang paling besar.","SELECT store_id, SUM(amount) AS total_pemasukan
FROM payment AS p
JOIN staff AS s ON p.staff_id = s.staff_id
GROUP BY store_id
ORDER BY total_pemasukan DESC;","SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.store_id = st.store_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id
ORDER BY total_revenue DESC;",1.0
6.1,Which language shows up the most in our movie list? Just give me the top 1 language name.,SELECT name FROM language WHERE language_id IN (SELECT language_id FROM film GROUP BY language_id ORDER BY COUNT(*) DESC LIMIT 1),"SELECT 
    l.name
FROM 
    language l
    JOIN film f ON l.language_id = f.language_id
GROUP BY 
    l.name
ORDER BY
    COUNT(f.film_id) DESC
LIMIT 1;",1.0
6.2,Bahasa apa yang paling sering muncul di daftar film kita? Cukup kasih nama bahasa yang jadi top 1 aja.,SELECT name FROM language WHERE language_id IN (SELECT language_id FROM film GROUP BY language_id ORDER BY COUNT(*) DESC LIMIT 1),"SELECT 
    l.name
FROM 
    language l
    JOIN film f ON l.language_id = f.language_id
GROUP BY 
    l.name
ORDER BY
    COUNT(f.film_id) DESC
LIMIT 1;",1.0
7.1,"Who are the top 5 customers based on how many movies they've rented? Show their customer ID, first name, last name, and total number of rentals, sorted from highest to lowest.","SELECT c.customer_id, c.first_name, c.last_name, COUNT(r.rental_id) AS total_rentals
FROM customer AS c
JOIN rental AS r ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY total_rentals DESC
LIMIT 5;","SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) as total_rentals
FROM
    customer c
    JOIN rental r ON c.customer_id= r.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    total_rentals DESC
LIMIT 5;",1.0
7.2,"Siapa sih 5 pelanggan yang paling sering nyewa film? Tunjukin customer ID, nama depan, nama belakang, sama total film yang mereka sewa, urut dari yang paling banyak ya.","SELECT c.customer_id, c.first_name, c.last_name, COUNT(r.rental_id) AS total_rentals
FROM customer AS c
JOIN rental AS r ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY total_rentals DESC
LIMIT 5;","SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) as total_rentals
FROM
    customer c
    JOIN rental r ON c.customer_id= r.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    total_rentals DESC
LIMIT 5;",1.0
9.1,"Are there any movies in our collection that have never been rented at all, across any store? I need the film ID, title, and release year.","SELECT film_id, title, release_year FROM film EXCEPT SELECT f.film_id, f.title, f.release_year FROM film f JOIN inventory i ON f.film_id = i.film_id JOIN rental r ON i.inventory_id = r.inventory_id","SELECT 
    f.film_id, 
    f.title, 
    f.release_year
FROM 
    film f
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM inventory i
        JOIN rental r ON i.inventory_id = r.inventory_id
        WHERE i.film_id = f.film_id
    )
ORDER BY f.film_id;",1.0
9.2,"Ada nggak film di koleksi kita yang belum pernah disewa sama sekali di semua store? Aku butuh film ID, judul, dan tahun rilisnya.","SELECT film_id, title, release_year
FROM film
EXCEPT
SELECT f.film_id, f.title, f.release_year
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id;","SELECT 
    f.film_id, 
    f.title, 
    f.release_year
FROM 
    film f
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM inventory i
        JOIN rental r ON i.inventory_id = r.inventory_id
        WHERE i.film_id = f.film_id
    )
ORDER BY f.film_id;",1.0
10.1,"How much total revenue has each actor generated from the movies they've appeared in by looking from the payments of all store? Show the actor ID, first name, last name, and total revenue, sorted from highest to lowest.","SELECT A.actor_id, A.first_name, A.last_name, SUM(P.amount) AS total_revenue
FROM actor AS A
JOIN film_actor AS FA ON A.actor_id = FA.actor_id
JOIN film AS F ON FA.film_id = F.film_id
JOIN inventory AS I ON F.film_id = I.film_id
JOIN rental AS R ON I.inventory_id = R.inventory_id
JOIN payment AS P ON R.rental_id = P.rental_id
GROUP BY A.actor_id, A.first_name, A.last_name
ORDER BY total_revenue DESC;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    SUM(p.amount) AS total_revenue
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
    JOIN inventory i ON fa.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    a.actor_id,
    a.first_name,
    a.last_name
ORDER BY 
    total_revenue DESC;",1.0
10.2,"Berapa total pemasukan yang dihasilkan tiap aktor dari film yang mereka bintangi dengan melihat pembayaran di seluruh toko? Tampilkan ID aktor, nama depan, nama belakang, dan total pendapatannya, diurutkan dari yang paling besar.","SELECT fa.actor_id, a.first_name, a.last_name, SUM(p.amount) AS total_revenue
FROM payment AS p
JOIN rental AS r ON p.rental_id = r.rental_id
JOIN inventory AS i ON r.inventory_id = i.inventory_id
JOIN film AS f ON i.film_id = f.film_id
JOIN film_actor AS fa ON f.film_id = fa.film_id
JOIN actor AS a ON fa.actor_id = a.actor_id
GROUP BY fa.actor_id, a.first_name, a.last_name
ORDER BY total_revenue DESC;","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name, 
    SUM(p.amount) AS total_revenue
FROM 
    actor a
    JOIN film_actor fa ON a.actor_id = fa.actor_id
    JOIN inventory i ON fa.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    a.actor_id,
    a.first_name,
    a.last_name
ORDER BY 
    total_revenue DESC;",1.0
11.1,Which staff member handled the highest total payment? Just show their staff ID and the total amount they processed.,"SELECT staff_id, SUM(amount) AS total_amount FROM payment GROUP BY staff_id ORDER BY total_amount DESC LIMIT 1;","SELECT 
    st.staff_id,
    SUM(p.amount) AS total_amount_processed
FROM 
    staff st
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY 
    st.staff_id
ORDER BY 
    total_amount_processed DESC
LIMIT 1;",1.0
11.2,Siapa staf yang memproses pembayaran dengan total terbesar? Tampilkan ID staf dan total jumlah yang mereka proses.,"SELECT staff_id, SUM(amount) AS total_amount
FROM payment
GROUP BY staff_id
ORDER BY total_amount DESC
LIMIT 1;","SELECT 
    st.staff_id,
    SUM(p.amount) AS total_amount_processed
FROM 
    staff st
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY 
    st.staff_id
ORDER BY 
    total_amount_processed DESC
LIMIT 1;",1.0
14.1,"Which pairs of actors have appeared together in the most films? Show only the actor IDs for each pair and how many films they've worked on together, sorted from most to least.","SELECT fa1.actor_id, fa2.actor_id, COUNT(*) AS film_count
FROM film_actor fa1
JOIN film_actor fa2 ON fa1.film_id = fa2.film_id AND fa1.actor_id < fa2.actor_id
GROUP BY fa1.actor_id, fa2.actor_id
ORDER BY film_count DESC;","SELECT a1.actor_id, a2.actor_id, COUNT(*) AS num_films_together
FROM film_actor AS fa1
JOIN film_actor AS fa2 ON fa1.film_id = fa2.film_id AND fa1.actor_id < fa2.actor_id
JOIN actor AS a1 ON fa1.actor_id = a1.actor_id
JOIN actor AS a2 ON fa2.actor_id = a2.actor_id
GROUP BY a1.actor_id, a2.actor_id
ORDER BY num_films_together DESC;",1.0
14.2,"Pasangan aktor mana saja yang paling sering main film bareng? Tampilkan ID kedua aktor dan jumlah film yang mereka bintangi bersama, urut dari yang paling banyak.","SELECT fa1.actor_id AS actor1_id, fa2.actor_id AS actor2_id, COUNT(*) AS film_count
FROM film_actor fa1
JOIN film_actor fa2 ON fa1.film_id = fa2.film_id AND fa1.actor_id < fa2.actor_id
GROUP BY fa1.actor_id, fa2.actor_id
ORDER BY film_count DESC;","SELECT a1.actor_id, a2.actor_id, COUNT(*) AS num_films_together
FROM film_actor AS fa1
JOIN film_actor AS fa2 ON fa1.film_id = fa2.film_id AND fa1.actor_id < fa2.actor_id
JOIN actor AS a1 ON fa1.actor_id = a1.actor_id
JOIN actor AS a2 ON fa2.actor_id = a2.actor_id
GROUP BY a1.actor_id, a2.actor_id
ORDER BY num_films_together DESC;",1.0
17.1,"Which movie has the highest average rental duration per customer? Show the film ID, title, and average rental duration. Just return the top 1.","SELECT f.film_id, f.title, AVG(r.return_date - r.rental_date) AS average_rental_duration
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title
ORDER BY average_rental_duration DESC
LIMIT 1;","SELECT f.film_id, f.title, AVG(f.rental_duration) AS average_rental_duration
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title
ORDER BY average_rental_duration DESC
LIMIT 1;",0.0
17.2,"Film mana yang punya rata-rata waktu sewa paling lama per pelanggan? Tampilkan ID film, judul, dan rata-rata durasi sewanya. Cukup ambil satu yang paling tinggi.","SELECT f.film_id, f.title, AVG(rental.return_date - rental.rental_date) AS avg_rental_duration
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental ON i.inventory_id = rental.inventory_id
GROUP BY f.film_id, f.title
ORDER BY avg_rental_duration DESC
LIMIT 1;","SELECT f.film_id, f.title, AVG(f.rental_duration) AS average_rental_duration
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id, f.title
ORDER BY average_rental_duration DESC
LIMIT 1;",0.0
18.1,"Which staff member has processed the most payments, and what is the total amount they’ve handled? Show the staff ID, first name, last name, and total amount. Just return the top 1.","SELECT staff.staff_id, staff.first_name, staff.last_name, SUM(payment.amount) AS total_amount
FROM staff
JOIN payment ON staff.staff_id = payment.staff_id
GROUP BY staff.staff_id, staff.first_name, staff.last_name
ORDER BY total_amount DESC
LIMIT 1;","SELECT 
    s.staff_id, 
    s.first_name, 
    s.last_name, 
    COUNT(p.payment_id) AS total_payments, 
    SUM(p.amount) AS total_amount
FROM 
    staff s
    JOIN payment p ON s.staff_id = p.staff_id
GROUP BY 
    s.staff_id
ORDER BY 
    total_amount DESC;",0.0
18.2,"Siapa staf yang paling banyak memproses pembayaran, dan berapa total yang mereka proses? Tampilkan ID staf, nama depan, nama belakang, dan total jumlahnya. Cukup ambil satu yang paling atas.","SELECT staff_id, first_name, last_name, SUM(amount) AS total_amount
FROM payment AS pay
JOIN staff AS st ON pay.staff_id = st.staff_id
GROUP BY staff_id, first_name, last_name
ORDER BY total_amount DESC
LIMIT 1;","SELECT 
    s.staff_id, 
    s.first_name, 
    s.last_name, 
    COUNT(p.payment_id) AS total_payments, 
    SUM(p.amount) AS total_amount
FROM 
    staff s
    JOIN payment p ON s.staff_id = p.staff_id
GROUP BY 
    s.staff_id
ORDER BY 
    total_amount DESC;",0.0
25.1,"Which actors have never appeared in any films with a rating of 'R'? Show the actor ID, first name, and last name.","SELECT actor_id, first_name, last_name
FROM actor
WHERE actor_id NOT IN (
    SELECT fa.actor_id
    FROM film_actor fa
    JOIN film f ON fa.film_id = f.film_id
    WHERE f.rating = 'R'
);","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name
FROM 
    actor a
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM film_actor fa
        JOIN film f ON fa.film_id = f.film_id
        WHERE fa.actor_id = a.actor_id AND f.rating = 'R'
    );",1.0
25.2,"Aktor mana yang belum pernah main di film manapun dengan rating 'R'? Tampilkan ID aktor, nama depan, dan nama belakang.","SELECT actor_id, first_name, last_name
FROM actor
WHERE actor_id NOT IN (
    SELECT fa.actor_id
    FROM film_actor fa
    JOIN film f ON fa.film_id = f.film_id
    WHERE f.rating = 'R'
);","SELECT 
    a.actor_id, 
    a.first_name, 
    a.last_name
FROM 
    actor a
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM film_actor fa
        JOIN film f ON fa.film_id = f.film_id
        WHERE fa.actor_id = a.actor_id AND f.rating = 'R'
    );",1.0
26.1,"Get the top 1 film with the highest replacement cost among those that have never been rented in any store. Show the film ID, title, and replacement cost.","SELECT film_id, title, replacement_cost FROM film WHERE film_id NOT IN (SELECT film_id FROM inventory WHERE inventory_id IN (SELECT inventory_id FROM rental)) ORDER BY replacement_cost DESC LIMIT 1","SELECT 
    f.film_id, 
    f.title, 
    f.replacement_cost
FROM 
    film f
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM inventory i
        JOIN rental r ON i.inventory_id = r.inventory_id
        WHERE i.film_id = f.film_id
    )
ORDER BY 
    f.replacement_cost DESC
LIMIT 1;
",1.0
26.2,"Ambil 1 film dengan biaya ganti tertinggi yang belum pernah disewa di toko mana pun. Tampilkan ID film, judul, dan biaya ganti.","SELECT film_id, title, replacement_cost
FROM film
WHERE film_id NOT IN (SELECT film_id FROM inventory)
ORDER BY replacement_cost DESC
LIMIT 1;","SELECT 
    f.film_id, 
    f.title, 
    f.replacement_cost
FROM 
    film f
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM inventory i
        JOIN rental r ON i.inventory_id = r.inventory_id
        WHERE i.film_id = f.film_id
    )
ORDER BY 
    f.replacement_cost DESC
LIMIT 1;
",1.0
34.1,List the movies that have been rented under 10 times in total. Include each movie’s title and the number of times it has been rented. Order the results by title alphabetically.,"SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
GROUP BY f.title
HAVING COUNT(r.rental_id) < 10
ORDER BY f.title;","SELECT 
    f.title, 
    COUNT(r.rental_id) AS rentals_count
FROM 
    film f
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY 
    f.title
HAVING 
    COUNT(r.rental_id) < 10
order by title;",0.0
34.2,"Film apa saja yang telah disewa kurang dari 10 kali secara keseluruhan? Tampilkan judul film dan jumlah total penyewaannya, lalu urutkan hasilnya berdasarkan judul secara alfabet.","SELECT f.title, COUNT(r.rental_id) AS total_rentals
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
GROUP BY f.title
HAVING COUNT(r.rental_id) < 10
ORDER BY f.title;","SELECT 
    f.title, 
    COUNT(r.rental_id) AS rentals_count
FROM 
    film f
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY 
    f.title
HAVING 
    COUNT(r.rental_id) < 10
order by title;",0.0
39.1,Which movies have the lowest number of actors and have never been rented in all stores? Show the movie title and number of actors. Get top 1,"SELECT f.title, COUNT(fa.actor_id) AS num_actors
FROM film AS f
JOIN film_actor AS fa ON f.film_id = fa.film_id
LEFT JOIN inventory AS i ON f.film_id = i.film_id
LEFT JOIN rental AS r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL
GROUP BY f.title
ORDER BY num_actors
LIMIT 1;","SELECT 
    f.title, 
    COUNT(DISTINCT fa.actor_id) AS actor_count
FROM 
    film f
JOIN film_actor fa ON f.film_id = fa.film_id
WHERE NOT EXISTS (
    SELECT 1
    FROM inventory i
    JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE i.film_id = f.film_id
)
GROUP BY f.film_id, f.title
ORDER BY actor_count ASC
LIMIT 1;",1.0
39.2,Film mana yang punya sedikit aktor dan belum pernah disewa di toko manapun? Tampilkan judul film dan jumlah aktor. Dapatkan top 1,"SELECT f.title, COUNT(fa.actor_id) AS num_actors
FROM film AS f
JOIN film_actor AS fa ON f.film_id = fa.film_id
LEFT JOIN inventory AS i ON f.film_id = i.film_id
WHERE i.inventory_id IS NULL
GROUP BY f.title
ORDER BY num_actors ASC
LIMIT 1;","SELECT 
    f.title, 
    COUNT(DISTINCT fa.actor_id) AS actor_count
FROM 
    film f
JOIN film_actor fa ON f.film_id = fa.film_id
WHERE NOT EXISTS (
    SELECT 1
    FROM inventory i
    JOIN rental r ON i.inventory_id = r.inventory_id
    WHERE i.film_id = f.film_id
)
GROUP BY f.film_id, f.title
ORDER BY actor_count ASC
LIMIT 1;",1.0
47.1,Find the top 1 movie most frequently rented by customers who are no longer active. Display the title and the rental count. Sort by film title too,"SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
JOIN customer AS c ON r.customer_id = c.customer_id
WHERE c.activebool = FALSE
GROUP BY f.title
ORDER BY rental_count DESC, f.title
LIMIT 1;","SELECT 
    f.title, 
    COUNT(*) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id
WHERE c.active = 0
GROUP BY f.film_id, f.title
ORDER BY rental_count DESC, f.title ASC
LIMIT 1;",0.0
47.2,Film mana yang paling banyak disewa oleh pelanggan dan sedang tidak aktif? Tampilkan judul film dan jumlah rentalnya. Dapatkan top 1 dan urutkan juga berdasarkan judulnya,"SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film AS f
JOIN inventory AS i ON f.film_id = i.film_id
JOIN rental AS r ON i.inventory_id = r.inventory_id
JOIN customer AS c ON r.customer_id = c.customer_id
WHERE c.activebool = FALSE
GROUP BY f.title
ORDER BY rental_count DESC, f.title
LIMIT 1;","SELECT 
    f.title, 
    COUNT(*) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id
WHERE c.active = 0
GROUP BY f.film_id, f.title
ORDER BY rental_count DESC, f.title ASC
LIMIT 1;",0.0
